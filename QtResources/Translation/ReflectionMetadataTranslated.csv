Key,Context,Example,Source,en-us,ko,ru,zh-cn
Studio.ReflectionMetadata.ReflectionMetadata.BindableFunction,,,Allow functions defined in one script to be called by another script,Allow functions defined in one script to be called by another script,한 스크립트에 정의된 함수가 다른 스크립트에서 호출되도록 허용합니다,"Разрешить вызов функций, определенных в одном скрипте, другим скриптом",允许一个脚本中定义的函数被其他脚本调用
Studio.ReflectionMetadata.ReflectionMetadata.BindableFunctionInvoke,,,Causes the function assigned to OnInvoke to be called. Arguments passed to this function get passed to OnInvoke function.,Causes the function assigned to OnInvoke to be called. Arguments passed to this function get passed to OnInvoke function.,OnInvoke에 지정된 함수가 호출되도록 합니다. 이 함수에 전달된 인수는 OnInvoke 함수에 전달됩니다.,"Вызывает функцию, назначенную OnInvoke. Аргументы, переданные этой функции, передаются функции OnInvoke.",调用指定给 OnInvoke 的函数。传递给此函数的参数将传给 OnInvoke 函数。
Studio.ReflectionMetadata.ReflectionMetadata.BindableFunctionOnInvoke,,,Should be defined as a function. This function is called when Invoke() is called. Number of arguments is variable.,Should be defined as a function. This function is called when Invoke() is called. Number of arguments is variable.,함수로 정의해야 합니다. 이 함수는 Invoke()가 호출될 때 호출됩니다. 인수의 개수는 가변적입니다.,Необходимо определить как функцию. Эта функция вызывается при вызове функции Invoke(). Количество аргументов может быть различным.,应定义为函数。此函数将在调用 Invoke() 时被调用。参数的数量是可变的。
Studio.ReflectionMetadata.ReflectionMetadata.BindableEvent,,,Allow events defined in one script to be subscribed to by another script,Allow events defined in one script to be subscribed to by another script,한 스크립트에 정의된 이벤트가 다른 스크립트에 의해 구독되도록 허용합니다,"Разрешает скриптам подписываться на события, определенные в другом скрипте",允许一个脚本中定义的事件被其他脚本订阅
Studio.ReflectionMetadata.ReflectionMetadata.BindableEventFire,,,Used to make the custom event fire (see Event for more info). Arguments can be variable length.,Used to make the custom event fire (see Event for more info). Arguments can be variable length.,사용자 지정 이벤트를 발생시키는 데 사용됩니다(자세한 내용은 이벤트 참조). 인수의 길이는 가변적일 수 있습니다.,Используется для генерации пользовательских событий (подробности см. в разделе «Событие»). Аргументы могут быть различной длины.,用于触发自定义事件（更多信息请参见 Event）。参数的长度是可变的。
Studio.ReflectionMetadata.ReflectionMetadata.BindableEventEvent,,,This event fires when the Fire() method is used.  Receives the variable length arguments from Fire().,This event fires when the Fire() method is used.  Receives the variable length arguments from Fire().,이 이벤트는 Fire() 메서드가 사용될 때 발생합니다. Fire()에서 가변 길이 인수를 받습니다.,Это событие возникает при использовании метода Fire() и получает от Fire() аргументы длины переменной.,此事件会在使用 Fire() 方法时触发。从 Fire() 接收可变长度参数。
Studio.ReflectionMetadata.ReflectionMetadata.TouchTransmitter,,,Used by networking and replication code to transmit touch events - no other purpose,Used by networking and replication code to transmit touch events - no other purpose,네트워킹 및 복제 코드에서 터치 이벤트를 전송하는 데 사용 - 다른 목적은 없음,Используется для передачи сенсорных событий через сеть и код репликации — никакой другой цели.,在网络和复制代码中使用，用于传输触碰事件 — 无其他用途
Studio.ReflectionMetadata.ReflectionMetadata.ForceField,,,"Prevents joint breakage from explosions, and stops Humanoids from taking damage","Prevents joint breakage from explosions, and stops Humanoids from taking damage",폭발로 인한 이음 파손 방지 및 휴머노이드 손상 방지,Предотвращает разрушение соединений от взрывов и предотвращает повреждения гуманоидов,阻止爆炸时的接头断开，以及阻止 Humanoid 受到伤害
Studio.ReflectionMetadata.ReflectionMetadata.TeleportService,,,Allows players to seamlessly leave a game and join another,Allows players to seamlessly leave a game and join another,플레이어가 게임을 원활하게 종료하고 다른 게임에 참가할 수 있도록 허용합니다,Позволяет игрокам беспрепятственно покидать игру и присоединяться к другой,允许玩家无缝地离开游戏并加入其他游戏
Studio.ReflectionMetadata.ReflectionMetadata.TeleportServiceCustomizedTeleportUI,,,Deprecated,Deprecated,더 이상 사용되지 않음,Устарело,已过时
Studio.ReflectionMetadata.ReflectionMetadata.CollectionService,,,A service which provides collections of instances based on tags assigned to them.,A service which provides collections of instances based on tags assigned to them.,할당된 태그를 기반으로 인스턴스 모음을 제공하는 서비스입니다.,"Служба, предоставляющая коллекцию экземпляров на основе присвоенных тегов.",根据指定给实例的标记提供实例集合的服务。
Studio.ReflectionMetadata.ReflectionMetadata.CollectionServiceItemAdded,,,Deprecated. Use GetInstanceAddedSignal instead.,Deprecated. Use GetInstanceAddedSignal instead.,더 이상 사용되지 않습니다. 대신 GetInstanceAddedSignal을 사용하세요.,Устарело. Используйте GetInstanceAddedSignal.,已过时。请改用 GetInstanceAddedSignal。
Studio.ReflectionMetadata.ReflectionMetadata.CollectionServiceItemRemoved,,,Deprecated. Use GetInstancedRemovedSignal instead.,Deprecated. Use GetInstancedRemovedSignal instead.,더 이상 사용되지 않습니다. 대신 GetInstancedRemovedSignal을 사용하세요.,Устарело. Используйте GetInstancedRemovedSignal.,已过时。请改用 GetInstancedRemovedSignal。
Studio.ReflectionMetadata.ReflectionMetadata.CollectionServiceGetCollection,,,Deprecated. Use GetTagged instead.,Deprecated. Use GetTagged instead.,더 이상 사용되지 않습니다. 대신 GetTagged를 사용하세요.,Устарело. Используйте GetTagged.,已过时。请改用 GetTagged。
Studio.ReflectionMetadata.ReflectionMetadata.CollectionServiceGetTagged,,,Returns an array of all of the instances in the data model which have the given tag.,Returns an array of all of the instances in the data model which have the given tag.,지정된 태그가 있는 데이터 모델의 모든 인스턴스 배열을 반환합니다.,"Возвращает массив всех экземпляров модели данных, имеющих данный тег.",返回一个数据模型中拥有给定标记的所有实例的数组。
Studio.ReflectionMetadata.ReflectionMetadata.CollectionServiceAddTag,,,Adds a tag to an instance.,Adds a tag to an instance.,인스턴스에 태그를 추가합니다.,Добавляет тег к экземпляру.,为实例添加标记。
Studio.ReflectionMetadata.ReflectionMetadata.CollectionServiceRemoveTag,,,Removes a tag to an instance.,Removes a tag to an instance.,인스턴스에 대한 태그를 제거합니다.,Удаляет тег экземпляра.,为实例移除标记。
Studio.ReflectionMetadata.ReflectionMetadata.CollectionServiceGetTags,,,Returns a list of all the collections that an instance belongs to.,Returns a list of all the collections that an instance belongs to.,인스턴스가 속한 모든 모음 목록을 반환합니다.,"Возвращает список всех коллекций, в которые входит экземпляр.",返回实例所属的所有集合的列表。
Studio.ReflectionMetadata.ReflectionMetadata.CollectionServiceHasTag,,,Returns whether the given instance has the given tag.,Returns whether the given instance has the given tag.,지정된 인스턴스에 지정된 태그가 있는지 여부를 반환합니다.,"Проверяет, имеет ли данный экземпляр данный тег.",返回指定实例是否拥有指定标记。
Studio.ReflectionMetadata.ReflectionMetadata.CollectionServiceGetInstanceAddedSignal,,,Returns a signal that fires when the given tag either has a new instance with that tag added to the data model or that tag is assigned to an instance within the data model.,Returns a signal that fires when the given tag either has a new instance with that tag added to the data model or that tag is assigned to an instance within the data model.,"지정된 태그에 해당 태그가 데이터 모델에 추가된 새 인스턴스가 있거나, 해당 태그가 데이터 모델 내의 인스턴스에 할당될 때 발생하는 신호를 반환합니다.","Возвращает сигнал, который появляется либо когда появляется новый экземпляр, в котором этот тег добавлен в модель данных, либо когда тег назначен экземпляру внутри модели данных.",当拥有指定标记的新实例被添加至数据模型，或该标记被指定给数据模型内的实例时，返回触发信号。
Studio.ReflectionMetadata.ReflectionMetadata.CollectionServiceGetInstanceRemovedSignal,,,Returns a signal that fires when the given tag either has an instance with that tag removed from the data model or that tag is removed from an instance within the data model.,Returns a signal that fires when the given tag either has an instance with that tag removed from the data model or that tag is removed from an instance within the data model.,지정된 태그에 해당 태그가 데이터 모델에서 제거된 인스턴스가 있거나 해당 태그가 데이터 모델 내 인스턴스에서 제거될 때 발생하는 신호를 반환합니다.,"Возвращает сигнал, который возникает либо когда появляется новый экземпляр, в котором этот тег убран из модели данных, либо когда тег убран из экземпляра внутри модели данных.",当拥有指定标记的实例被从数据模型中移除，或该标记被从数据模型内的实例上移除时，返回触发信号。
Studio.ReflectionMetadata.ReflectionMetadata.AssetService,,,A service used to set and get information about assets stored on the Roblox website.,A service used to set and get information about assets stored on the Roblox website.,Roblox 웹사이트에 저장된 애셋에 대한 정보를 설정하고 얻는 데 사용되는 서비스입니다.,"Служба, используемая для настройки и получения информации о ресурсах, хранящихся на веб-сайте Roblox.",用于设置和获取 Roblox 网站上存储的资源相关信息的服务。
Studio.ReflectionMetadata.ReflectionMetadata.AssetServiceRevertAsset,,,"Reverts a given place id to the version number provided. Returns true if successful on reverting, false otherwise.","Reverts a given place id to the version number provided. Returns true if successful on reverting, false otherwise.","지정된 장소 ID를 제공된 버전 번호로 되돌립니다. 되돌리기에 성공하면 True를, 그렇지 않으면 False를 반환합니다.",Восстанавливает идентификатор заданного места до указанной версии. Возвращает значение true в случае успешного возврата и false в случае неудачи.,将指定场景 ID 恢复为提供的版本号。如果恢复成功则返回 true，否则返回 false。
Studio.ReflectionMetadata.ReflectionMetadata.AssetServiceSetPlacePermissions,,,Sets the permissions for a placeID to the place accessType. An optional table (inviteList) can be included that will set the accessType for only the player names provided. The table should be set up as an array of usernames (strings).,Sets the permissions for a placeID to the place accessType. An optional table (inviteList) can be included that will set the accessType for only the player names provided. The table should be set up as an array of usernames (strings).,placeID에 대한 권한을 장소 accessType으로 설정합니다. 제공된 플레이어 이름에 대해서만 accessType을 설정하는 선택적 테이블(inviteList)이 포함될 수 있습니다. 테이블은 사용자 이름(문자열) 배열로 설정해야 합니다.,"Устанавливает разрешения для placeID в accessType места. Можно добавить дополнительную таблицу (inviteList), которая задает accessType только для указанных имен игроков. Таблица должна иметь формат массива имен пользователей (строк).",设置一个 placeID 对场景 accessType 的许可。可以包含可选表（inviteList），以将 accessType 设为仅限提供的玩家名访问。可选表应设置为用户名（字符串）数组。
Studio.ReflectionMetadata.ReflectionMetadata.AssetServiceGetPlacePermissions,,,"Given a placeID, this function will return a table with the permissions of the place. Useful for determining what kind of permissions a particular user may have for a place.","Given a placeID, this function will return a table with the permissions of the place. Useful for determining what kind of permissions a particular user may have for a place.",placeID가 지정되면 이 함수는 장소에 대한 권한이 있는 테이블을 반환합니다. 특정 사용자가 장소에 대해 어떤 권한을 가질 지 결정하는 데 유용합니다.,"При наличии placeID данная функция возвращает таблицу с разрешениями места. Полезно при необходимости определить, какими разрешениями может обладать тот или иной пользователь для данного места.",指定一个 placeID，此函数将返回该场景的许可表。常用于确认某个用户所拥有的某个场景的许可。
Studio.ReflectionMetadata.ReflectionMetadata.AssetServiceGetAssetVersions,,,"Given a placeID, this function will return a table with the version info of the place. An optional arg of page number can be used to page through all revisions (a single page may hold about 50 revisions).","Given a placeID, this function will return a table with the version info of the place. An optional arg of page number can be used to page through all revisions (a single page may hold about 50 revisions).",placeID가 지정되면 이 함수는 장소의 버전 정보가 포함된 테이블을 반환합니다. 선택적으로 페이지 번호의 인수를 사용하여 모든 개정판을 페이징할 수 있습니다(단일 페이지에는 약 50 개의 개정판이 있을 수 있음).,При наличии placeID данная функция возвращает таблицу с информацией о версии места. Для просмотра всех исправлений можно использовать дополнительный аргумент номера страницы (одна страница может содержать около 50 исправлений).,指定一个 placeID，此函数将返回该场景的版本信息表。可选的页面数量参数用于给所有版本分页 (单一页面可容纳约 50 个版本)。
Studio.ReflectionMetadata.ReflectionMetadata.AssetServiceGetCreatorAssetID,,,"Given a creationID, this function will return the asset that created the creationID. If no other asset created the given creationID, 0 is returned.","Given a creationID, this function will return the asset that created the creationID. If no other asset created the given creationID, 0 is returned.","creationID가 지정되면, 이 함수는 creationID를 생성한 애셋을 반환합니다. 지정된 creationID를 생성한 다른 애셋이 없으면 0이 반환됩니다.","При наличии creationID данная функция возвращает актив, создавший creationID. Если данный creationID не был создан никаким другим ресурсом, то возвращается 0.",指定一个 creationID，此函数将返回创建该 creationID 的资源。如果无其他资源创建指定 creationID ，则返回 0。
Studio.ReflectionMetadata.ReflectionMetadata.HttpServiceHttpEnabled,,,Enabling http requests from scripts,Enabling http requests from scripts,스크립트에서 http 요청 활성화,Включение HTTP-запросов из скриптов,启用来自脚本的 http 请求
Studio.ReflectionMetadata.ReflectionMetadata.AnalyticsServiceApiKey,,,Set ApiKey,Set ApiKey,ApiKey 설정,Задать ApiKey,设置 ApiKey
Studio.ReflectionMetadata.ReflectionMetadata.InsertService,,,A service used to insert objects stored on the website into the game.,A service used to insert objects stored on the website into the game.,웹사이트에 저장된 개체를 게임에 삽입하는 데 사용되는 서비스입니다.,"Служба, используемая для вставки в игру объектов, хранящихся на веб-сайте.",用于将存储在网站上的对象插入至游戏中的服务。
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceAllowClientInsertModels,,,Can be set in non-filtering-enabled places to allow LoadAsset to be used in LocalScripts.,Can be set in non-filtering-enabled places to allow LoadAsset to be used in LocalScripts.,필터링이 가능하지 않은 장소에서 LoadAsset을 LocalScript에서 사용할 수 있도록 설정할 수 있습니다.,"Может быть задан в местах, не поддерживающих фильтры, чтобы разрешить использование LoadAsset в LocalScripts.",可以在未启用过滤器的场景中设置，以允许在 LocalScript 中使用 LoadAsset。
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceAllowInsertFreeModels,,,Allows free models to be inserted into place.,Allows free models to be inserted into place.,무료 모델을 장소에 삽입하도록 허용합니다.,Позволяет вставлять в место свободные модели.,允许将免费模型插入至场景。
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceGetCollection,,,Returns a table for the assets stored in the category.  A category is an setId from www.roblox.com that links to a set.  <a href='http://wiki.roblox.com/index.php?title=API:Class/InsertService/GetCollection' target='_blank'>More info on table format</a>. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>More info on sets</a>,Returns a table for the assets stored in the category.  A category is an setId from www.roblox.com that links to a set.  <a href='http://wiki.roblox.com/index.php?title=API:Class/InsertService/GetCollection' target='_blank'>More info on table format</a>. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>More info on sets</a>,카테고리에 저장된 애셋의 테이블을 반환합니다. 카테고리는 세트에 연결되는 www.roblox.com의 setId입니다. <a href='http://wiki.roblox.com/index.php?title=API:Class/InsertService/GetCollection' target='_blank'>테이블 형식에 대한 추가 정보</a>. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>세트에 대한 추가 정보</a>,"Возвращает таблицу для ресурсов, хранящихся в категории. Категория — это setId с веб-сайта www.roblox.com, который ссылается на набор. <a href='http://wiki.roblox.com/index.php?title=API:Class/InsertService/GetCollection' target='_blank'>Узнать больше о формате таблицы</a>. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>Узнать больше о наборах</a>",返回一个存储在该类别中的资源表。类别为 www.roblox.com 上关联至一个集合的 setId。<a href='http://wiki.roblox.com/index.php?title=API:Class/InsertService/GetCollection' target='_blank'>关于表格式的更多信息</a>。<a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>关于集合的更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceInsert,,,"Inserts the Instance into the workspace.  It is recommended to use Instance.Parent = game.Workspace instead, as this can cause issues currently.","Inserts the Instance into the workspace.  It is recommended to use Instance.Parent = game.Workspace instead, as this can cause issues currently.",인스턴스를 작업 공간에 삽입합니다. 현재는 이로 인해 문제가 발생할 수 있으므로 Instance.Parent = game.Workspace를 대신 사용하는 것이 좋습니다.,"Вставляет экземпляр в рабочую область. Рекомендуется использовать Instance.Parent = game.Workspace, так как в данный момент это может привести к ошибкам.",将 Instance 插入至工作区。推荐改为使用 Instance.Parent = game.Workspace，因为此方法目前可能导致出现问题。
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceApproveAssetId,,,Deprecated,Deprecated,더 이상 사용되지 않음,Устарело,已过时
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceApproveAssetVersionId,,,Deprecated,Deprecated,더 이상 사용되지 않음,Устарело,已过时
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceGetBaseSets,,,Returns a table containing a list of the various setIds that are ROBLOX approved. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>More info on sets</a>,Returns a table containing a list of the various setIds that are ROBLOX approved. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>More info on sets</a>,ROBLOX에서 승인한 다양한 setId 목록을 포함하는 테이블을 반환합니다. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>세트에 대한 추가 정보</a>,"Возвращает таблицу, содержащую список различных setId, утвержденных ROBLOX <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>Узнать больше о наборах</a>",返回一个列举 ROBLOX 认可的多个 setId 的表。 <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>关于集合的更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceGetUserSets,,,Returns a table containing a list of the various setIds that correspond to argument 'userId'. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>More info on sets</a>,Returns a table containing a list of the various setIds that correspond to argument 'userId'. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>More info on sets</a>,'userId' 인수에 해당하는 다양한 setID 목록을 포함하는 테이블을 반환합니다. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>세트에 대한 추가 정보</a>,"Возвращает таблицу со списком различных setId, соответствующих аргументу userId. <a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>Узнать больше о наборах</a>",返回一个列举与参数 'userId' 对应的多个 setId 的表。<a href='http://wiki.roblox.com/index.php/Sets' target='_blank'>关于集合的更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceGetBaseCategories,,,Deprecated. Use GetBaseSets() instead.,Deprecated. Use GetBaseSets() instead.,더 이상 사용되지 않습니다. GetBaseSets()를 대신 사용하세요.,Устарело. Используйте GetBaseSets().,已过时。请改用 GetBaseSets()。
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceGetUserCategories,,,Deprecated. Use GetUserSets() instead.,Deprecated. Use GetUserSets() instead.,더 이상 사용되지 않습니다. GetUserSets()를 대신 사용하세요.,Устарело. Используйте GetUserSets().,已过时。请改用 GetUserSets()。
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceLoadAsset,,,"Returns a Model containing the Instance that resides at AssetId on the web. This call will also yield the script until the model is returned. Script execution can still continue, however, if you use a <a href='http://wiki.roblox.com/index.php?title=Coroutine' target='_blank'>coroutine</a>.","Returns a Model containing the Instance that resides at AssetId on the web. This call will also yield the script until the model is returned. Script execution can still continue, however, if you use a <a href='http://wiki.roblox.com/index.php?title=Coroutine' target='_blank'>coroutine</a>.",웹의 AssetId에 있는 인스턴스를 포함하는 모델을 반환합니다. 이 호출은 모델이 반환될 때까지 스크립트를 생성합니다. 그러나 <a href='http://wiki.roblox.com/index.php?title=Coroutine' target='_blank'>코루틴</a>을 사용하면 스크립트 실행은 계속될 수 있습니다.,"Возвращает модель, содержащую экземпляр, который находится в AssetId в Интернете. Этот вызов также создает скрипт до тех пор, пока не возвращена модель. Однако выполнение скрипта можно продолжить, если использовать <a href='http://wiki.roblox.com/index.php?title=Coroutine' target='_blank'>coroutine</a>.",返回一个包含驻留在网页上的 AssetId 中的 Instance 的 Model。此调用还会暂停脚本，直到返回该模型。但是，如果你使用<a href='http://wiki.roblox.com/index.php?title=Coroutine' target='_blank'>协同程序</a>，脚本仍可以继续执行。
Studio.ReflectionMetadata.ReflectionMetadata.InsertServiceLoadAssetVersion,,,"Similar to LoadAsset, but instead an AssetVersionId is passed in, which refers to a particular version of the asset which is not neccessarily the latest version.","Similar to LoadAsset, but instead an AssetVersionId is passed in, which refers to a particular version of the asset which is not neccessarily the latest version.","LoadAsset과 비슷하지만, 대신 AssetVersionId를 전달합니다. 이 ID는 최신 버전이 아니라 특정 버전의 애셋을 참조합니다.","Аналогично LoadAsset, но вместо этого передается AssetVersionId, относящийся к определенной версии ресурса, которая не обязательно является последней версией.",与 LoadAsset 类似，但传入一个 AssetVersionId，引用一个特定的资源版本 (并非必须是最新版本)。
Studio.ReflectionMetadata.ReflectionMetadata.AttachmentWorldRotation,,,Deprecated. Use WorldOrientation instead,Deprecated. Use WorldOrientation instead,더 이상 사용되지 않습니다. WorldOrientation을 대신 사용하세요.,Устарело. Используйте WorldOrientation.,已过时。请改用 WorldOrientation
Studio.ReflectionMetadata.ReflectionMetadata.AttachmentOrientation,,,Euler angles applied in YXZ order,Euler angles applied in YXZ order,YXZ 순서로 오일러 각도 적용,"Углы Эйлера, применяемые в порядке YXZ",以 YXZ 顺序应用的欧拉角
Studio.ReflectionMetadata.ReflectionMetadata.AttachmentWorldOrientation,,,Euler angles applied in YXZ order,Euler angles applied in YXZ order,YXZ 순서로 오일러 각도 적용,"Углы Эйлера, применяемые в порядке YXZ",以 YXZ 顺序应用的欧拉角
Studio.ReflectionMetadata.ReflectionMetadata.AttachmentAxis,,,"Primary axis. Corresponds to the LookVector, or the first column in the part-local Attachment CFrame rotation matrix","Primary axis. Corresponds to the LookVector, or the first column in the part-local Attachment CFrame rotation matrix",기본 축입니다. LookVector 또는 부분 로컬 Attachment CFrame 회전 매트릭스의 첫 번째 열에 해당합니다.,Основная ось. Соответствует параметру LookVector или первому столбцу частично локальной матрицы вращения Attachment CFrame.,主要轴线。对应于 LookVector，或部件本地 Attachment CFrame 旋转矩阵的第一列
Studio.ReflectionMetadata.ReflectionMetadata.AttachmentSecondaryAxis,,,"Secondary axis. Corresponds to the UpVector, or the second column in the part-local Attachment CFrame rotation matrix","Secondary axis. Corresponds to the UpVector, or the second column in the part-local Attachment CFrame rotation matrix",보조 축입니다. UpVector 또는 부분 로컬 Attachment CFrame 회전 매트릭스의 두 번째 열에 해당합니다.,Вспомогательная ось. Соответствует параметру UpVector или второму столбцу частично локальной матрицы вращения Attachment CFrame.,次要轴线。对应于 UpVector，或部件本地 Attachment CFrame 旋转矩阵的第二列
Studio.ReflectionMetadata.ReflectionMetadata.AttachmentWorldAxis,,,"Primary axis in world space. Corresponds to the LookVector, or the first column in the world space Attachment CFrame rotation matrix.","Primary axis in world space. Corresponds to the LookVector, or the first column in the world space Attachment CFrame rotation matrix.",월드 공간의 기본 축입니다. LookVector 또는 월드 공간 Attachment CFrame 회전 매트릭스의 첫 번째 열에 해당합니다.,Основная ось в мировом пространстве. Соответствует параметру LookVector или первому столбцу матрицы вращения мирового пространства Attachment CFrame.,世界空间中的主要轴线。对应于 LookVector，或世界空间 Attachment CFrame 旋转矩阵的第一列。
Studio.ReflectionMetadata.ReflectionMetadata.AttachmentSecondaryWorldAxis,,,"Secondary axis in world space. Corresponds to the UpVector, or the second column in the world space Attachment CFrame rotation matrix.","Secondary axis in world space. Corresponds to the UpVector, or the second column in the world space Attachment CFrame rotation matrix.",보조 축입니다. UpVector 또는 월드 공간 Attachment CFrame 회전 매트릭스의 두 번째 열에 해당합니다.,Вспомогательная ось в мировом пространстве. Соответствует параметру UpVector или второму столбцу матрицы вращения мирового пространства Attachment CFrame.,世界空间中的次要轴线。对应于 UpVector，或世界空间 Attachment CFrame 旋转矩阵的第二列
Studio.ReflectionMetadata.ReflectionMetadata.ConstraintEnabled,,,Toggles whether or not this constraint is enabled. Disabled constraints will not render in game.,Toggles whether or not this constraint is enabled. Disabled constraints will not render in game.,이 제약 조건의 활성화 여부를 토글합니다. 비활성화된 제약 조건은 게임에서 렌더링되지 않습니다.,Включает и выключает данное ограничение. Выключенные ограничения не отображаются в игре.,启用或禁用此约束。将不会在游戏中渲染被禁用的约束。
Studio.ReflectionMetadata.ReflectionMetadata.ConstraintColor,,,The color of the in-game visual.,The color of the in-game visual.,게임 내 비주얼 색상입니다.,Цвет внутриигровой графики.,游戏内视觉效果的颜色。
Studio.ReflectionMetadata.ReflectionMetadata.ConstraintVisible,,,Toggles the in-game visual associated with this constraint.,Toggles the in-game visual associated with this constraint.,이 제약과 관련된 게임 내 비주얼을 토글합니다.,"Переключает визуальное отображение в игре, связанное с этим ограничением.",开启或关闭与此约束相关的游戏内视觉效果。
Studio.ReflectionMetadata.ReflectionMetadata.ConstraintActive,,,"Read-only boolean, true if the Constraint is active in world.","Read-only boolean, true if the Constraint is active in world.","읽기 전용 부울로, 제약이 세계에서 활성화된 경우 True입니다.","Булева переменная только для чтения. Значение true, если Ограничение активно в мире.",只读布尔值，当 Constraint 在世界中启用时为 true。
Studio.ReflectionMetadata.ReflectionMetadata.BallSocketConstraintLimitsEnabled,,,Enables the angular limit between the axis of Attachment0 and the axis of Attachment1.,Enables the angular limit between the axis of Attachment0 and the axis of Attachment1.,Attachment0 축과 Attachment1 축 사이의 각도 제한을 활성화합니다.,Позволяет задать угловой предел между осью Attachment0 и осью Attachment1.,启用 Attachment0 的轴线和 Attachment1 的轴线之间的角度限制。
Studio.ReflectionMetadata.ReflectionMetadata.BallSocketConstraintUpperAngle,,,"Maximum angle between the two main axes. Value in [0, 180].","Maximum angle between the two main axes. Value in [0, 180].","두 주축 사이의 최대 각도. 값의 범위는 [0, 180]입니다.","Максимальный угол между двумя основными осями. Значение в [0, 180].","两条主要轴线之间的最大角度。取值为 [0, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.BallSocketConstraintRestitution,,,"Restitution of the limit, or how elastic it is. Value in [0, 1].","Restitution of the limit, or how elastic it is. Value in [0, 1].","제한의 복원 또는 탄력성. 값의 범위는 [0, 1]입니다.","Способность восстановления предела, или его эластичность. Значение в [0, 1].","限制的弹性或弹性如何。取值为 [0, 1]。"
Studio.ReflectionMetadata.ReflectionMetadata.BallSocketConstraintTwistLimitsEnabled,,,Enables the angular limits around the main axis of Attachment1.,Enables the angular limits around the main axis of Attachment1.,Attachment1의 기본 축 주위의 각도 제한을 활성화합니다.,Позволяет задавать угловые пределы вокруг основной оси Attachment1.,启用与 Attachment1 的主要轴线相关的角度限制。
Studio.ReflectionMetadata.ReflectionMetadata.BallSocketConstraintTwistUpperAngle,,,"Upper angular limit around the axis of Attachment1. Value in [-180, 180].","Upper angular limit around the axis of Attachment1. Value in [-180, 180].","Attachment1의 축 주위의 각도 상한. 값의 범위는 [-180, 180]입니다.","Верхний угловой предел вокруг оси Attachment1. Значение в [-180, 180].","Attachment1 的轴线的上角限制。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.BallSocketConstraintTwistLowerAngle,,,"Lower angular limit around the axis of Attachment1. Value in [-180, 180].","Lower angular limit around the axis of Attachment1. Value in [-180, 180].","Attachment1의 축 주위의 각도 하한. 값의 범위는 [-180, 180]입니다.","Нижний угловой предел вокруг оси Attachment1. Значение в [-180, 180].","Attachment1 的轴线的下角限制。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.BallSocketConstraintRadius,,,"Radius of the in-game visual. Value in [0, inf).","Radius of the in-game visual. Value in [0, inf).","게임 내 이미지의 반경. 값의 범위는 [0, inf)입니다.","Радиус внутриигрового отображения. Значение в интервале [0, inf).","游戏内视觉效果的半径。取值为 [0, ∞)。"
Studio.ReflectionMetadata.ReflectionMetadata.RopeConstraintLength,,,"The length of the rope or the maximum distance between the two attachments. Value in [0, inf).","The length of the rope or the maximum distance between the two attachments. Value in [0, inf).","밧줄의 길이 또는 두 연결부 사이의 최대 거리. 값의 범위는 [0, inf)입니다.","Длина привязки или максимальное расстояние между двумя элементами оснастки. Значение в интервале [0, inf).","绳索的长度或两个附件之间的最大距离。取值为 [0, ∞)。"
Studio.ReflectionMetadata.ReflectionMetadata.RopeConstraintRestitution,,,"Restitution of the rope, or how elastic it is. Value in [0, 1].","Restitution of the rope, or how elastic it is. Value in [0, 1].","밧줄의 복원 또는 탄력성. 값의 범위는 [0, 1]입니다.","Способность восстановления привязки, или ее эластичность. Значение в [0, 1].","绳索的弹性或弹性如何。取值为 [0, 1]。"
Studio.ReflectionMetadata.ReflectionMetadata.RopeConstraintCurrentDistance,,,"Current distance between the two attachments. Value in [0, inf).","Current distance between the two attachments. Value in [0, inf).","두 연결부 사이의 현재 거리. 값의 범위는 [0, inf)입니다.","Текущее расстояние между двумя элементами оснастки. Значение в интервале [0, inf).","两个附件的当前距离。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.RopeConstraintThickness,,,"The thickness of the in-game visual (diameter). Value in [0, inf).","The thickness of the in-game visual (diameter). Value in [0, inf).","게임 내 비주얼(직경)의 두께. 값의 범위는 [0, inf)입니다.","Толщина визуального изображения в игре (диаметр). Значение в интервале [0, inf).","游戏内视觉效果的厚度 (直径)。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.RodConstraintLength,,,"The length of the rod or the distance to be maintained between the two attachments. Value in [0, inf).","The length of the rod or the distance to be maintained between the two attachments. Value in [0, inf).","막대의 길이 또는 두 연결부 사이에서 유지될 거리. 값의 범위는 [0, inf)입니다.","Длина стержня, или расстояние, которое должно сохраняться между двумя элементами оснастки. Значение в интервале [0, inf).","杆的长度或两个附件之间需要维持的距离。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.RodConstraintCurrentDistance,,,"Current distance between the two attachments. Value in [0, inf).","Current distance between the two attachments. Value in [0, inf).","두 연결부 사이의 현재 거리. 값의 범위는 [0, inf)입니다.","Текущее расстояние между двумя элементами оснастки. Значение в интервале [0, inf).","两个附件的当前距离。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.RodConstraintThickness,,,"The thickness of the in-game visual (diameter). Value in [0, inf).","The thickness of the in-game visual (diameter). Value in [0, inf).","게임 내 비주얼(직경)의 두께. 값의 범위는 [0, inf)입니다.","Толщина визуального изображения в игре (диаметр). Значение в интервале [0, inf).","游戏内视觉效果的厚度 (直径)。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintLimitsEnabled,,,Enables limits on the length of the spring.,Enables limits on the length of the spring.,용수철 길이 제한을 활성화합니다.,Позволяет ограничить длину пружины.,启用弹簧的长度限制。
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintStiffness,,,"The stiffness parameter of the spring. Force is scaled based on distance from the free length. The units of this property are force / distance. Value in [0, inf).","The stiffness parameter of the spring. Force is scaled based on distance from the free length. The units of this property are force / distance. Value in [0, inf).","용수철의 강성 매개변수. 자유 길이로부터의 거리에 따라 힘이 조정됩니다. 이 속성의 단위는 힘 / 거리입니다. 값의 범위는 [0, inf)입니다.","Параметр жесткости пружины. Сила масштабируется в зависимости от расстояния до свободной длины. Единицами измерения являются сила/расстояние. Значение в интервале [0, inf).","弹簧的刚度参数。力度与自由长度的距离成正比。此属性的单位为力/距离。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintDamping,,,"The damping parameter of the spring. The force is scaled with respect to relative velocity. The units of this property are force / velocity. Value in [0, inf).","The damping parameter of the spring. The force is scaled with respect to relative velocity. The units of this property are force / velocity. Value in [0, inf).","용수철의 댐핑 매개변수. 힘은 상대 속도에 따라 조정됩니다. 이 속성의 단위는 힘 / 속도입니다. 값의 범위는 [0, inf)입니다.","Коэффициент амортизации пружины, масштабирующий силу в зависимости от относительной скорости. Единицами измерения являются сила/скорость. Значение в интервале [0, inf).","弹簧的阻尼参数。力度与相对速度关系成正比。此属性的单位为力/速度。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintFreeLength,,,"The distance (in studs) between the two attachments at which the spring exerts no stiffness force. Value in [0, inf).","The distance (in studs) between the two attachments at which the spring exerts no stiffness force. Value in [0, inf).","용수철이 강성 힘을 가하지 않는 두 연결부 사이의 거리(스터드 단위). 값의 범위는 [0, inf)입니다.","Расстояние (в стойках) между двумя элементами оснастки, на которые пружина не оказывает никакого усилия. Значение в интервале [0, inf).","弹簧失去刚性力度时两个附件之间的距离 (以格为单位)。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintMaxForce,,,"The maximum force that the spring can apply. Useful to prevent instabilities. The units are mass * studs / seconds^2. Value in [0, inf).","The maximum force that the spring can apply. Useful to prevent instabilities. The units are mass * studs / seconds^2. Value in [0, inf).","용수철이 적용할 수 있는 최대 힘. 불안정성을 방지하는 데 유용합니다. 단위는 질량 * 스터드/초제곱입니다. 값의 범위는 [0, inf)입니다.","Максимальное усилие, прилагаемое пружиной. Используется для предотвращения нестабильности. Единицами измерения являются масса*стойки/секунды^2. Значение в интервале [0, inf).","弹簧可以施加的最大力度。可用于保持稳定。单位为质量 * 格/秒 ^2。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintMaxLength,,,"Maximum spring length, or the maxium distance between the two attachments. Value in [0, inf).","Maximum spring length, or the maxium distance between the two attachments. Value in [0, inf).","용수철 최대 길이 또는 두 연결부 사이의 최대 거리. 값의 범위는 [0, inf)입니다.","Максимальная длина пружины, или максимальное расстояние между двумя элементами оснастки. Значение в интервале [0, inf).","最大弹簧长度，或两个附件之间的最大距离。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintMinLength,,,"Minimum spring length, or the minimum distance between the two attachments. Value in [0, inf).","Minimum spring length, or the minimum distance between the two attachments. Value in [0, inf).","용수철 최소 길이 또는 두 연결부 사이의 최소 거리. 값의 범위는 [0, inf)입니다.","Минимальная длина пружины, или минимальное расстояние между двумя элементами оснастки. Значение в интервале [0, inf).","最小弹簧长度，或两个附件之间的最小距离。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintRadius,,,"The radius of the in-game spring coil visual. Value in [0, inf).","The radius of the in-game spring coil visual. Value in [0, inf).","게임 내 용수철 코일 비주얼의 반경. 값의 범위는 [0, inf)입니다.","Радиус отображаемого в игре витка пружины. Значение в интервале [0, inf).","游戏内弹簧线圈视觉效果的半径。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintThickness,,,"The thickness of the spring wire (diameter) in the in-game visual. Value in [0, inf).","The thickness of the spring wire (diameter) in the in-game visual. Value in [0, inf).","게임 내 비주얼에서 용수철 와이어(직경)의 두께. 값의 범위는 [0, inf)입니다.","Толщина отображаемого в игре витка пружины (диаметр). Значение в интервале [0, inf).","游戏内视觉效果的弹簧线圈粗细 (直径)。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintCoils,,,"The number of coils in the in-game visual. Value in [0, 8].","The number of coils in the in-game visual. Value in [0, 8].","게임 내 비주얼의 코일 수. 값의 범위는 [0, 8]입니다.","Количество отображаемых в игре витков. Значение в интервале [0, 8].","游戏内视觉效果的线圈数量。取值为 [0, 8]。"
Studio.ReflectionMetadata.ReflectionMetadata.SpringConstraintCurrentLength,,,"Current distance between the two attachments. Value in [0, inf).","Current distance between the two attachments. Value in [0, inf).","두 연결부 사이의 현재 거리. 값의 범위는 [0, inf)입니다.","Текущее расстояние между двумя элементами оснастки. Значение в интервале [0, inf).","两个附件的当前距离。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.WeldConstraintActive,,,"Read-only boolean, true if the joint is active in world. Rigid joints may be inactive if they are redundant or form cycles.","Read-only boolean, true if the joint is active in world. Rigid joints may be inactive if they are redundant or form cycles.","읽기 전용 부울로, 이음이 세계에서 활성화된 경우 True입니다. 고정식 이음은 중복이거나 사이클을 형성하는 경우 비활성화될 수 있습니다.","Булева переменная только для чтения. Значение true, если соединение активно в мире. Жесткие соединения могут быть неактивными, если они избыточные или образуют циклы.",只读布尔值，若接头在世界中处于使用状态则为 true。如果硬接头过剩或形成环形，则可能未使用。
Studio.ReflectionMetadata.ReflectionMetadata.NoCollisionConstraintEnabled,,,"If true Part0 and Part1 will not collide, if false the parts will collide.","If true Part0 and Part1 will not collide, if false the parts will collide.","True이면 Part0 및 Part1이 충돌하지 않으며, False인 경우 두 파트가 충돌합니다.","Если true, части Part0 и Part1 не сталкиваются. Если false, части сталкиваются.",取值为 true 时 Part0 和 Part1 不会碰撞，取值为 false 时则会产生碰撞。
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintActuatorType,,,"Type of the rotational actuator: None, Motor, or Servo.","Type of the rotational actuator: None, Motor, or Servo.","회전 액추에이터 유형: 없음, 모터 또는 서보.","Тип привода вращения: нет, двигатель или сервопривод.",旋转传动机构的类型: 无、电机或伺服。
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintLimitsEnabled,,,Enables the angular limits on rotations around the main axis of Attachment0.,Enables the angular limits on rotations around the main axis of Attachment0.,Attachment0의 주축을 중심으로 한 회전 각도 제한을 활성화합니다.,Позволяет задавать угловые пределы вращения вокруг главной оси Attachment0.,启用围绕 Attachment0 的主要轴线的旋转角度限制。
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintUpperAngle,,,"Upper limit for the angle from the SecondaryAxis of Attachment0 to the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","Upper limit for the angle from the SecondaryAxis of Attachment0 to the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","회전축 주위의 Attachment0의 SecondaryAxis에서 Attachment1의 SecondaryAxis까지의 각도의 상한. 값의 범위는 [-180, 180]입니다.","Верхний предел угла между SecondaryAxis в Attachment0 и SecondaryAxis в Attachment1 вокруг оси вращения. Значение в [-180, 180].","Attachment0 的 SecondaryAxis 相对 Attachment1 的 SecondaryAxis 在旋转轴的角度上限。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintLowerAngle,,,"Lower limit for the angle from the SecondaryAxis of Attachment0 to the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","Lower limit for the angle from the SecondaryAxis of Attachment0 to the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","회전축 주위의 Attachment0의 SecondaryAxis에서 Attachment1의 SecondaryAxis까지의 각도의 하한. 값의 범위는 [-180, 180]입니다.","Нижний предел угла между SecondaryAxis в Attachment0 и SecondaryAxis в Attachment1 вокруг оси вращения. Значение в [-180, 180].","Attachment0 的 SecondaryAxis 相对 Attachment1 的 SecondaryAxis 在旋转轴的角度下限。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintAngularRestitution,,,"Restitution of the two limits, or how elastic they are. Value in [0,1].","Restitution of the two limits, or how elastic they are. Value in [0,1].","두 제한의 복원 또는 탄력성. 값의 범위는 [0,1]입니다.","Способность восстановления двух пределов, или их эластичность. Значение в [0,1].","两个限制的弹性或弹性如何。取值为 [0,1]。"
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintAngularVelocity,,,"The target angular velocity of the motor in radians per second around the rotation axis. Value in [0, inf).","The target angular velocity of the motor in radians per second around the rotation axis. Value in [0, inf).","회전축을 중심으로 한 모터의 목표 각속도(초당 라디안). 값의 범위는 [0, inf)입니다.","Целевая угловая скорость двигателя в радианах в секунду вокруг оси вращения. Значение в интервале [0, inf).","电机的目标角速度，以绕旋转轴转动的弧度/秒为单位。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintMotorMaxTorque,,,"The maximum torque the motor can apply to achieve the target angular velocity. Value in [0, inf).","The maximum torque the motor can apply to achieve the target angular velocity. Value in [0, inf).","목표 각속도를 달성하기 위해 모터가 적용할 수 있는 최대 토크. 값의 범위는 [0, inf)입니다.","Максимальный крутящий момент, который двигатель может приложить для достижения заданной угловой скорости. Значение в интервале [0, inf).","电机为达到目标角速度可施加的最大扭矩。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintMotorMaxAcceleration,,,"The maximum angular acceleration of the motor in radians per second square. Value in [0, inf).","The maximum angular acceleration of the motor in radians per second square. Value in [0, inf).","모터의 최대 각가속도(초제곱당 라디안). 값의 범위는 [0, inf)입니다.","Максимальное угловое ускорение двигателя в радианах в секунду в квадрате. Значение в интервале [0, inf).","电机的最大角加速度，以弧度/秒^2 为单位。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintAngularSpeed,,,"Target angular speed. This value is unsigned as the servo will always move toward its target. Value in [0, inf).","Target angular speed. This value is unsigned as the servo will always move toward its target. Value in [0, inf).","목표 각속도. 서보가 항상 목표를 향해 이동하므로 이 값은 부호가 없습니다. 값의 범위는 [0, inf)입니다.","Целевая угловая скорость. Это значение не подписано, так как сервопривод всегда двигается к цели. Значение в интервале [0, inf).","目标角速度。此值为不分正负的值，因为伺服总是在向目标移动。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintServoMaxTorque,,,"Maximum torque the servo motor can apply. Value in [0, inf).","Maximum torque the servo motor can apply. Value in [0, inf).","서보 모터가 적용할 수 있는 최대 토크. 값의 범위는 [0, inf)입니다.","Максимальный крутящий момент сервопривода. Значение в интервале [0, inf).","伺服电机可施加的最大扭矩。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintTargetAngle,,,"Target angle for the SecondaryAxis of Attachment1 from the SecondaryAxis of Attachment0 around the rotation axis. Value in [-180, 180].","Target angle for the SecondaryAxis of Attachment1 from the SecondaryAxis of Attachment0 around the rotation axis. Value in [-180, 180].","회전축 주위의 Attachment0의 SecondaryAxis에서 Attachment1의 SecondaryAxis에 대한 목표 각도. 값의 범위는 [-180, 180]입니다.","Целевой угол между SecondaryAxis в Attachment1 и SecondaryAxis в Attachment0 вокруг оси вращения. Значение в [-180, 180].","Attachment1 的 SecondaryAxis 相对 Attachment0 的 SecondaryAxis 在旋转轴的目标角度。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintCurrentAngle,,,"Signed angle between the SecondaryAxis of Attchement0 and the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","Signed angle between the SecondaryAxis of Attchement0 and the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","회전축 주위의 Attchement0의 SecondaryAxis와 Attachment1의 SecondaryAxis1 사이의 부호 있는 각도. 값의 범위는 [-180, 180]입니다.","Подписанный угол между SecondaryAxis в Attachment0 и SecondaryAxis в Attachment1 вокруг оси вращения. Значение в [-180, 180].","旋转轴上 Attachment0 的 SecondaryAxis 和 Attachment1 的 SecondaryAxis 之间的有正负之分的角度。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.HingeConstraintRadius,,,"Radius of the in-game visual. Value in [0, inf).","Radius of the in-game visual. Value in [0, inf).","게임 내 비주얼의 반경. 값의 범위는 [0, inf)입니다.","Радиус внутриигрового отображения. Значение в интервале [0, inf).","游戏内视觉效果的半径。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintActuatorType,,,"Type of linear actuator (along the axis of the slider): None, Motor, or Servo.","Type of linear actuator (along the axis of the slider): None, Motor, or Servo.","선형 액추에이터 유형(슬라이더 축을 따라) : 없음, 모터 또는 서보.","Тип линейного привода (вдоль оси ползунка): нет, двигатель или сервопривод.",线性传动机构 (沿滚动条轴线) 的类型: 无、电机或伺服。
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintLimitsEnabled,,,Enables the limits on the linear motion along the axis of the slider.,Enables the limits on the linear motion along the axis of the slider.,슬라이더 축을 따라 선형 모션에 대한 제한을 활성화합니다.,Позволяет задавать пределы линейного перемещения вдоль оси ползунка.,启用沿滚动条轴线的线性运动限制。
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintLowerLimit,,,"Lower limit for the position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","Lower limit for the position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","슬라이더 축을 따라, Attachment0에 대한 Attachment1 위치의 하한. 값의 범위는 (-inf, inf)입니다.","Нижний предел положения Attachment1 по отношению к Attachment0 вдоль оси ползунка. Значение в (-inf, inf).","Attachment1 相对 Attachment 0 沿滚动条轴线的位置下限。取值为 (-inf, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintUpperLimit,,,"Upper limit for the position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","Upper limit for the position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","슬라이더 축을 따라, Attachment0에 대한 Attachment1 위치의 상한. 값의 범위는 (-inf, inf)입니다.","Верхний предел положения Attachment1 по отношению к Attachment0 вдоль оси ползунка. Значение в (-inf, inf).","Attachment1 相对 Attachment 0 沿滚动条轴线的位置上限。取值为 (-inf, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintRestitution,,,"Restitution of the two limits, or how elastic they are. Value in [0, 1].","Restitution of the two limits, or how elastic they are. Value in [0, 1].","두 제한의 복원 또는 탄력성. 값의 범위는 [0, 1]입니다.","Способность восстановления двух пределов, или их эластичность. Значение в [0, 1].","两个限制的弹性或弹性如何。取值为 [0, 1]。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintVelocity,,,"The target linear velocity of the motor in studs per second along the slider axis. Value in (-inf, inf).","The target linear velocity of the motor in studs per second along the slider axis. Value in (-inf, inf).","슬라이더 축을 따르는 모터의 목표 선형 속도(초당 스터드). 값의 범위는 (-inf, inf)입니다.","Целевая линейная скорость двигателя вдоль оси ползунка в стойках в секунду. Значение в (-inf, inf).","电机沿滚动条轴线的目标线性速度，以格/秒为单位。取值为 (-inf, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintMotorMaxForce,,,"The maximum force the motor can apply to achieve the target velocity. Units are mass * studs / seconds^2. Value in [0, inf).","The maximum force the motor can apply to achieve the target velocity. Units are mass * studs / seconds^2. Value in [0, inf).","목표 속도를 달성하기 위해 모터가 적용할 수 있는 최대 힘. 단위는 질량 * 스터드/초제곱입니다. 값의 범위는 [0, inf)입니다.","Максимальное усилие, которое двигатель может приложить для достижения заданной скорости. Единицами измерения являются масса*стойки/секунды^2. Значение в диапазоне [0, inf).","电机为达到目标速度可施加的最大力度。单位为质量*格/秒 ^2。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintMotorMaxAcceleration,,,"The maximum acceleration of the motor in studs per second squared. Value in [0, inf).","The maximum acceleration of the motor in studs per second squared. Value in [0, inf).","모터의 최대 가속도(초제곱당 스터드). 값의 범위는 [0, inf)입니다.","Максимальное ускорение двигателя в стойках в секунду в квадрате. Значение в интервале [0, inf).","电机的最大加速度，以格/秒^2 为单位。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintSpeed,,,"Target speed in studs per second. This value is unsigned as the servo will always move toward its target. Value in [0, inf).","Target speed in studs per second. This value is unsigned as the servo will always move toward its target. Value in [0, inf).","목표 속도(초당 스터드). 서보가 항상 목표를 향해 이동하므로 이 값은 부호가 없습니다. 값의 범위는 [0, inf)입니다.","Целевая скорость в стойках в секунду. Это значение не подписано, так как сервопривод всегда двигается к цели. Значение в интервале [0, inf).","目标速度，以格/秒为单位。此值为不分正负的值，因为伺服总是在向目标移动。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintServoMaxForce,,,"Maximum force the servo motor can apply. Units are mass * studs / seconds^2. Value in [0, inf).","Maximum force the servo motor can apply. Units are mass * studs / seconds^2. Value in [0, inf).","서보 모터가 적용할 수 있는 최대 힘. 단위는 질량 * 스터드/초제곱입니다. 값의 범위는 [0, inf)입니다.","Максимальное усилие, которое может приложить сервопривод. Единицами измерения являются масса*стойка/секунды^2. Значение в интервале [0, inf).","伺服电机可施加的最大力度。单位为质量 * 格/秒^2。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintTargetPosition,,,"Target position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","Target position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","슬라이더 축을 따르는 Attachment0에 대한 Attachment1의 목표 위치입니다. 값의 범위는 (-inf, inf)입니다.","Целевое положение Attachment1 по отношению к Attachment0 вдоль оси ползунка. Значение в (-inf, inf).","沿滚动条轴线上 Attachment1 相对 Attachment0 的目标位置。取值为 (-inf, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintCurrentPosition,,,"Current position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","Current position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","슬라이더 축을 따르는 Attachment0에 대한 Attachment1의 현재 위치입니다. 값의 범위는 (-inf, inf)입니다.","Текущее положение Attachment1 по отношению к Attachment0 вдоль оси ползунка. Значение в (-inf, inf).","沿滚动条轴线上 Attachment1 相对 Attachment0 的当前位置。取值为 (-inf, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.SlidingBallConstraintSize,,,"Size of the in-game visual associated with this constraint. Value in [0, inf).","Size of the in-game visual associated with this constraint. Value in [0, inf).","이 제약과 관련된 게임 내 비주얼의 크기. 값의 범위는 [0, inf)입니다.","Размер визуального представления в игре, связанного с этим ограничением. Значение в интервале [0, inf).","与此约束关联的游戏内视觉效果的大小。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintInclinationAngle,,,"Direction of the rotation axis as an angle from the x-axis in the xy-plane of Attachment0. Value in [-180, 180].","Direction of the rotation axis as an angle from the x-axis in the xy-plane of Attachment0. Value in [-180, 180].","Attachment0의 xy 평면에서 x축으로부터의 각도로서의 회전축의 방향. 값의 범위는 [-180, 180]입니다.","Направление оси вращения как угол от оси Х на плоскости XY для Attachment0. Значение в [-180, 180].","旋转轴的方向与 Attachment0 的 xy 平面上的 x 轴形成的夹角。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintAngularActuatorType,,,"Type of angular actuator: None, Motor, or Servo.","Type of angular actuator: None, Motor, or Servo.","각 액추에이터 유형: 없음, 모터 또는 서보.","Тип углового привода: нет, двигатель или сервопривод.",角传动机构的类型: 无、电机、伺服。
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintAngularLimitsEnabled,,,Enables the angular limits around the rotation axis.,Enables the angular limits around the rotation axis.,회전축 주위의 각도 제한을 활성화합니다.,Позволяет задавать угловые пределы вокруг оси вращения.,启用围绕旋转轴线的角度限制。
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintUpperAngle,,,"Upper limit for the angle (in degrees) between the reference axis and the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","Upper limit for the angle (in degrees) between the reference axis and the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","회전축 주위에서 기준 축과 Attachment1의 SecondaryAxis 간의 각도 상한. 값의 범위는 [-180, 180]입니다.","Верхний угловой предел (в градусах) между главной осью и осью SecondaryAxis для Attachment1 вокруг оси вращения. Значение в [-180, 180].","参考轴线和 Attachment1 的 SecondaryAxis 围绕旋转轴的角度上限 (以度为单位)。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintLowerAngle,,,"Lower limit for the angle (in degrees) between the reference axis and the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","Lower limit for the angle (in degrees) between the reference axis and the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","회전축 주위에서 기준 축과 Attachment1의 SecondaryAxis 간의 각도 하한. 값의 범위는 [-180, 180]입니다.","Нижний угловой предел (в градусах) между главной осью и осью SecondaryAxis для Attachment1 вокруг оси вращения. Значение в [-180, 180].","参考轴线和 Attachment1 的 SecondaryAxis 围绕旋转轴的角度下限 (以度为单位)。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintAngularRestitution,,,"Restitution of the two limits, or how elastic they are. Value in [0, 1].","Restitution of the two limits, or how elastic they are. Value in [0, 1].","두 제한의 복원 또는 탄력성. 값의 범위는 [0, 1]입니다.","Способность восстановления двух пределов, или их эластичность. Значение в [0, 1].","两个限制的弹性或弹性如何。取值为 [0, 1]。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintAngularVelocity,,,"The target angular velocity of the motor in radians per second around the rotation axis. Value in [0, inf).","The target angular velocity of the motor in radians per second around the rotation axis. Value in [0, inf).","회전축을 중심으로 한 모터의 목표 각속도(초당 라디안). 값의 범위는 [0, inf)입니다.","Целевая угловая скорость двигателя в радианах в секунду вокруг оси вращения. Значение в интервале [0, inf).","电机的目标角速度，以绕旋转轴转动的弧度/秒为单位。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintMotorMaxTorque,,,"The maximum torque the motor can apply to achieve the target angular velocity. The units are mass * studs^2 / second^2. Value in [0, inf).","The maximum torque the motor can apply to achieve the target angular velocity. The units are mass * studs^2 / second^2. Value in [0, inf).","목표 각속도를 달성하기 위해 모터가 적용할 수 있는 최대 토크. 단위는 질량 * 스터드제곱/초제곱입니다. 값의 범위는 [0, inf)입니다.","Максимальный крутящий момент, который двигатель может применить для достижения целевой угловой скорости. Единицами измерения являются масса*шипы^2/секунда^2. Значение в интервале [0, inf).","电机为达到目标角速度可施加的最大扭矩。单位为质量 * 格^2/秒^2。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintMotorMaxAngularAcceleration,,,"The maximum angular acceleration of the motor in radians per second squared. Value in [0, inf).","The maximum angular acceleration of the motor in radians per second squared. Value in [0, inf).","모터의 최대 각가속도(초제곱당 라디안). 값의 범위는 [0, inf)입니다.","Максимальное угловое ускорение двигателя в радианах в секунду в квадрате. Значение в интервале [0, inf).","电机的最大角加速度，以弧度/秒^2为单位。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintAngularSpeed,,,"Target angular speed. This value is unsigned as the servo will always move toward its target. In radians per second. Value in [0, inf).","Target angular speed. This value is unsigned as the servo will always move toward its target. In radians per second. Value in [0, inf).","목표 각속도. 서보가 항상 목표를 향해 이동하므로 이 값은 부호가 없습니다. 초당 라디안입니다. 값의 범위는 [0, inf)입니다.","Целевая угловая скорость. Это значение не подписано, так как сервопривод всегда двигается к цели. В радианах в секунду. Значение в интервале [0, inf).","目标角速度。此值为不分正负的值，因为伺服总是在向目标移动。以弧度/秒^2为单位。。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintServoMaxTorque,,,"Maximum torque the servo motor can apply. The units are mass * studs^2 / second^2. Value in [0, inf).","Maximum torque the servo motor can apply. The units are mass * studs^2 / second^2. Value in [0, inf).","서보 모터가 적용할 수 있는 최대 토크. 단위는 질량 * 스터드제곱/초제곱입니다. 값의 범위는 [0, inf)입니다.","Максимальный крутящий момент сервопривода. Единицами измерения являются масса*стойки^2/секунда^2. Значение в интервале [0, inf).","伺服电机可施加的最大扭矩。单位为质量 * 格^2/秒^2。取值为 [0, inf)。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintTargetAngle,,,"Target angle (in degrees) between the reference axis and the secondary axis of Attachment1 around the rotation axis. Value in [-180, 180].","Target angle (in degrees) between the reference axis and the secondary axis of Attachment1 around the rotation axis. Value in [-180, 180].","회전축 주위에서 기준 축과 Attachment1의 보조 축 간의 목표 각도. 값의 범위는 [-180, 180]입니다.","Целевой угол (в градусах) между главной и вспомогательной осями для Attachment1 вокруг оси вращения. Значение в [-180, 180].","参考轴线与 Attachment1 的次要轴线围绕旋转轴的目标角度 (以度为单位)。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintCurrentAngle,,,"Signed angle (in degrees) between the reference axis and the secondary axis of Attachment1 around the rotation axis. Value in [-180, 180].","Signed angle (in degrees) between the reference axis and the secondary axis of Attachment1 around the rotation axis. Value in [-180, 180].","회전축 주위에서 기준 축과 Attachment1의 보조 축 간의 부호 있는 각도. 값의 범위는 [-180, 180]입니다.","Подписанный угол (в градусах) между главной и вспомогательной осями для Attachment1 вокруг оси вращения. Значение в [-180, 180].","参考轴线与 Attachment1 的次要轴线围绕旋转轴的有正负之分的角度 (以度为单位)。取值为 [-180, 180]。"
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintWorldRotationAxis,,,The unit vector direction of the rotation axis in world coordinates.,The unit vector direction of the rotation axis in world coordinates.,세계 좌표에서 회전축의 단위 벡터 방향.,Направление единичного вектора оси вращения в мировых координатах.,旋转轴在世界坐标中的单位矢量方向。
Studio.ReflectionMetadata.ReflectionMetadata.CylindricalConstraintRotationAxisVisible,,,Enable the visibility of the rotation axis.,Enable the visibility of the rotation axis.,회전축 표시를 활성화합니다.,Включить визуализацию оси вращения.,启用旋转轴的可见性。
Studio.ReflectionMetadata.ReflectionMetadata.Mouse,,,Used to receive input from the user. Actually tracks mouse events and keyboard events.,Used to receive input from the user. Actually tracks mouse events and keyboard events.,사용자로부터 입력을 받는 데 사용됩니다. 실제로 마우스 및 키보드 이벤트를 추적합니다.,Используется для получения информации от пользователя. Отслеживает события мыши и клавиатуры.,用于接收用户输入。实际追踪鼠标事件和键盘事件。
Studio.ReflectionMetadata.ReflectionMetadata.MouseHit,,,"The CoordinateFrame of where the Mouse ray is currently hitting a 3D object in the Workspace.  If the mouse is not over any 3D objects in the Workspace, this property is nil.","The CoordinateFrame of where the Mouse ray is currently hitting a 3D object in the Workspace.  If the mouse is not over any 3D objects in the Workspace, this property is nil.",마우스 광선이 작업 공간에서 현재 3D 개체를 가리키는 위치의 CoordinateFrame. 작업 공간에서 마우스가 3D 개체 위에 있지 않으면 이 속성은 nil입니다.,"Параметр CoordinateFrame, обозначающий, где луч мыши попадает на 3D-объект в рабочей области. Если мышь не находится над 3D-объектами в рабочей области, параметр имеет значение nil.",Mouse 光线在工作区中当前指向的 3D 物体的 CoordinateFrame。若鼠标在工作区中未指向任意 3D 物体，则此属性无值。
Studio.ReflectionMetadata.ReflectionMetadata.MouseIcon,,,"The current Texture of the Mouse Icon. Stored as a string, for more information on how to format the string <a href='http://wiki.roblox.com/index.php/Content' target='_blank'>go here</a>","The current Texture of the Mouse Icon. Stored as a string, for more information on how to format the string <a href='http://wiki.roblox.com/index.php/Content' target='_blank'>go here</a>","마우스 아이콘의 현재 텍스처로, 문자열로 저장되어 있습니다. 문자열 형식을 지정하는 방법에 대한 자세한 내용을 보려면 <a href='http://wiki.roblox.com/index.php/Content' target='_blank'>여기로 이동</a>하세요","Текущая текстура значка мыши, сохраненная в виде строки. Чтобы узнать больше о форматировании строки, <a href='http://wiki.roblox.com/index.php/Content' target='_blank'>перейдите по ссылке</a>",Mouse Icon 的当前 Texture。以字符串形式存储，欲了解更多关于该字符串的格式信息，请<a href='http://wiki.roblox.com/index.php/Content' target='_blank'>点击这里</a>
Studio.ReflectionMetadata.ReflectionMetadata.MouseOrigin,,,The CoordinateFrame of where the Mouse is when the mouse is not clicking.  This CoordinateFrame will be very close to the Camera.CoordinateFrame.,The CoordinateFrame of where the Mouse is when the mouse is not clicking.  This CoordinateFrame will be very close to the Camera.CoordinateFrame.,마우스가 클릭되지 않을 때 마우스가 있는 CoordinateFrame. 이 CoordinateFrame은 Camera.CoordinateFrame에 매우 가깝습니다.,"Параметр CoordinateFrame, обозначающий, где находится мышь, когда кнопки мыши не нажаты. Значение параметра CoordinateFrame очень близко значению Camera.CoordinateFrame.",鼠标未点击时 Mouse 所在位置的 CoordinateFrame。此 CoordinateFrame 会与 Camera.CoordinateFrame 非常接近。
Studio.ReflectionMetadata.ReflectionMetadata.MouseTarget,,,"The Part the mouse is currently over. If the mouse is not currently over any object (on the skybox, for example) this property is nil.","The Part the mouse is currently over. If the mouse is not currently over any object (on the skybox, for example) this property is nil.",현재 마우스가 닿은 부분. 마우스가 현재 스카이 박스 등의 개체 위에 있지 않은 경우 이 속성은 nil입니다.,"Деталь, над которой мышь находится в данный момент. Если мышь не находится над каким-либо объектом (например, на скайбоксе), то это свойство имеет значение nil.",鼠标当前悬停位置的 Part。若鼠标当前未悬停在任意物体上方 (如在天空盒上)，则此属性无值。
Studio.ReflectionMetadata.ReflectionMetadata.MouseTargetFilter,,,"A Part or Model that the Mouse will ignore when trying to find the Target, TargetSurface and Hit.","A Part or Model that the Mouse will ignore when trying to find the Target, TargetSurface and Hit.","Target, TargetSurface 및 Hit를 찾으려고 할 때 마우스가 무시할 파트 또는 모델.","Деталь или модель, которую мышь игнорирует при попытке найти Target, TargetSurface и Hit.",Mouse 在尝试寻找 Target、TargetSurface 和 Hit 时会忽略的 Part 或 Model。
Studio.ReflectionMetadata.ReflectionMetadata.MouseTargetSurface,,,"The NormalId (Top, Left, Down, etc.) of the face of the part the Mouse is currently over.","The NormalId (Top, Left, Down, etc.) of the face of the part the Mouse is currently over.","현재 마우스가 닿아 있는 파트 표면의 NormalId(Top, Left, Down 등).","NormalId (верх, лево, вниз и т. д.) лицевой стороны той детали, над которой в данный момент находится мышь.",鼠标当前悬停位置的部件的面的 NormalId (Top、Left、Down 等)。
Studio.ReflectionMetadata.ReflectionMetadata.MouseUnitRay,,,The Unit Ray from where the mouse is (Origin) to the current Mouse.Target.,The Unit Ray from where the mouse is (Origin) to the current Mouse.Target.,마우스가 있는 곳(Origin)에서부터 현재 Mouse.Target까지의 Unit Ray.,Единичный луч от текущего положения мыши (исходное положение) до текущей цели Mouse.Target.,鼠标所在位置 (原来) 相对当前 Mouse.Target 的 Unit Ray。
Studio.ReflectionMetadata.ReflectionMetadata.MouseViewSizeX,,,The viewport's (game window) width in pixels.,The viewport's (game window) width in pixels.,뷰포트(게임 창)의 너비(픽셀).,Ширина области просмотра (игрового окна) в пикселях.,观察窗 (游戏窗口) 的宽度，以像素为单位。
Studio.ReflectionMetadata.ReflectionMetadata.MouseViewSizeY,,,The viewport's (game window) height in pixels.,The viewport's (game window) height in pixels.,뷰포트(게임 창)의 높이(픽셀).,Высота области просмотра (игрового окна) в пикселях.,观察窗 (游戏窗口) 的高度，以像素为单位。
Studio.ReflectionMetadata.ReflectionMetadata.MouseX,,,The absolute pixel position of the Mouse along the x-axis of the viewport (game window). Values start at 0 on the left hand side of the screen and increase to the right.,The absolute pixel position of the Mouse along the x-axis of the viewport (game window). Values start at 0 on the left hand side of the screen and increase to the right.,뷰포트(게임 창)의 X축을 따라 위치한 마우스의 절대 픽셀 위치. 값은 화면 왼쪽에서 0으로 시작해 오른쪽으로 갈수록 증가합니다.,Абсолютное положение мыши по оси X в области просмотра (игровое окно) в пикселях. Начинается с 0 в левой части экрана и возрастает в правом направлении.,Mouse 在观察窗 (游戏窗口) 的 x 轴上的绝对像素位置。屏幕最左侧取值为 0 并向右逐渐增加。
Studio.ReflectionMetadata.ReflectionMetadata.MouseY,,,The absolute pixel position of the Mouse along the y-axis of the viewport (game window). Values start at 0 on the top of the screen and increase to the bottom.,The absolute pixel position of the Mouse along the y-axis of the viewport (game window). Values start at 0 on the top of the screen and increase to the bottom.,뷰포트(게임 창)의 Y축을 따라 위치한 마우스의 절대 픽셀 위치. 값은 화면 위쪽에서 0으로 시작해 아래쪽으로 갈수록 증가합니다.,Абсолютное положение мыши по оси Y в области просмотра (игровое окно) в пикселях. Начинается с 0 в верхней части экрана и возрастает в нижнем направлении.,Mouse 在观察窗 (游戏窗口) 的 y 轴上的绝对像素位置。屏幕最上部取值为 0 并向下逐渐增加。
Studio.ReflectionMetadata.ReflectionMetadata.MouseButton1Down,,,"Fired when the first button (usually the left, but could be another) on the mouse is depressed.","Fired when the first button (usually the left, but could be another) on the mouse is depressed.",마우스의 첫 번째 버튼(보통 왼쪽이지만 아닐 수도 있음)을 누르면 발생됩니다.,"Возникает при нажатии первой кнопки мыши (обычно левой, но возможны и другие).",按下鼠标上的第一个按钮 (通常为左键，但也有可能是右键) 时触发。
Studio.ReflectionMetadata.ReflectionMetadata.MouseButton1Up,,,"Fired when the first button (usually the left, but could be another) on the mouse is release.","Fired when the first button (usually the left, but could be another) on the mouse is release.",마우스의 첫 번째 버튼(보통 왼쪽이지만 아닐 수도 있음)을 놓으면 발생됩니다.,"Возникает при отпускании первой кнопки мыши (обычно левой, возможны и другие).",释放鼠标上的第一个按钮 (通常为左键，但也有可能是右键) 时触发。
Studio.ReflectionMetadata.ReflectionMetadata.MouseButton2Down,,,This event is currently non-operational.,This event is currently non-operational.,이 이벤트는 현재 작동하지 않습니다.,Это событие в настоящее время не работает.,此事件当前无法使用。
Studio.ReflectionMetadata.ReflectionMetadata.MouseButton2Up,,,This event is currently non-operational.,This event is currently non-operational.,이 이벤트는 현재 작동하지 않습니다.,Это событие в настоящее время не работает.,此事件当前无法使用。
Studio.ReflectionMetadata.ReflectionMetadata.MouseIdle,,,"Fired constantly when the mouse is not firing any other event (i.e. the mouse isn't moving, nor any buttons being pressed or depressed).","Fired constantly when the mouse is not firing any other event (i.e. the mouse isn't moving, nor any buttons being pressed or depressed).","마우스가 다른 이벤트를 발생시키지 않을 때(예: 마우스가 움직이지 않거나, 버튼이 눌리거나 해제될 때) 계속 발생됩니다.","Генерируется постоянно, когда нет никакого события мыши (т. е. мышь не двигается, кнопки мыши не нажимаются и не отпускаются).",鼠标未触发其他事件 (如鼠标未移动，且未按压或松开任意按钮) 时持续触发。
Studio.ReflectionMetadata.ReflectionMetadata.MouseKeyDown,,,"Fired when a user presses a key on the keyboard. Argument is a string representation of the key.  If the key has no string representation (such as space), the string passed in is the keycode for that character. Keycodes are currently in ASCII.","Fired when a user presses a key on the keyboard. Argument is a string representation of the key.  If the key has no string representation (such as space), the string passed in is the keycode for that character. Keycodes are currently in ASCII.","사용자가 키보드의 키를 누르면 발생합니다. 인수는 키의 문자열 표현입니다. 키에 공백과 같은 문자열 표현이 없는 경우, 전달된 문자열이 해당 문자의 키 코드입니다. 키 코드는 현재 ASCII 형식입니다.","Возникает при нажатии клавиши на клавиатуре. Аргументом является строковое представление клавиши. Если клавиша не имеет строкового представления (например, пробел), то переданная строка является кодом клавиши для этого символа. Коды клавиш в настоящее время представлены в формате ASCII.",用户按下键盘上的一个按键时触发。参数为代表该按键的字符串。若该按键无代表字符串 (如空格)，则传入的字符串为该字符的按键代码。目前按键代码为 ASCII 格式。
Studio.ReflectionMetadata.ReflectionMetadata.MouseKeyUp,,,"Fired when a user releases a key on the keyboard. Argument is a string representation of the key.  If the key has no string representation (such as space), the string passed in is the keycode for that character. Keycodes are currently in ASCII.","Fired when a user releases a key on the keyboard. Argument is a string representation of the key.  If the key has no string representation (such as space), the string passed in is the keycode for that character. Keycodes are currently in ASCII.","사용자가 키보드에서 키를 놓으면 발생합니다. 인수는 키의 문자열 표현입니다. 키에 공백과 같은 문자열 표현이 없는 경우, 전달된 문자열이 해당 문자의 키 코드입니다. 키 코드는 현재 ASCII 형식입니다.","Возникает при отпускании клавиши на клавиатуре. Аргументом является строковое представление клавиши. Если клавиша не имеет строкового представления (например, пробел), то переданная строка является кодом клавиши для этого символа. Коды клавиш в настоящее время представлены в формате ASCII.",当用户松开键盘上的一个按键时触发。参数为代表该按键的字符串。若该按键无代表字符串（如空格），则传入的字符串为该字符的键码。目前键码为 ASCII 格式。
Studio.ReflectionMetadata.ReflectionMetadata.MouseMove,,,Fired when the mouse X or Y member changes.,Fired when the mouse X or Y member changes.,마우스 X 또는 Y 멤버가 변경되면 발생합니다.,Возникает при смене координат X или Y мыши.,鼠标的 X 或 Y 值改变时触发。
Studio.ReflectionMetadata.ReflectionMetadata.MouseWheelBackward,,,This event is currently non-operational.,This event is currently non-operational.,이 이벤트는 현재 작동하지 않습니다.,Это событие в настоящее время не работает.,此事件当前无法使用。
Studio.ReflectionMetadata.ReflectionMetadata.MouseWheelForward,,,This event is currently non-operational.,This event is currently non-operational.,이 이벤트는 현재 작동하지 않습니다.,Это событие в настоящее время не работает.,此事件当前无法使用。
Studio.ReflectionMetadata.ReflectionMetadata.TaskSchedulerSetThreadShare,,,Deprecated,Deprecated,더 이상 사용되지 않음,Устарело,已过时
Studio.ReflectionMetadata.ReflectionMetadata.ClickDetector,,,Raises mouse events for parent object,Raises mouse events for parent object,부모 개체에 대한 마우스 이벤트를 발생시킵니다.,Генерирует события мыши для родительского объекта,为父对象引发鼠标事件
Studio.ReflectionMetadata.ReflectionMetadata.ClickDetectorMaxActivationDistance,,,The maximum distance a Player's character can be from the ClickDetector's parent Part that will allow the Player's mouse to fire events on this object.,The maximum distance a Player's character can be from the ClickDetector's parent Part that will allow the Player's mouse to fire events on this object.,플레이어의 캐릭터가 ClickDetector의 부모 파트로부터 최대 거리를 유지하면 플레이어의 마우스가 이 개체에서 이벤트를 발생시킬 수 있습니다.,"Максимальное расстояние между персонажем игрока и родительской деталью ClickDetector, на котором мышь игрока может запускать события на этом объекте.",Player 的角色与 ClickDetector 的父系 Part 的最大距离，将允许 Player 的鼠标在该对象上触发事件。
Studio.ReflectionMetadata.ReflectionMetadata.ClickDetectorMouseClick,,,Fired when a player clicks on the parent Part of ClickDetector. The argument provided is always of type Player.,Fired when a player clicks on the parent Part of ClickDetector. The argument provided is always of type Player.,플레이어가 ClickDetector의 부모 파트를 클릭하면 발생합니다. 제공된 인수는 항상 Player 유형입니다.,Возникает при щелчке игроком родительской детали ClickDetector. Аргумент всегда имеет тип Player.,玩家单击 ClickDetector 的父系 Part 时触发。提供的参数始终为 Player 类型。
Studio.ReflectionMetadata.ReflectionMetadata.ClickDetectorMouseHoverEnter,,,Fired when a player's mouse enters on the parent Part of ClickDetector. The argument provided is always of type Player.,Fired when a player's mouse enters on the parent Part of ClickDetector. The argument provided is always of type Player.,플레이어의 마우스가 ClickDetector의 부모 파트에 들어가면 발생합니다. 제공된 인수는 항상 Player 유형입니다.,"Возникает, когда курсор мыши игрока входит в родительскую деталь ClickDetector. Аргумент всегда имеет тип Player.",玩家的鼠标进入 ClickDetector 的父系 Part 时触发。提供的参数始终为 Player 类型。
Studio.ReflectionMetadata.ReflectionMetadata.ClickDetectorMouseHoverLeave,,,Fired when a player's mouse leaves the parent Part of ClickDetector. The argument provided is always of type Player.,Fired when a player's mouse leaves the parent Part of ClickDetector. The argument provided is always of type Player.,플레이어의 마우스가 ClickDetector의 부모 파트를 떠날 때 발생합니다. 제공된 인수는 항상 Player 유형입니다.,"Вохзникает, когда курсор мыши игрока выходит из родительской детали ClickDetector. Аргумент всегда имеет тип Player.",玩家的鼠标离开 ClickDetector 的父系 Part 时触发。提供的参数始终为 Player 类型。
Studio.ReflectionMetadata.ReflectionMetadata.Smoke,,,Makes the parent part or model object emit smoke,Makes the parent part or model object emit smoke,부모 파트 또는 모델 개체에서 연기가 나도록 합니다.,Заставляет родительскую деталь или объект модели дымиться,使父部件或模型对象发出烟雾
Studio.ReflectionMetadata.ReflectionMetadata.Trail,,,Makes two attachments emit trail when moving,Makes two attachments emit trail when moving,움직일 때 두 연결부가 트레일을 방출합니다.,Заставляет два элемента оснастки оставлять след при движении,使两个附件在移动时留下轨迹
Studio.ReflectionMetadata.ReflectionMetadata.Beam,,,Makes beam between two attachments,Makes beam between two attachments,두 연결부 사이에 빔을 만듭니다.,Создает балку между двумя элементами оснастки,在两个附件之间制造光束
Studio.ReflectionMetadata.ReflectionMetadata.ParticleEmitter,,,A generic particle system.,A generic particle system.,일반 파티클 시스템.,Стандартная система частиц.,一套通用粒子系统。
Studio.ReflectionMetadata.ReflectionMetadata.ParticleEmitterLightInfluence,,,"Specifies the amount of influence lighting has on the particle emmitter. A value of 0 is unlit, 1 is fully lit. Fractional values blend from unlit to lit.","Specifies the amount of influence lighting has on the particle emmitter. A value of 0 is unlit, 1 is fully lit. Fractional values blend from unlit to lit.",조명이 파티클 이미터에 미치는 영향력을 지정합니다. 값이 0이면 조명을 비추지 않고 값이 1이면 조명을 완전히 비춥니다. 분수 값은 조명을 비추지 않음(unlit)과 비춤(lit) 간에 혼합됩니다.,"Определяет влияние освещения на излучатель частиц. Значение 0 — не освещается, 1 — полностью освещено. Дробные значения соответствуют степени освещенности.",指定照明对粒子发射器的影响量。取值 0 表示完全熄灭，取值 1 表示完全点亮。中间的分数值表示从完全熄灭到完全点亮之间的状态。
Studio.ReflectionMetadata.ReflectionMetadata.Sparkles,,,Makes the parent part or model object fantastic,Makes the parent part or model object fantastic,부모 파트 또는 모델 개체를 멋지게 만듭니다,Делает родительскую деталь или объект модели фантастическими,使父部件或模型对象变得非常酷炫
Studio.ReflectionMetadata.ReflectionMetadata.Explosion,,,"Creates an Explosion! This can be used as a purely graphical effect, or can be made to damage objects.","Creates an Explosion! This can be used as a purely graphical effect, or can be made to damage objects.","폭발을 생성합니다! 폭발은 순수한 그래픽 효과로 사용되거나, 개체를 손상시키는 데 사용될 수 있습니다.",Создает взрыв! Может служить исключительно визуальным эффектом или вызывать повреждения объектов.,制造一场爆炸! 可用于纯粹的图形效果，或用于破坏物体。
Studio.ReflectionMetadata.ReflectionMetadata.ExplosionBlastPressure,,,How much force this Explosion exerts on objects within it's BlastRadius. Setting this to 0 creates a purely graphical effect. A larger number will cause Parts to fly away at higher velocities.,How much force this Explosion exerts on objects within it's BlastRadius. Setting this to 0 creates a purely graphical effect. A larger number will cause Parts to fly away at higher velocities.,이 폭발이 BlastRadius 내부의 객체에 가하는 힘의 정도. 0으로 설정하면 순수한 그래픽 효과만 생성됩니다. 값이 커질수록 파트가 더욱 빠른 속도로 날아갑니다.,"Насколько сильно взрыв затрагивает объекты в радиусе BlastRadius. Если установить значение 0, эффект исключительно визуальный. Чем больше значение, тем больше деталей разлетается на более высокой скорости.",爆炸对在其 BlastRadius 内的物体施加的力度大小。设置为 0 可制造出纯粹的图形效果。数值越大，Part 被吹飞的速度就越快。
Studio.ReflectionMetadata.ReflectionMetadata.ExplosionBlastRadius,,,"How big the Explosion is. This is a circle starting from the center of the Explosion's Position, the larger this property the larger the circle of destruction.","How big the Explosion is. This is a circle starting from the center of the Explosion's Position, the larger this property the larger the circle of destruction.","폭발의 규모. 폭발 위치의 중심에서 시작하는 원이며, 이 속성이 커질수록 파괴의 원이 더욱 커집니다.","Насколько большой будет взрыв. Это круг, начинающийся от центра позиции взрыва. Чем больше значение свойства, тем больше круг разрушения.",爆炸的范围大小。这是一个以爆炸位置中心为中心的圆，属性值越大，破坏圈就越大。
Studio.ReflectionMetadata.ReflectionMetadata.ExplosionPosition,,,Where the Explosion occurs in absolute world coordinates.,Where the Explosion occurs in absolute world coordinates.,폭발이 발생하는 위치의 절대 세계 좌표.,Где происходит взрыв в абсолютных мировых координатах.,爆炸发生位置的绝对世界坐标。
Studio.ReflectionMetadata.ReflectionMetadata.ExplosionExplosionType,,,Defines the behavior of the Explosion. <a href='http://wiki.roblox.com/index.php/ExplosionType' target='_blank'>More info</a>,Defines the behavior of the Explosion. <a href='http://wiki.roblox.com/index.php/ExplosionType' target='_blank'>More info</a>,폭발의 동작을 정의합니다. <a href='http://wiki.roblox.com/index.php/ExplosionType' target='_blank'>추가 정보</a>,Определяет поведение взрыва. <a href='http://wiki.roblox.com/index.php/ExplosionType' target='_blank'>Узнать больше</a>,定义 Explosion 的行为。<a href='http://wiki.roblox.com/index.php/ExplosionType' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.Fire,,,Makes the parent part or model object emit fire,Makes the parent part or model object emit fire,부모 파트 또는 모델 개체에서 화염이 방출되도록 합니다.,Заставляет родительскую деталь или объект модели гореть,使父部件或模型对象喷出火焰
Studio.ReflectionMetadata.ReflectionMetadata.FireColor,,,The color of the base of the fire.  See SecondaryColor for more.,The color of the base of the fire.  See SecondaryColor for more.,화염의 기본색. 상세 정보는 SecondaryColor에서 확인하세요.,"Цвет места для огня. Чтобы узнать больше, см. SecondaryColor.",火焰的底色。更多信息请参阅 SecondaryColor。
Studio.ReflectionMetadata.ReflectionMetadata.FireHeat,,,How hot the fire appears to be. The flame moves quicker the higher this value is set.,How hot the fire appears to be. The flame moves quicker the higher this value is set.,화염이 뜨거운 정도. 이 값이 높을수록 화염이 더 빨리 움직입니다.,"Насколько горячим выглядит огонь. Чем выше заданное значение, тем быстрее движется пламя.",火焰的热度。此值设置得越高，火焰移动的速度越快。
Studio.ReflectionMetadata.ReflectionMetadata.FireSecondaryColor,,,"The color the fire interpolates to from Color. The longer a particle exists in the fire, the close to this color it becomes.","The color the fire interpolates to from Color. The longer a particle exists in the fire, the close to this color it becomes.",현 색상에서 화염이 보간하는 새로운 색상입니다. 파티클이 화염에 오래 존재할수록 이 색상에 가까워집니다.,"Цвет, на который меняется огонь со временем. Чем дольше частица находится в огне, тем ближе к этому цвету она становится.",火焰与 Color 的插值颜色。粒子在火焰中存在得越久，它与此颜色就越接近。
Studio.ReflectionMetadata.ReflectionMetadata.FireSize,,,How large the fire appears to be.,How large the fire appears to be.,화염의 크기.,Насколько большим должен выглядеть огонь.,火焰的大小。
Studio.ReflectionMetadata.ReflectionMetadata.Platform,,,"Equivalent to a seat, except that the character stands up rather than sits down.","Equivalent to a seat, except that the character stands up rather than sits down.",캐릭터가 앉지 않고 서 있을 때를 제외하고는 좌석과 동일합니다.,"Равнозначно сиденью, но персонаж встает, а не садится.",等同于座位，但角色在起立而非坐下状态时除外。
Studio.ReflectionMetadata.ReflectionMetadata.VehicleSeat,,,Automatically finds and powers hinge joints in an assembly.  Ignores motors.,Automatically finds and powers hinge joints in an assembly.  Ignores motors.,어셈블리에서 힌지 이음을 자동으로 찾아서 전원을 공급합니다. 모터를 무시합니다.,Автоматически находит и приводит в действие шарнирные соединения в сборке. Игнорирует двигатели.,自动在装配中寻找铰链接头并为其供能。请忽略电机。
Studio.ReflectionMetadata.ReflectionMetadata.FlagCanBeDropped,,,"If someone is carrying this flag, this bool determines whether or not they can drop it and run.","If someone is carrying this flag, this bool determines whether or not they can drop it and run.","누군가 이 플래그를 들고 있다면, 이 부울은 플래그를 떨어뜨리고 갈 수 있는지 여부를 결정합니다.","Если кто-то несет этот флаг, данное логическое значение определяет, можно ли бросить его и бежать.",若有人携带此旗帜，此布尔值将决定他们是否可以抛弃旗帜并跑开。
Studio.ReflectionMetadata.ReflectionMetadata.FlagTeamColor,,,The Team this flag is for. Corresponds with the TeamColors in the Teams service.,The Team this flag is for. Corresponds with the TeamColors in the Teams service.,이 플래그의 팀입니다. 팀 서비스의 TeamColors에 해당합니다.,"Команда, для которой предназначен данный флаг. Соответствует TeamColors в службе Teams.",此旗帜所属的 Team。对应 Teams 服务中的 TeamColors。
Studio.ReflectionMetadata.ReflectionMetadata.Decal,,,Descibes a texture that is placed on one of the sides of the Part it is parented to.,Descibes a texture that is placed on one of the sides of the Part it is parented to.,부모의 파트 측면 중 하나에 배치된 텍스처를 설명합니다.,"Описывает текстуру на одной из сторон детали, являющейся родительской.",描述放在其所属 Part 的一个面上的纹理。
Studio.ReflectionMetadata.ReflectionMetadata.DecalFace,,,Describes the face of the Part the decal will be applied to. <a href='http://wiki.roblox.com/index.php/NormalId' target='_blank'>More info</a>,Describes the face of the Part the decal will be applied to. <a href='http://wiki.roblox.com/index.php/NormalId' target='_blank'>More info</a>,데칼이 적용될 파트의 표면을 설명합니다. <a href='http://wiki.roblox.com/index.php/NormalId' target='_blank'>추가 정보</a>,"Описывает лицевую сторону детали, к которой будет применяться деколь. <a href='http://wiki.roblox.com/index.php/NormalId' target='_blank'>Узнать больше</a>",描述该贴花将会应用在 Part 哪个面。<a href='http://wiki.roblox.com/index.php/NormalId' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.DecalShiny,,,How much light will appear to reflect off of the decal.,How much light will appear to reflect off of the decal.,데칼에서 반사되는 빛의 양.,Сколько света должно отражаться от деколи.,贴花所反射的照明量。
Studio.ReflectionMetadata.ReflectionMetadata.DecalSpecular,,,How light will react to the surface of the decal.,How light will react to the surface of the decal.,빛이 데칼 표면에 반응하는 방식.,Как свет будет реагировать на поверхность деколи.,照明对贴花表面的反应。
Studio.ReflectionMetadata.ReflectionMetadata.DecalTransparency,,,"How visible the decal is.  1 is completely invisible, while 0 is completely opaque","How visible the decal is.  1 is completely invisible, while 0 is completely opaque","데칼의 가시성 정도. 0은 완전히 불투명하며, 1은 전혀 보이지 않습니다.","Насколько хорошо видна деколь. 1 — полностью невидима, 0 — полностью видима.",贴花的可见度。1 为完全不可见，0 为完全不透明。
Studio.ReflectionMetadata.ReflectionMetadata.JointInstanceActive,,,"Read-only boolean, true if the joint is active in world. Rigid joints may be inactive if they are redundant or form cycles.","Read-only boolean, true if the joint is active in world. Rigid joints may be inactive if they are redundant or form cycles.","읽기 전용 부울로, 이음이 세계에서 활성화된 경우 True입니다. 고정식 이음은 중복이거나 사이클을 형성하는 경우 비활성화될 수 있습니다.","Булева переменная только для чтения. Значение true, если соединение активно в мире. Жесткие соединения могут быть неактивными, если они избыточные или образуют циклы.",只读布尔值，若接头在世界中处于使用状态则为 true。如果硬接头过剩或形成环形，则可能未使用。
Studio.ReflectionMetadata.ReflectionMetadata.IntValue,,,Stores a int value in it's Value member. Useful to share int information across multiple scripts.,Stores a int value in it's Value member. Useful to share int information across multiple scripts.,Value 멤버에 int 값을 저장합니다. 여러 스크립트 간 int 정보를 공유하는 데 유용합니다.,Хранит значение int в члене Value. Полезно для обмена информацией int между несколькими скриптами.,在其 Value 成员中存储一个整数值。用于在多个脚本之间共享整数信息。
Studio.ReflectionMetadata.ReflectionMetadata.RayValue,,,Stores a Ray value in it's Value member. Useful to share Ray information across multiple scripts.,Stores a Ray value in it's Value member. Useful to share Ray information across multiple scripts.,Value 멤버에 Ray 값을 저장합니다. 여러 스크립트 간 Ray 정보를 공유하는 데 유용합니다.,Хранит значение Ray в члене Value. Полезно для обмена информацией Ray между несколькими скриптами.,在其 Value 成员中存储一个 Ray 值。用于在多个脚本之间共享 Ray 信息。
Studio.ReflectionMetadata.ReflectionMetadata.IntConstrainedValue,,,Stores an int value in it's Value member.  Value is clamped to be in range of Min and MaxValue. Useful to share int information across multiple scripts.,Stores an int value in it's Value member.  Value is clamped to be in range of Min and MaxValue. Useful to share int information across multiple scripts.,Value 멤버에 int 값을 저장합니다. 값은 MinValue 및 MaxValue 범위에 있도록 제한됩니다. 여러 스크립트 간 int 정보를 공유하는 데 유용합니다.,Хранит значение int в члене Value. Value ограничено диапазоном между Min и MaxValue. Используется для обмена информацией int между несколькими скриптами.,在其 Value 成员中存储一个整数值。该值被限制在 MinValue 和 MaxValue 之间。用于在多个脚本之间共享整数信息。
Studio.ReflectionMetadata.ReflectionMetadata.IntConstrainedValueMaxValue,,,"The maximum we allow this Value to be set.  If Value is set higher than this, it automatically gets adjusted to MaxValue","The maximum we allow this Value to be set.  If Value is set higher than this, it automatically gets adjusted to MaxValue",이 Value로 설정할 수 있는 최댓값입니다. Value가 이보다 높게 설정되면 MaxValue로 자동 조정됩니다.,"Максимальное допустимое значение Value. Если значение больше этого, оно автоматически устанавливается на MaxValue",我们允许此 Value 设置的最大值。若 Value 高于此值，将会自动被调整为 MaxValue。
Studio.ReflectionMetadata.ReflectionMetadata.IntConstrainedValueMinValue,,,"The minimum we allow this Value to be set.  If Value is set lower than this, it automatically gets adjusted to MinValue","The minimum we allow this Value to be set.  If Value is set lower than this, it automatically gets adjusted to MinValue",이 Value로 설정할 수 있는 최솟값입니다. Value가 이보다 낮게 설정되면 MinValue로 자동 조정됩니다.,"Минимальное допустимое значение Value. Если значение меньше этого, оно автоматически устанавливается на MinValue",我们允许此 Value 设置的最小值。若 Value 低于此值，将会自动被调整为 MinValue。
Studio.ReflectionMetadata.ReflectionMetadata.DoubleConstrainedValue,,,Stores a double value in it's Value member.  Value is clamped to be in range of Min and MaxValue. Useful to share double information across multiple scripts.,Stores a double value in it's Value member.  Value is clamped to be in range of Min and MaxValue. Useful to share double information across multiple scripts.,Value 멤버에 double 값을 저장합니다. 값은 MinValue 및 MaxValue 범위에 있도록 제한됩니다. 여러 스크립트 간 double 정보를 공유하는 데 유용합니다.,Хранит двойное значение в члене Value. Value ограничено диапазоном между Min и MaxValue. Используется для обмена двойной информацией между несколькими скориптами.,在其 Value 成员中存储一个双精度值。该值被限制在 MinValue 和 MaxValue 之间。用于在多个脚本之间共享双精度信息。
Studio.ReflectionMetadata.ReflectionMetadata.DoubleConstrainedValueMaxValue,,,"The maximum we allow this Value to be set.  If Value is set higher than this, it automatically gets adjusted to MaxValue","The maximum we allow this Value to be set.  If Value is set higher than this, it automatically gets adjusted to MaxValue",이 Value로 설정할 수 있는 최댓값입니다. Value가 이보다 높게 설정되면 MaxValue로 자동 조정됩니다.,"Максимальное допустимое значение Value. Если значение больше этого, оно автоматически устанавливается на MaxValue",我们允许此 Value 设置的最大值。若 Value 高于此值，将会自动被调整为 MaxValue。
Studio.ReflectionMetadata.ReflectionMetadata.DoubleConstrainedValueMinValue,,,"The minimum we allow this Value to be set.  If Value is set lower than this, it automatically gets adjusted to MinValue","The minimum we allow this Value to be set.  If Value is set lower than this, it automatically gets adjusted to MinValue",이 Value로 설정할 수 있는 최솟값입니다. Value가 이보다 낮게 설정되면 MinValue로 자동 조정됩니다.,"Минимальное допустимое значение Value. Если значение меньше этого, оно автоматически устанавливается на MinValue",我们允许此 Value 设置的最小值。若 Value 低于此值，将会自动被调整为 MinValue。
Studio.ReflectionMetadata.ReflectionMetadata.BoolValue,,,Stores a boolean value in it's Value member. Useful to share boolean information across multiple scripts.,Stores a boolean value in it's Value member. Useful to share boolean information across multiple scripts.,Value 멤버에 부울 값을 저장합니다. 여러 스크립트 간 부울 정보를 공유하는 데 유용합니다.,Хранит булево значение в члене Value. Полезно для обмена булевой информации между несколькими скриптами.,在其 Value 成员中存储一个布尔值。用于在多个脚本之间共享布尔信息。
Studio.ReflectionMetadata.ReflectionMetadata.FloorWire,,,Renders a thin cylinder than can be adorned with textures that 'flow' from one object to the next. Has basic pathing abilities and attempts to to not intersect anything. <a href='http://wiki.roblox.com/index.php/FloorWire_Guide' target='_blank'>More info</a>,Renders a thin cylinder than can be adorned with textures that 'flow' from one object to the next. Has basic pathing abilities and attempts to to not intersect anything. <a href='http://wiki.roblox.com/index.php/FloorWire_Guide' target='_blank'>More info</a>,한 개체에서 다른 개체로 '흐르는' 텍스처로 장식할 수 있는 얇은 실린더를 렌더링합니다. 기본 경로 지정 기능이 있으며 어떤 것과도 교차하지 않습니다. <a href='http://wiki.roblox.com/index.php/FloorWire_Guide' target='_blank'>추가 정보</a>,"Отображает тонкий цилиндр, на который можно наложить текстуры, «перетекающие» от одного объекта к другому. Имеет базовые возможности поиска пути и по возможности избегает пересечения. <a href='http://wiki.roblox.com/index.php/FloorWire_Guide' target='_blank'>Узнать больше</a>",渲染一个可以使用从一个物体“流”向下一个物体的纹理进行装饰的细圆柱体。拥有基本的寻路能力且试图不与任何东西相交。<a href='http://wiki.roblox.com/index.php/FloorWire_Guide' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.FloorWireCycleOffset,,,Controls how the decals are positioned along the wire. <a href='http://wiki.roblox.com/index.php/CycleOffset' target='_blank'>More info</a>,Controls how the decals are positioned along the wire. <a href='http://wiki.roblox.com/index.php/CycleOffset' target='_blank'>More info</a>,데칼이 와이어를 따라 배치되는 방법을 제어합니다. <a href='http://wiki.roblox.com/index.php/CycleOffset' target='_blank'>추가 정보</a>,"Указывает, как декали расположены вдоль провода. <a href='http://wiki.roblox.com/index.php/CycleOffset' target='_blank'>Узнать больше</a>",控制贴花在线上的定位方式。<a href='http://wiki.roblox.com/index.php/CycleOffset' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.FloorWireFrom,,,The object the FloorWire 'emits' from,The object the FloorWire 'emits' from,FloorWire가 '방출'되는 개체,"Объект, из которого «исходит» FloorWire",“发射”出 FloorWire 的物体
Studio.ReflectionMetadata.ReflectionMetadata.FloorWireStudsBetweenTextures,,,The space between two textures on the wire. Note: studs are relative depending on how far the camera is from the FloorWire.,The space between two textures on the wire. Note: studs are relative depending on how far the camera is from the FloorWire.,와이어에서 두 텍스처 사이의 간격. 참고: 스터드는 카메라와 FloorWire의 거리에 따라 상대적입니다.,"Пространство между двумя текстурами на проводе. Примечание: стойки располагаются в зависимости от того, как далеко находится камера от FloorWire.",线上两个纹理之间的空间。注: 格的相对大小取决于镜头与 FloorWire之间的距离。
Studio.ReflectionMetadata.ReflectionMetadata.FloorWireTexture,,,The image we use to render the textures that flow from beginning to end of the FloorWire.,The image we use to render the textures that flow from beginning to end of the FloorWire.,FloorWire의 시작부터 끝까지 연결된 텍스처를 렌더링하는 데 사용하는 이미지입니다.,"Изображение, которое используется для отображения текстур, протекающих от начала до конца FloorWire.",我们用来渲染从 FloorWire 头部流向尾部的纹理的图像。
Studio.ReflectionMetadata.ReflectionMetadata.FloorWireTextureSize,,,The size in studs of the Texture we use to flow from one object to the next.,The size in studs of the Texture we use to flow from one object to the next.,한 개체에서 다음 개체로 전달하기 위해 사용하는 텍스처의 스터드 크기.,"Размер (в стойках) Текстуры, которая используется от одного объекта к другому.",我们用来从一个物体流向下一个物体的纹理的大小 (以格为单位)。
Studio.ReflectionMetadata.ReflectionMetadata.FloorWireTo,,,The object the FloorWire 'emits' to,The object the FloorWire 'emits' to,FloorWire를 '방출'하는 개체,"Объект, к которому «проходит» FloorWire",FloorWire “发射”出的物体
Studio.ReflectionMetadata.ReflectionMetadata.FloorWireVelocity,,,The rate of travel that the textures flow along the wire.,The rate of travel that the textures flow along the wire.,텍스처가 와이어를 따라 흐르는 속도.,Скорость «проплывания» текстур по проводу.,纹理沿线流动的速度。
Studio.ReflectionMetadata.ReflectionMetadata.FloorWireWireRadius,,,How thick the wire is.,How thick the wire is.,와이어의 두께.,Толщина провода.,线的厚度。
Studio.ReflectionMetadata.ReflectionMetadata.CFrameValue,,,Stores a CFrame value in it's Value member. Useful to share CFrame information across multiple scripts.,Stores a CFrame value in it's Value member. Useful to share CFrame information across multiple scripts.,Value 멤버에 CFrame 값을 저장합니다. 여러 스크립트 간 CFrame 정보를 공유하는 데 유용합니다.,Хранит значение CFrame в члене Value. Полезно для обмена информацией о CFrame между несколькими скриптами.,在其 Value 成员中存储一个 CFrame 值。用于在多个脚本之间共享 CFrame 信息。
Studio.ReflectionMetadata.ReflectionMetadata.Color3Value,,,Stores a Color3 value in it's Value member. Useful to share Color3 information across multiple scripts.,Stores a Color3 value in it's Value member. Useful to share Color3 information across multiple scripts.,Value 멤버에 Color3 값을 저장합니다. 여러 스크립트 간 Color3 정보를 공유하는 데 유용합니다.,Хранит значение Color3 в члене Value. Полезно для обмена информацией о Color3 между несколькими скриптами.,在其 Value 成员中存储一个 Color3 值。用于在多个脚本之间共享 Color3 信息。
Studio.ReflectionMetadata.ReflectionMetadata.BrickColorValue,,,Stores a BrickColor value in it's Value member. Useful to share BrickColor information across multiple scripts.,Stores a BrickColor value in it's Value member. Useful to share BrickColor information across multiple scripts.,Value 멤버에 BrickColor 값을 저장합니다. 여러 스크립트 간 BrickColor 정보를 공유하는 데 유용합니다.,Хранит значение BrickColor в члене Value. Полезно для обмена информацией о BrickColor между несколькими скриптами.,在其 Value 成员中存储一个 BrickColor 值。用于在多个脚本之间共享 BrickColor 信息。
Studio.ReflectionMetadata.ReflectionMetadata.ValueBase,,,The base class to all Value Objects.,The base class to all Value Objects.,모든 Value Objects의 기본 클래스.,Базовый класс для всех объектов Value.,所有 Value 对象的基类。
Studio.ReflectionMetadata.ReflectionMetadata.Soundplay,,,Deprecated. Use Play() instead,Deprecated. Use Play() instead,더 이상 사용되지 않습니다. Play()를 대신 사용하세요,Устарело. Используйте Play(),已过时。请改用 Play()
Studio.ReflectionMetadata.ReflectionMetadata.SoundPlayOnRemove,,,The sound will play when it is removed from the Workspace. Looped sounds don't play,The sound will play when it is removed from the Workspace. Looped sounds don't play,작업 공간에서 제거되면 사운드가 재생됩니다. 반복 사운드는 재생되지 않습니다,Звук воспроизводится при удалении из рабочей области. Звуковые циклы не воспроизводятся,从工作区中移除时将会播放音效。不会播放循环音效
Studio.ReflectionMetadata.ReflectionMetadata.EchoSoundEffect,,,An echo audio effect that can be applied to a Sound or SoundGroup.,An echo audio effect that can be applied to a Sound or SoundGroup.,Sound 또는 SoundGroup에 적용할 수 있는 에코 오디오 효과.,"Аудиоэффект эха, который можно применить к звуку или звуковой группе.",可应用于 Sound 或 SoundGroup 的回声音频效果。
Studio.ReflectionMetadata.ReflectionMetadata.FlangeSoundEffect,,,A Flanging audio effect that can be applied to a Sound or SoundGroup.,A Flanging audio effect that can be applied to a Sound or SoundGroup.,Sound 또는 SoundGroup에 적용할 수 있는 플랜징 오디오 효과.,"Аудиоэффект фланжера, который можно применить к звуку или звуковой группе.",可应用于 Sound 或 SoundGroup 的镶边音频效果。
Studio.ReflectionMetadata.ReflectionMetadata.DistortionSoundEffect,,,A Distortion audio effect that can be applied to a Sound or SoundGroup.,A Distortion audio effect that can be applied to a Sound or SoundGroup.,Sound 또는 SoundGroup에 적용할 수 있는 디스토션 오디오 효과.,"Аудиоэффект искажения, который можно применить к звуку или звуковой группе.",可应用于 Sound 或 SoundGroup 的失真音频效果。
Studio.ReflectionMetadata.ReflectionMetadata.PitchShiftSoundEffect,,,A Pitch Shifting audio effect that can be applied to a Sound or SoundGroup.,A Pitch Shifting audio effect that can be applied to a Sound or SoundGroup.,Sound 또는 SoundGroup에 적용할 수 있는 피치 시프팅 오디오 효과.,"Аудиоэффект смещения высоты тона, который можно применить к звуку или звуковой группе.",可应用于 Sound 或 SoundGroup 的变调音频效果。
Studio.ReflectionMetadata.ReflectionMetadata.ChorusSoundEffect,,,A Chorus audio effect that can be applied to a Sound or SoundGroup.,A Chorus audio effect that can be applied to a Sound or SoundGroup.,Sound 또는 SoundGroup에 적용할 수 있는 코러스 오디오 효과.,"Аудиоэффект хора, который можно применить к звуку или звуковой группе.",可应用于 Sound 或 SoundGroup 的合奏音频效果。
Studio.ReflectionMetadata.ReflectionMetadata.TremoloSoundEffect,,,A Tremolo audio effect that can be applied to a Sound or SoundGroup.,A Tremolo audio effect that can be applied to a Sound or SoundGroup.,Sound 또는 SoundGroup에 적용할 수 있는 트레몰로 오디오 효과.,"Аудиоэффект тремоло, который можно применить к звуку или звуковой группе.",可应用于 Sound 或 SoundGroup 的颤音音频效果。
Studio.ReflectionMetadata.ReflectionMetadata.ReverbSoundEffect,,,A Reverb audio effect that can be applied to a Sound or SoundGroup.,A Reverb audio effect that can be applied to a Sound or SoundGroup.,Sound 또는 SoundGroup에 적용할 수 있는 리버브 오디오 효과.,"Аудиоэффект реверберации, который можно применить к звуку или звуковой группе.",可应用于 Sound 或 SoundGroup 的混响音频效果。
Studio.ReflectionMetadata.ReflectionMetadata.EqualizerSoundEffect,,,An Three-band Equalizer audio effect that can be applied to a Sound or SoundGroup.,An Three-band Equalizer audio effect that can be applied to a Sound or SoundGroup.,Sound 또는 SoundGroup에 적용할 수 있는 3밴드 이퀄라이저 오디오 효과.,"Аудиоэффект трехдиапазонного эквалайзера, который можно применить к звуку или звуковой группе.",可应用于 Sound 或 SoundGroup 的三波段均衡器音频效果。
Studio.ReflectionMetadata.ReflectionMetadata.CompressorSoundEffect,,,A Compressor audio effect that can be applied to a Sound or SoundGroup.,A Compressor audio effect that can be applied to a Sound or SoundGroup.,Sound 또는 SoundGroup에 적용할 수 있는 컴프레서 오디오 효과.,"Аудиоэффект компрессора, который можно применить к звуку или звуковой группе.",可应用于 Sound 或 SoundGroup 的压缩器音频效果。
Studio.ReflectionMetadata.ReflectionMetadata.SoundServiceAmbientReverb,,,The ambient sound environment.  May not work when using hardware sound,The ambient sound environment.  May not work when using hardware sound,주변 사운드 환경. 하드웨어 사운드를 사용할 때 작동하지 않을 수 있습니다.,Окружающая звуковая среда. Может не работать при использовании аппаратного звука,环境声音环境。使用硬件声音时可能无法正常工作
Studio.ReflectionMetadata.ReflectionMetadata.SoundServiceDopplerScale,,,"The doppler scale is a general scaling factor for how much the pitch varies due to doppler shifting in 3D sound. Doppler is the pitch bending effect when a sound comes towards the listener or moves away from it, much like the effect you hear when a train goes past you with its horn sounding. With dopplerscale you can exaggerate or diminish the effect.","The doppler scale is a general scaling factor for how much the pitch varies due to doppler shifting in 3D sound. Doppler is the pitch bending effect when a sound comes towards the listener or moves away from it, much like the effect you hear when a train goes past you with its horn sounding. With dopplerscale you can exaggerate or diminish the effect.",도플러 스케일은 3D 사운드에서 도플러 이동에 따라 피치가 얼마나 변하는지에 대한 일반적인 스케일링 인수입니다. 도플러는 사운드가 청취자 방향으로 이동하거나 청취자로부터 멀어질 때 발생하는 피치 굴곡 효과입니다(기차가 경적을 울리며 지나갈 때 들리는 효과와 유사함). 도플러 스케일을 사용하면 이러한 효과를 과장하거나 축소할 수 있습니다.,"Доплеровская шкала — это общий коэффициент масштабирования, определяющий степень изменения высоты тона при доплеровском сдвиге 3D-звука. Доплеровский эффект — это эффект искажения при приближении звука к слушателю или удалении от него, как если бы рядом проходил поезд со звучащим свистком. Доплеровская шкала позволяет усиливать или уменьшать этот эффект.",多布勒标度是用于衡量 3D 音效中因多布勒频移而导致的音调变化程度的一种通用衡量因素。多普勒效应是指音源向聆听者移动或远离聆听者时所产生的音调变化，如火车从你身边经过的同时鸣笛所产生的效果。通过多普勒标度，你可以夸大或减弱这种效果。
Studio.ReflectionMetadata.ReflectionMetadata.SoundServiceDistanceFactor,,,"the relative distance factor, compared to 1.0 meters.","the relative distance factor, compared to 1.0 meters.",1미터 대비 상대 거리 인수.,"коэффициент относительного расстояния по сравнению с 1,0 метром.",相对距离因子，比照 1.0 米。
Studio.ReflectionMetadata.ReflectionMetadata.SoundServiceRolloffScale,,,"Setting this value makes the sound drop off faster or slower. The higher the value, the faster volume will attenuate, and conversely the lower the value, the slower it will attenuate. For example a rolloff factor of 1 will simulate the real world, where as a value of 2 will make sounds attenuate 2 times quicker.","Setting this value makes the sound drop off faster or slower. The higher the value, the faster volume will attenuate, and conversely the lower the value, the slower it will attenuate. For example a rolloff factor of 1 will simulate the real world, where as a value of 2 will make sounds attenuate 2 times quicker.","이 값을 설정하면 소리가 줄어드는 속도가 달라집니다. 값을 높게 설정하면 볼륨이 빠르게 감쇠하고, 반대로 값을 낮게 설정하면 볼륨이 느리게 감쇠합니다. 예를 들어 롤오프 인수가 1이면 현실 세계를 시뮬레이션하고, 롤오프 인수가 2이면 소리가 2배 더 빠르게 감쇠됩니다.","Это значение определяет, насколько быстро затихает звук. Чем выше значение, тем быстрее звук затихнет, и наоборот — чем значение ниже, тем дольше он будет звучать. Например, коэффициент спада 1 моделирует реальный мир, а при коэффициент 2 звук затихает в 2 раза быстрее.",设置此值可以加快或减慢音量降低的速度。数值越大，音量衰减越快，数值越小，音量衰减越慢。例如，下降率为 1 时为模拟真实世界效果，而数值为 2 时则音量衰减速度将加快一倍。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridStyleLayoutSetCustomSortFunction,,,"When SortOrder is set to Custom, this lua function is used to determine the ordering of elements. Function should take two arguments (each will be an Instance child to compare), and return true if a comes before b, otherwise return false. In other words, use this function the same way you would use a table.sort function. The sorting should be deterministic, otherwise sort will fail and fall back to name order.","When SortOrder is set to Custom, this lua function is used to determine the ordering of elements. Function should take two arguments (each will be an Instance child to compare), and return true if a comes before b, otherwise return false. In other words, use this function the same way you would use a table.sort function. The sorting should be deterministic, otherwise sort will fail and fall back to name order.","SortOrder가 Custom으로 설정된 경우 이 Lua 함수는 요소의 순서를 결정하는 데 사용됩니다. 함수는 두 개의 인수(각각 비교할 인스턴스 자식이 됨)를 취해야 하며, a가 b 앞에 오면 true를 반환하고 그렇지 않으면 false를 반환합니다. 즉 table.sort 함수와 동일한 방식으로 이 함수를 사용하세요. 정렬은 확정적이어야 합니다. 그렇지 않으면 정렬이 실패하고 이름 순서로 폴백됩니다.","Когда для SortOrder установлено значение Custom, эта Lua-функция используется для определения порядка элементов. Функция принимает два аргумента (каждый из которых является дочерним элементом экземпляра для сравнения) и возвращает true, если a предшествует b. В противном случае возвращается false. Другими словами, используйте эту функцию так же, как функцию table.sort. Сортировка должна быть детерминированной, иначе произойдет сбой и возврат к сортировке по именам.",当 SortOrder 被设为 Custom 时，此 lua 函数可用于决定元素的顺序。函数应该有两个参数 (两者均为 Instance 子类以便进行比较)，若 a 在 b 前则返回 true，否则返回 false。换句话说，此函数的使用方式与使用 table.sort 函数相同。排序应当是具有确定性的，否则排序将会失败并恢复按名称排序。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridStyleLayoutApplyLayout,,,Forces a relayout of all elements. Useful when sort is set to Custom.,Forces a relayout of all elements. Useful when sort is set to Custom.,모든 요소를 ​​강제로 다시 레이아웃합니다. 정렬이 사용자 정의로 설정된 경우에 유용합니다.,"Выполняет принудительную перекомпоновку всех элементов. Полезно, если для сортировки выбрано значение Custom.",强制对所有元素进行重新布局。排序被设为 Custom 时很有用。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridStyleLayoutSortOrder,,,"Determines how we decide which element to place next. Can be Name or Custom. If using Custom, make sure SetCustomSortFunction was called with an appropriate sort function.","Determines how we decide which element to place next. Can be Name or Custom. If using Custom, make sure SetCustomSortFunction was called with an appropriate sort function.",다음에 배치할 요소를 정하는 방법을 결정합니다. 이름 또는 사용자 정의일 수 있습니다. Custom을 사용하는 경우 적절한 정렬 함수로 SetCustomSortFunction을 호출했는지 확인하십시오.,"Определяет, какой элемент разместить дальше. Может иметь значение Name или Custom. При использовании Custom убедитесь, что параметр SetCustomSortFunction вызван с соответствующей функцией сортировки.",决定我们将如何决定接下来该放置哪个元素。值可以是 Name 或 Custom。如果使用 Custom，请确保使用适当的排序函数调用 SetCustomSortFunction。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridStyleLayoutFillDirection,,,Determines which direction to fill the grid. Can be Horizontal or Vertical.,Determines which direction to fill the grid. Can be Horizontal or Vertical.,그리드를 채울 방향을 결정합니다. Horizontal 또는 Vertical일 수 있습니다.,"Определяет, в каком направлении заполнять сетку: горизонтальном или вертикальном.",决定填充网格的方向。可以是 Horizontal 或 Vertical。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridStyleLayoutHorizontalAlignment,,,"Determines how grid is placed within it's parent's container in the x direction. Can be Left, Center, or Right.","Determines how grid is placed within it's parent's container in the x direction. Can be Left, Center, or Right.","부모의 컨테이너 내 x 방향으로 그리드를 배치하는 방법을 결정합니다. Left, Center 또는 Right일 수 있습니다.","Определяет, как сетка помещается в контейнер родительского элемента в направлении X. Может быть слева, в центре или справа.",决定网格在其父容器内 x 方向上的放置方式。值可以是 Left、Center 或 Right。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridStyleLayoutVerticalAlignment,,,"Determines how grid is placed within it's parent's container in the y direction. Can be Top, Center, or Bottom.","Determines how grid is placed within it's parent's container in the y direction. Can be Top, Center, or Bottom.","부모의 컨테이너 내 y 방향으로 그리드를 배치하는 방법을 결정합니다. Top, Center 또는 Bottom일 수 있습니다.","Определяет, как сетка помещается в контейнер родительского элемента в направлении Y. Может быть сверху, в центре или снизу.",决定网格在其父容器内 y 方向上的放置方式。值可以是 Left、Center 或 Right。
Studio.ReflectionMetadata.ReflectionMetadata.UIListLayout,,,Sets the position of UI elements in a list. You can use a UIListLayout by parenting it to a GuiObject. The UIListLayout will then apply itself to all of its GuiObject siblings.,Sets the position of UI elements in a list. You can use a UIListLayout by parenting it to a GuiObject. The UIListLayout will then apply itself to all of its GuiObject siblings.,목록에서 UI 요소의 위치를 ​​설정합니다. UIListLayout을 GuiObject에 부모로 설정하여 사용할 수 있습니다. 그러면 UIListLayout이 모든 GuiObject 형제에 적용됩니다.,"Задает положение элементов интерфейса в списке. Можно использовать UIListLayout, создав его в GuiObject. Затем UIListLayout применится ко всем одноуровневым элементам в GuiObject.",设置一个列表中的 UI 元素的位置。可以通过将 UIListLayout 设为 GuiObject 的父类来使用它。随后 UIListLayout 会将其自身应用于所有 GuiObject 的同级类。
Studio.ReflectionMetadata.ReflectionMetadata.UIListLayoutPadding,,,"Determines the amount of free space between each element. Can be set either using scale (Percentage of parent's size in the current direction) or offset (a static spacing value, similar to pixel size).","Determines the amount of free space between each element. Can be set either using scale (Percentage of parent's size in the current direction) or offset (a static spacing value, similar to pixel size).",각 요소 사이 여유 공간의 크기를 결정합니다. 스케일(현재 방향의 부모 크기 백분율) 또는 오프셋(픽셀 크기와 유사한 정적 간격 값)을 사용하여 설정할 수 있습니다.,"Определяет размер свободного пространства между элементами. Можно установить либо с помощью шкалы (процент от размера родительского элемента в текущем направлении), либо со смещением (статическое значение расстояния, аналогичное размеру пикселя).",决定每个元素之间的可用空间量。可以使用比例 (父类在当前方向上的大小百分比) 或偏移 (一个静态间距值，类似于像素大小) 进行设置。
Studio.ReflectionMetadata.ReflectionMetadata.UIInlineLayout,,,Sets the position of UI elements inline. You can use a UIInlineLayout by parenting it to a GuiObject. The UIListLayout will then apply itself to all of its GuiObject siblings.,Sets the position of UI elements inline. You can use a UIInlineLayout by parenting it to a GuiObject. The UIListLayout will then apply itself to all of its GuiObject siblings.,UI 요소의 위치를 ​​인라인으로 설정합니다. UIInlineLayout을 GuiObject에 부모로 설정하여 사용할 수 있습니다. 그러면 UIListLayout이 모든 GuiObject 형제에 적용됩니다.,"Задает положение встроенных элементов интерфейса. Можно использовать UIInlineLayout, создав его в GuiObject. Затем UIListLayout применится ко всем одноуровневым элементам в GuiObject.",设置轴线上的 UI 元素的位置。可以通过将 UIListLayout 设为 GuiObject 的父类来使用它。随后 UIListLayout 会将其自身应用于所有 GuiObject 的同级类。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridLayout,,,"Sets the position of UI elements in a 2D grid (this can be modified to 1D grid for list layout). This will also set the elements to a particular size, although this can be overridden with particular constraints on elements. You can use a UIGridLayout by parenting it to a GuiObject. The UIGridLayout will then apply itself to all of its GuiObject siblings.","Sets the position of UI elements in a 2D grid (this can be modified to 1D grid for list layout). This will also set the elements to a particular size, although this can be overridden with particular constraints on elements. You can use a UIGridLayout by parenting it to a GuiObject. The UIGridLayout will then apply itself to all of its GuiObject siblings.","2D 그리드(목록 레이아웃의 경우 1D 그리드로 수정할 수 있음)에서 UI 요소의 위치를 설정합니다. 또한 요소를 특정 크기로 설정합니다. 단, 이 값은 요소에 대한 특정 제약으로 재정의될 수 있습니다. UIGridLayout을 GuiObject에 부모로 설정하여 사용할 수 있습니다. 그러면 UIListLayout이 모든 GuiObject 형제에 적용됩니다.","Задает положение элементов интерфейса в 2D-сетке (можно изменить на 1D-сетку для формата списка). Также масштабирует элементы до определенного размера (можно принудительно отменить с помощью определенных ограничений на элементы). Можно использовать UIInlineLayout, создав его в GuiObject. Затем UIListLayout применится ко всем одноуровневым элементам в GuiObject.",设置一个 2D 网格 (可以改为 1D 网格以进行列表布局) 中 UI 元素的位置。同时还会将元素设置为特定大小，但可以通过对元素进行特定约束来覆盖此设置。可以通过将 UIGridLayout 设为 GuiObject 的父类来使用它。随后 UIGridLayout 会将其自身应用于所有 GuiObject 的同级类。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridLayoutCellSize,,,Denotes what size each element should be. Can be overridden by elements using constraints on individual elements.,Denotes what size each element should be. Can be overridden by elements using constraints on individual elements.,각 요소의 크기를 나타냅니다. 개별 요소에 대한 제약을 사용하여 요소로 재정의할 수 있습니다.,Определяет размер каждого элемента. Можно принудительно отменить с помощью определенных ограничений на элементы.,表示每个元素的大小。可以被使用约束的单独元素覆盖。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridLayoutCellPadding,,,How much space between elements there should be.,How much space between elements there should be.,요소 사이에 필요한 공간의 크기.,Какое расстояние должно быть между элементами.,元素之间应当存在多大的空间。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridLayoutFillDirectionMaxCells,,,Determines how many cells over in the FillDirection we go before starting a new row or column. Set to 0 for max cell count.  Will be clamped if this is set higher than the parent container allows room for.,Determines how many cells over in the FillDirection we go before starting a new row or column. Set to 0 for max cell count.  Will be clamped if this is set higher than the parent container allows room for.,새 행 또는 열을 시작하기 전에 FillDirection으로 몇 개의 셀을 이동할지 결정합니다. 최대 셀 수로 지정하려면 0으로 설정하세요. 이 값을 부모 컨테이너가 허용하는 수치보다 높게 설정하면 클램핑됩니다.,"Определяет, на сколько ячеек в FillDirection нужно переместиться перед созданием новой строки или столбца. Установите 0 для максимального количества ячеек. Будет ограничено, если значение больше, чем позволяет родительский контейнер.",决定在 FillDirection 方向上开始新行或新列前我们需要经过多少单元格。设为 0 时取最大单元格数。若此值设定得比父容器所允许的空间大，则会被钳制。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridLayoutAbsoluteSize,,,"Returns the current size of the grid. If more elements are added, this can increase. If elements are removed this can decrease.","Returns the current size of the grid. If more elements are added, this can increase. If elements are removed this can decrease.",그리드의 현재 크기를 반환합니다. 더 많은 요소가 추가되면 증가할 수 있습니다. 요소가 제거되면 감소할 수 있습니다.,"Возвращает текущий размер сетки. Если добавить больше элементов, может увеличиться. Если удалить элементы, может уменьшиться.",返回网格的当前大小。若添加了更多元素，此值会增加。若元素被移除，则此值会减少。
Studio.ReflectionMetadata.ReflectionMetadata.UIGridLayoutStartCorner,,,"Which corner we start laying the elements out from. Can be TopLeft, TopRight, BottomLeft, BottomRight.","Which corner we start laying the elements out from. Can be TopLeft, TopRight, BottomLeft, BottomRight.","요소를 배치하기 시작하는 모서리 방향입니다. TopLeft, TopRight, BottomLeft, BottomRight일 수 있습니다.","С какого угла начинается раскладывание элементов. Может иметь значение TopLeft, TopRight, BottomLeft, BottomRight.",我们将会从哪个角开始铺设元素。值可以是 TopLeft、TopRight、BottomLeft 或 BottomRight。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayout,,,"Creates a paged viewing window, like the home screen of a mobile device. You can use a UIPageLayout by parenting it to a GuiObject. The UIPageLayout will then apply itself to all of its GuiObject siblings.","Creates a paged viewing window, like the home screen of a mobile device. You can use a UIPageLayout by parenting it to a GuiObject. The UIPageLayout will then apply itself to all of its GuiObject siblings.",모바일 기기의 홈 화면처럼 페이지가 지정된 보기 창을 만듭니다. UIPageLayout을 GuiObject에 부모로 설정하여 사용할 수 있습니다. 그러면 UIPageLayout이 모든 GuiObject 형제에 적용됩니다.,"Создает окно просмотра страницы, подобно главному экрану мобильного устройства. Можно использовать UIPageLayout, создав его в GuiObject. Затем UIPageLayout применится ко всем одноуровневым элементам в GuiObject.",创建一个分页查看窗口，类似移动设备的主屏幕。可以通过将 UIPageLayout 设为 GuiObject 的父类来使用它。随后 UIPageLayout 会将其自身应用于所有 GuiObject 的同级类。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutCurrentPage,,,The page that is either currently being displayed or is the target of the current animation.,The page that is either currently being displayed or is the target of the current animation.,현재 표시되고 있거나 현재 애니메이션 대상 페이지.,"Страница, которая отображается в данный момент или является целью текущей анимации.",当前正在显示的页面，或作为当前动画目标的页面。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutCircular,,,Whether or not the page layout wraps around at the ends.,Whether or not the page layout wraps around at the ends.,페이지 레이아웃이 프레임의 가장자리로 제한되는지에 대한 여부.,Будет ли макет страницы зацикливаться в конце.,页面布局是否在结尾处换行。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutPadding,,,"Determines the amount that pages are separated from each other by. Can be set either using scale (Percentage of parent's size in the current direction) or offset (a static spacing value, similar to pixel size).","Determines the amount that pages are separated from each other by. Can be set either using scale (Percentage of parent's size in the current direction) or offset (a static spacing value, similar to pixel size).",각 페이지 사이를 구분하는 공간 크기를 결정합니다. 스케일(현재 방향의 부모 크기 백분율) 또는 오프셋(픽셀 크기와 유사한 정적 간격 값)을 사용하여 설정할 수 있습니다.,"Определяет расстояние, на которое страницы разделены друг от друга. Можно установить либо с помощью шкалы (процент от размера родительского элемента в текущем направлении), либо со смещением (статическое значение расстояния, аналогичное размеру пикселя).",决定页面彼此之间的分离量。可以使用比例 (父类在当前方向上的大小百分比) 或偏移 (一个静态间距值，类似于像素大小) 进行设置。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutAnimated,,,Whether or not to animate transitions between pages.,Whether or not to animate transitions between pages.,페이지 간 전환에 애니메이션을 적용할지에 대한 여부.,Анимировать или нет переходы между страницами.,页面之间是否使用动画过渡。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutEasingStyle,,,The easing style to use when performing an animation.,The easing style to use when performing an animation.,애니메이션을 실행할 때 사용하는 감속/가속 스타일.,"Стиль упрощения, используемого при выполнении анимации.",执行动画时使用的缓动风格。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutEasingDirection,,,The easing direction to use when performing an animation.,The easing direction to use when performing an animation.,애니메이션을 실행할 때 사용하는 감속/가속 방향.,"Направление упрощения, используемого при выполнении анимации.",执行动画时使用的缓动方向。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutTweenTime,,,The length of the animation.,The length of the animation.,애니메이션의 길이.,Длительность анимации.,动画的长度。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutNext,,,"Sets CurrentPage to the page after the current page and animates to it, or does nothing if there isn't a next page.","Sets CurrentPage to the page after the current page and animates to it, or does nothing if there isn't a next page.",CurrentPage를 현재 페이지의 다음 페이지로 설정하고 애니메이션을 적용합니다. 다음 페이지가 없으면 아무 것도 수행하지 않습니다.,"Устанавливает значение CurrentPage на страницу после текущей и анимирует переход к ней. Ничего не делает, если следующей страницы нет.",将当前页面的下一页设为 CurrentPage 并执行动画至该页面，如果没有下一页则不执行任何操作。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutPrevious,,,"Sets CurrentPage to the page after the current page and animates to it, or does nothing if there isn't a next page.","Sets CurrentPage to the page after the current page and animates to it, or does nothing if there isn't a next page.",CurrentPage를 현재 페이지의 다음 페이지로 설정하고 애니메이션을 적용합니다. 다음 페이지가 없으면 아무 것도 수행하지 않습니다.,"Устанавливает значение CurrentPage на страницу после текущей и анимирует переход к ней. Ничего не делает, если следующей страницы нет.",将当前页面的下一页设为 CurrentPage 并执行动画至该页面，如果没有下一页则不执行任何操作。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutJumpTo,,,"If the instance is in the layout, then it sets CurrentPage to it and animtes to it. If circular layout is set, it will take the shortest path.","If the instance is in the layout, then it sets CurrentPage to it and animtes to it. If circular layout is set, it will take the shortest path.",인스턴스가 레이아웃에 있으면 CurrentPage를 인스턴스로 설정하고 애니메이션을 적용합니다. 원형 레이아웃이 설정되면 가장 짧은 경로가 사용됩니다.,"Если экземпляр находится в макете, то устанавливает значение CurrentPage на него и анимирует переход к нему. Если задан круглый макет, выбирается кратчайший путь.",如果实例位于布局中，则将其设为 CurrentPage 并执行动画至其位置。如果设置了环形布局，则会采用最短路径。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutJumpToIndex,,,"If the index is >= 0 and less than the size of the layout, acts like JumpTo. If it's out of bounds and circular is set, it will animate the full distance between the in-bounds index of CurrentPage and the new index.","If the index is >= 0 and less than the size of the layout, acts like JumpTo. If it's out of bounds and circular is set, it will animate the full distance between the in-bounds index of CurrentPage and the new index.","인덱스가 >= 0이고 레이아웃의 크기보다 작은 경우 JumpTo처럼 작동합니다. 경계를 벗어났으며 원형 레이아웃이 설정되어 있으면, CurrentPage의 인바운드 인덱스와 새 인덱스 사이의 전체 거리에 애니메이션이 적용됩니다.","Если индекс >= 0 и меньше, чем размер макета, действует как JumpTo. Если находится вне границ и задан круглый макет, он анимирует полное расстояние между внутренним индексом индексом CurrentPage и новым индексом.",如果索引大于等于 0 且小于该布局的大小，表现为 JumpTo。如果超出边界且设置了环形布局，则执行 CurrentPage 的入口索引至新索引之间的全长动画。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutPageEnter,,,"Fires when a page comes into view, and is going to be rendered.","Fires when a page comes into view, and is going to be rendered.",페이지가 나타나고 렌더링될 때 발생합니다.,Возникает при появлении страницы на экране и отображается.,当页面进入视图时触发，页面会进行渲染。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutPageLeave,,,"Fires when a page leaves view, and will not be rendered.","Fires when a page leaves view, and will not be rendered.",페이지가 사라지고 렌더링되지 않을 때 발생합니다.,Возникает при исчезновении страницы с экрана и не отображается.,当页面离开视图时触发，页面不会进行渲染。
Studio.ReflectionMetadata.ReflectionMetadata.UIPageLayoutStopped,,,"Fires when an animation to CurrentPage is completed without being cancelled, and the view stops scrolling.","Fires when an animation to CurrentPage is completed without being cancelled, and the view stops scrolling.",CurrentPage에 대한 애니메이션이 취소 없이 완료되고 보기의 스크롤이 중지되면 실행됩니다.,"Возникает, когда анимация перехода к CurrentPage завершается без отмены и прокрутка прекращается.",当动画执行至 CurrentPage 完成且未被取消时触发，视图停止滚动。
Studio.ReflectionMetadata.ReflectionMetadata.UITableLayout,,,Provides a layout of rows and columns that are sized based on the cells in them.,Provides a layout of rows and columns that are sized based on the cells in them.,셀을 기준으로 크기가 지정된 행과 열의 레이아웃을 제공합니다.,"Отображает расположение строк и столбцов, размер которых зависит от размеров ячеек в них.",提供一个拥有行与列的布局，行与列的大小基于其中的单元格。
Studio.ReflectionMetadata.ReflectionMetadata.UITableLayoutPadding,,,The amount of padding to insert in between the cells of the table.,The amount of padding to insert in between the cells of the table.,테이블 셀 사이에 삽입할 여백의 양.,"Количество отступов, которые необходимо вставить между ячейками таблицы.",表格的单元格之间插入的填充量。
Studio.ReflectionMetadata.ReflectionMetadata.UITableLayoutFillEmptySpaceRows,,,"Whether the table should expand to fill the available space of its container, row-wise.","Whether the table should expand to fill the available space of its container, row-wise.",컨테이너의 사용 가능한 공간을 채우도록 테이블을 행 방향으로 확장해야 하는지에 대한 여부.,Должна ли таблица расширяться для заполнения имеющегося пространства контейнера строками.,是否应扩展表格行以填充其容器的可用空间。
Studio.ReflectionMetadata.ReflectionMetadata.UITableLayoutFillEmptySpaceColumns,,,"Whether the table should expand to fill the available space of its container, column-wise.","Whether the table should expand to fill the available space of its container, column-wise.",컨테이너의 사용 가능한 공간을 채우도록 테이블을 열 방향으로 확장해야 하는지에 대한 여부.,Должна ли таблица расширяться для заполнения имеющегося пространства контейнера столбцами.,是否应扩展表格列以填充其容器的可用空间。
Studio.ReflectionMetadata.ReflectionMetadata.UITableLayoutMajorAxis,,,"Whether the direct siblings are considered the rows or the columns. The children of the direct siblings are the columns or rows, respectively.","Whether the direct siblings are considered the rows or the columns. The children of the direct siblings are the columns or rows, respectively.",직계 형제가 행 또는 열로 간주되는지에 대한 여부. 직계 형제의 자식은 각각 열 또는 행입니다.,Считаются ли прямые одноуровневые элементы строками или столбцами. Дочерние элементы одноуровневых элементов — это столбцы или строки соответственно.,直接同级类应被视为行还是列。直接同级类的子类分别为列或行。
Studio.ReflectionMetadata.ReflectionMetadata.UISizeConstraint,,,"Ensures a GuiObject does not become smaller or larger than the min and max size. If an element with a constraint is under the control of a layout, the constraint takes precedence in determining the element’s size, but not position. You can use a Constraint by parenting it to the element you wish to constrain.","Ensures a GuiObject does not become smaller or larger than the min and max size. If an element with a constraint is under the control of a layout, the constraint takes precedence in determining the element’s size, but not position. You can use a Constraint by parenting it to the element you wish to constrain.","GuiObject가 최소 및 최대 크기보다 작거나 커지지 않도록 합니다. 제약이 있는 요소에 레이아웃 제한이 있는 경우, 제약이 요소의 크기를 결정하는 데 우선하지만 위치는 그렇지 않습니다. 제약하고자 하는 요소에 Constraint를 부모가 되도록 설정하여 사용할 수 있습니다.","Следит за тем, чтобы GuiObject не выходил за рамки минимального и максимального размера. Если элемент с ограничениями находится под управлением макета, ограничение имеет приоритет в определении размера элемента, но не его положения. Можно использовать ограничение, создав его в элементе, который требуется ограничить.",确保 GuiObject 不会小于最小尺寸或大于最大尺寸。若拥有约束的元素受布局所控制，该约束优先决定元素的大小而非位置。可以将 Constraint 设置为想约束的元素的父类来使用它。
Studio.ReflectionMetadata.ReflectionMetadata.UISizeConstraintMinSize,,,The smallest size the GuiObject is allowed to be.,The smallest size the GuiObject is allowed to be.,GuiObject에 허용되는 최소 크기.,Самый маленький допустимый размер GuiObject.,GuiObject 允许的最小尺寸。
Studio.ReflectionMetadata.ReflectionMetadata.UISizeConstraintMaxSize,,,The biggest size the GuiObject is allowed to be.,The biggest size the GuiObject is allowed to be.,GuiObject가 허용되는 최대 크기.,Самый большой допустимый размер GuiObject.,GuiObject 允许的最大尺寸。
Studio.ReflectionMetadata.ReflectionMetadata.UITextSizeConstraint,,,"Ensures a GuiObject with text does not allow the font size to become larger or smaller than min and max text sizes. If an element with a constraint is under the control of a layout, the constraint takes precedence in determining the element’s size, but not position. You can use a Constraint by parenting it to the element you wish to constrain.","Ensures a GuiObject with text does not allow the font size to become larger or smaller than min and max text sizes. If an element with a constraint is under the control of a layout, the constraint takes precedence in determining the element’s size, but not position. You can use a Constraint by parenting it to the element you wish to constrain.","텍스트가 있는 GuiObject가 글꼴 크기를 최소 및 최대 텍스트 크기보다 크거나 작게 만들 수 없도록 합니다. 제약이 있는 요소에 레이아웃의 제한이 있는 경우, 제약이 요소의 크기를 결정하는 데 우선하지만 위치는 그렇지 않습니다. 제약하고자 하는 요소에 Constraint를 부모가 되도록 설정하여 사용할 수 있습니다.","Следит за тем, чтобы GuiObject с текстом не выходил за рамки минимального и максимального размера текста. Если элемент с ограничениями находится под управлением макета, ограничение имеет приоритет в определении размера элемента, но не его положения. Можно использовать ограничение, создав его в элементе, который требуется ограничить.",确保带有文本的 GuiObject 不会允许其字体大小大于最大文本尺寸或小于最小文本尺寸。若拥有约束的元素受布局所控制，该约束优先决定元素的大小而非位置。可以将 Constraint 设置为想约束的元素的父类来使用它。
Studio.ReflectionMetadata.ReflectionMetadata.UITextSizeConstraintMinTextSize,,,The smallest size the font is allowed to be.,The smallest size the font is allowed to be.,글꼴에 허용되는 최소 크기.,Самый маленький допустимый размер шрифта.,字体允许的最小尺寸。
Studio.ReflectionMetadata.ReflectionMetadata.UITextSizeConstraintMaxTextSize,,,The biggest size the font is allowed to be.,The biggest size the font is allowed to be.,글꼴에 허용되는 최대 크기.,Самый большой допустимый размер шрифта.,字体允许的最大尺寸。
Studio.ReflectionMetadata.ReflectionMetadata.UIAspectRatioConstraint,,,"Ensures a GuiObject will always have a particular aspect ratio. If an element with a constraint is under the control of a layout, the constraint takes precedence in determining the element’s size, but not position. You can use a Constraint by parenting it to the element you wish to constrain.","Ensures a GuiObject will always have a particular aspect ratio. If an element with a constraint is under the control of a layout, the constraint takes precedence in determining the element’s size, but not position. You can use a Constraint by parenting it to the element you wish to constrain.","GuiObject가 항상 특정 가로세로 비율을 유지하도록 합니다. 제약이 있는 요소에 레이아웃의 제한이 있는 경우, 제약이 요소의 크기를 결정하는 데 우선하지만 위치는 그렇지 않습니다. 제약하고자 하는 요소에 Constraint를 부모가 되도록 설정하여 사용할 수 있습니다.","Следит за тем, чтобы GuiObject сохранял определенные пропорции. Если элемент с ограничениями находится под управлением макета, ограничение имеет приоритет в определении размера элемента, но не его положения. Можно использовать ограничение, создав его в элементе, который требуется ограничить.",确保 GuiObject 始终具有特定的宽高比。若拥有约束的元素受布局所控制，该约束优先决定元素的大小而非位置。可以将 Constraint 设置为想约束的元素的父类来使用它。
Studio.ReflectionMetadata.ReflectionMetadata.UIAspectRatioConstraintAspectRatio,,,The aspect ratio to maintain. This is the width/height. Only positive numbers allowed.,The aspect ratio to maintain. This is the width/height. Only positive numbers allowed.,"유지할 가로세로 비율로, 너비/높이입니다. 양수만 허용됩니다.",Сохранять пропорции. Ширина/высота. Допускаются только положительные числа.,要维持的宽高比。比例为宽/高。只允许正数值。
Studio.ReflectionMetadata.ReflectionMetadata.UIAspectRatioConstraintAspectType,,,"Describes how the aspect ratio will determine its size. Options are FitWithinMaxSize, ScaleWithParentSize. FitWithinMaxSize will make the element the maximum size it can be within the current possible AbsoluteSize of the element while maintaining the AspectRatio. ScaleWithParentSize will make the element the closest to the parent element’s maximum size while maintaining aspect ratio.","Describes how the aspect ratio will determine its size. Options are FitWithinMaxSize, ScaleWithParentSize. FitWithinMaxSize will make the element the maximum size it can be within the current possible AbsoluteSize of the element while maintaining the AspectRatio. ScaleWithParentSize will make the element the closest to the parent element’s maximum size while maintaining aspect ratio.","가로세로 비율이 어떻게 크기를 결정하는지를 설명합니다. 옵션은 FitWithinMaxSize, ScaleWithParentSize입니다. FitWithinMaxSize는 AspectRatio를 유지하면서 요소를 현재 가능한 AbsoluteSize 내에서의 최대 크기로 조정합니다. ScaleWithParentSize는 가로세로 비율을 유지하면서 해당 요소가 부모 요소의 최대 크기에 가장 가까운 크기로 조정합니다.","Описывает, как пропорции определяют размер. Функции FitWithinMaxSize, ScaleWithParentSize. FitWithinMaxSize делает элемент максимального размером, который может быть в пределах текущего параметра AbsoluteSize элемента при сохранении AspectRatio. ScaleWithParentSize делает элемент наиболее близким к максимальному размеру родительского элемента при сохранении соотношения сторон.",描述宽高比如何确定其大小。选项包括 FitWithinMaxSize 和 ScaleWithParentSize。FitWithinMaxSize 会在维持 AspectRatio 的同时将元素缩放至其当前可能的 AbsoluteSize 以内的的最大尺寸。ScaleWithParentSize 则会在维持宽高比的同时将元素缩放至最接近其父元素的最大尺寸的大小。
Studio.ReflectionMetadata.ReflectionMetadata.UIAspectRatioConstraintDominantAxis,,,"Describes which axis to use when determining the new size of the element, while keeping respect to the aspect ratio.","Describes which axis to use when determining the new size of the element, while keeping respect to the aspect ratio.",가로세로 비율을 유지하면서 요소의 새 크기를 결정할 때 어떤 축을 사용하는지 설명합니다.,"Описывает, какую ось использовать при определении нового размера элемента, соблюдая пропорции.",描述在保持宽高比的同时应使用哪条轴线来决定元素的新尺寸。
Studio.ReflectionMetadata.ReflectionMetadata.UIScale,,,Uniformly scales a GUI object and all its children.,Uniformly scales a GUI object and all its children.,GUI 개체와 자식들을 일관되게 스케일링합니다.,Равномерно масштабирует объект графического интерфейса и все его дочерние объекты.,统一缩放 GUI 对象及其所有子类。
Studio.ReflectionMetadata.ReflectionMetadata.UIScaleScale,,,The scale factor to apply.,The scale factor to apply.,적용할 스케일 인수입니다.,Применяемый коэффициент масштабирования.,需应用的缩放比例。
Studio.ReflectionMetadata.ReflectionMetadata.UIPaddingPaddingLeft,,,The padding to apply on the left side relative to the parent's normal size.,The padding to apply on the left side relative to the parent's normal size.,부모의 일반 크기를 기준으로 왼쪽에 적용할 패딩입니다.,Отступы с левой стороны относительно обычного размера родительского элемента.,相对于父类的正常大小，在左侧应用的填充量。
Studio.ReflectionMetadata.ReflectionMetadata.UIPaddingPaddingRight,,,The padding to apply on the right side relative to the parent's normal size.,The padding to apply on the right side relative to the parent's normal size.,부모의 일반 크기를 기준으로 오른쪽에 적용할 패딩입니다.,Отступы с правой стороны относительно обычного размера родительского элемента.,相对于父类的正常大小，在右侧应用的填充量。
Studio.ReflectionMetadata.ReflectionMetadata.UIPaddingPaddingTop,,,The padding to apply on the top side relative to the parent's normal size.,The padding to apply on the top side relative to the parent's normal size.,부모의 일반 크기를 기준으로 위쪽에 적용할 패딩입니다.,Отступы сверху относительно обычного размера родительского элемента.,相对于父类的正常大小，在上方应用的填充量。
Studio.ReflectionMetadata.ReflectionMetadata.UIPaddingPaddingBottom,,,The padding to apply on the bottom side relative to the parent's normal size.,The padding to apply on the bottom side relative to the parent's normal size.,부모의 일반 크기를 기준으로 아래쪽에 적용할 패딩입니다.,Отступы снизу относительно обычного размера родительского элемента.,相对于父类的正常大小，在下方应用的填充量。
Studio.ReflectionMetadata.ReflectionMetadata.TweenBasePlaybackState,,,"The current state of how the tween is animating. Possible values are Begin, Playing, Paused, Completed and Cancelled. This property is modified by using functions such as Tween:Play(), Tween:Pause(), and Tween:Cancel(). Read-only.","The current state of how the tween is animating. Possible values are Begin, Playing, Paused, Completed and Cancelled. This property is modified by using functions such as Tween:Play(), Tween:Pause(), and Tween:Cancel(). Read-only.","트윈이 애니메이션화되는 방식의 현재 상태입니다. 가능한 값은 Begin, Playing, Paused, Completed, Cancelled입니다. 이 속성은 Tween:Play(), Tween:Pause(), Tween:Cancel() 등과 같은 함수를 사용하여 수정할 수 있습니다. 읽기 전용입니다.","Текущая анимация промежуточного кадра. Возможные значения: Begin, Playing, Paused, Completed и Cancelled Это свойство изменяется с помощью таких функций, как Tween:Play(), Tween:Pause() и Tween:Cancel(). Только для чтения.",补间动画的当前状态。可能的值包括 Begin、Playing、Paused、Completed 和 Cancelled。可使用诸如 Tween:Play()、Tween:Pause() 和 Tween:Cancel() 等之类的函数来修改此属性。只读。
Studio.ReflectionMetadata.ReflectionMetadata.TweenBasePlay,,,"Starts or resumes (if Tween.PlaybackState is Paused) the tween animation. If current PlaybackState is Cancelled, this property will reset the tween to the beginning properties and play the animations from the beginning.","Starts or resumes (if Tween.PlaybackState is Paused) the tween animation. If current PlaybackState is Cancelled, this property will reset the tween to the beginning properties and play the animations from the beginning.",Tween.PlaybackState가 Paused 상태인 경우 트윈 애니메이션을 시작하거나 다시 시작합니다. 현재 PlaybackState가 Cancelled이면 이 속성은 트윈을 시작 속성으로 재설정하고 애니메이션을 처음부터 재생합니다.,"Запускает или возобновляет (если Tween.PlaybackState на паузе) анимацию промежуточного кадра. Если PlaybackState имеет значение Cancelled, это свойство вернет параметры промежуточного кадра к начальным и начнет воспроизведение сначала.",开始或恢复 (若 Tween.PlaybackState 为 Paused) 执行补间动画。若当前 PlaybackState 为 Cancelled，此属性会重置补间至初始属性并从头开始执行动画。
Studio.ReflectionMetadata.ReflectionMetadata.TweenBasePause,,,Temporarily stops the tween animation. Animation can be resumed by calling Play().,Temporarily stops the tween animation. Animation can be resumed by calling Play().,트윈 애니메이션을 일시적으로 중지합니다. 애니메이션은 Play()를 호출하여 다시 시작할 수 있습니다.,"Временно останавливает анимацию промежуточного кадра. Анимацию можно возобновить, вызвав функцию Play().",暂停执行补间动画。可以调用 Play() 恢复执行动画。
Studio.ReflectionMetadata.ReflectionMetadata.TweenBaseCancel,,,Stops the tween animation. Animation can be restarted by calling Play(). Animation will start from the beginning values.,Stops the tween animation. Animation can be restarted by calling Play(). Animation will start from the beginning values.,트윈 애니메이션을 중지합니다. 애니메이션은 Play()를 호출하여 다시 시작할 수 있습니다. 애니메이션이 처음 값부터 다시 시작합니다.,"Останавливает анимацию промежуточного кадра. Анимацию можно перезапустить, вызвав функцию Play(). Анимация начнется с начальных значений.",停止执行补间动画。可以调用 Play() 重新开始执行动画。动画会从初始值开始。
Studio.ReflectionMetadata.ReflectionMetadata.TweenBaseCompleted,,,Fires when the tween either reaches PlaybackState Completed or Cancelled. PlaybackState of one of these types is passed as the first arg to the function listening to this event.,Fires when the tween either reaches PlaybackState Completed or Cancelled. PlaybackState of one of these types is passed as the first arg to the function listening to this event.,트윈이 PlaybackState Completed 또는 Cancelled에 도달하면 발생합니다. 이 유형 중 하나의 PlaybackState가 이 이벤트를 수신하는 함수에 첫 번째 인수로 전달됩니다.,"Возникает, когда промежуточный кадр достигает значения PlaybackState Completed или Cancelled. PlaybackState одного из этих типов передается в качестве первого аргумента в функцию, прослушивающую это событие.",当补间动画的 PlaybackState 到达 Completed 或 Cancelled 时触发。这些类型之一的 PlaybackState 将作为第一个参数传给监听此事件的函数。
Studio.ReflectionMetadata.ReflectionMetadata.Tween,,,"An object linked to an instance that animates properties on the instance over a specified period of time. Useful for easily moving UI objects around, rotating objects, etc. without having to write a lot of code. To create a new tween, please use TweenService:Create.","An object linked to an instance that animates properties on the instance over a specified period of time. Useful for easily moving UI objects around, rotating objects, etc. without having to write a lot of code. To create a new tween, please use TweenService:Create.",지정된 기간 동안 인스턴스의 속성을 애니메이션화하는 인스턴스에 연결된 개체입니다. 많은 코드를 작성하지 않고도 UI 개체를 쉽게 이동하거나 회전시킬 수 있습니다. 새 트윈을 만들려면 TweenService:Create를 사용하세요.,"Объект, связанный с экземпляром, который анимирует свойства на экземпляре в течение определенного периода времени. Полезен для легкого перемещения объектов интерфейса, вращающихся объектов и т. д. Для создания нового промежуточного кадра используйте TweenService:Create.",一个链接至实例的对象，可以在指定的时间段内为该实例设置动画属性。可用于便利地移动 UI 对象、旋转物体等，无需编写复杂的代码。若想创建一个新补间动画，请使用 TweenService:Create。
Studio.ReflectionMetadata.ReflectionMetadata.TweenInstance,,,The object this tween is operating on. Read-only.,The object this tween is operating on. Read-only.,이 트윈이 동작하는 개체입니다. 읽기 전용입니다.,"Объект, над которым работает промежуточный кадр. Только для чтения.",此补间动画操作的对象。只读。
Studio.ReflectionMetadata.ReflectionMetadata.TweenTweenInfo,,,Specifies how the tween animates. Read-only.,Specifies how the tween animates. Read-only.,트윈이 애니메이션화되는 방식을 지정합니다. 읽기 전용입니다.,"Указывает, как анимируется промежуточный кадр. Только для чтения.",指定补间动画的执行方式。只读。
Studio.ReflectionMetadata.ReflectionMetadata.TweenService,,,Service responsible for creating tweens on instances.,Service responsible for creating tweens on instances.,인스턴스에서 트윈 생성을 담당하는 서비스.,"Служба, отвечающая за создание промежуточных кадров в экземплярах.",负责在实例上创建补间动画的服务。
Studio.ReflectionMetadata.ReflectionMetadata.TweenServiceCreate,,,"Creates a Tween object bound to a particular Instance. The first arg is the Instance to tween. The second arg is a TweenInfo struct, which specifies how a tween should behave. The third arg is a table, which should specify the properties to tween as keys, with the end value specified as values to the keys.","Creates a Tween object bound to a particular Instance. The first arg is the Instance to tween. The second arg is a TweenInfo struct, which specifies how a tween should behave. The third arg is a table, which should specify the properties to tween as keys, with the end value specified as values to the keys.","특정 인스턴스에 바인딩된 Tween 개체를 생성합니다. 첫 번째 인수는 트윈을 만드는 데 사용되는 인스턴스입니다. 두 번째 인수는 트윈이 작동하는 방식을 지정하는 TweenInfo 구조체입니다. 세 번째 인수는 테이블이며, 트위닝할 속성을 키로 지정하고 끝 값을 키의 값으로 지정해야 합니다.","Создает объект Tween, привязанный к конкретному экземпляру. Первый аргумент — экземпляр для промежуточного кадра. Второй аргумент — структура TweenInfo, определяющая поведение промежуточного кадра. Третий аргумент — таблица, в которой в качестве ключей указываются свойства промежуточного кадра, а в качестве конечного значения — значения ключей.",创建一个绑定至特定实例的 Tween 对象。第一个参数是用于创建补间动画的 Instance。第二个参数是 Tweeninfo 结构，用于指定补间动画的行为模式。第三个参数是一个表，应为补间动画指定键属性，并将终值指定为键值。
Studio.ReflectionMetadata.ReflectionMetadata.TweenServiceGetValue,,,Transforms a linear alpha to a given EasingStyle and EasingDirection.,Transforms a linear alpha to a given EasingStyle and EasingDirection.,선형 알파를 지정된 EasingStyle 및 EasingDirection으로 변환합니다.,Преобразует линейный альфа в заданные параметры EasingStyle и EasingDirection.,将线性 alpha 转换为指定的 EasingStyle 和 EasingDirection。
Studio.ReflectionMetadata.ReflectionMetadata.StarterGuiSetCoreGuiEnabled,,,Will stop/begin certain core gui elements being rendered. See CoreGuiType for core guis that can be modified.,Will stop/begin certain core gui elements being rendered. See CoreGuiType for core guis that can be modified.,렌더링되는 특정 코어 GUI 요소를 중지 혹은 시작합니다. 수정 가능한 코어 GUI에 대해서는 CoreGuiType을 참조하세요.,"Останавливает/начинает отображение некоторых ключевых элементов интерфейса. Чтобы узнать, какие ключевые элементы интерфейса можно изменить, см. CoreGuiType.",会停止/开始渲染某些核心 GUI 元素。请参阅 CoreGuiType 以获取可修改的核心 GUI。
Studio.ReflectionMetadata.ReflectionMetadata.StarterGuiGetCoreGuiEnabled,,,Returns a boolean describing whether a CoreGuiType is currently being rendered.,Returns a boolean describing whether a CoreGuiType is currently being rendered.,CoreGuiType이 현재 렌더링되고 있는지 여부를 설명하는 부울 값을 반환합니다.,"Возвращает булеву переменную, описывающую, выполняется ли отображение CoreGuiType в данный момент.",返回描述当前是否正在渲染 CoreGuiType 的布尔值。
Studio.ReflectionMetadata.ReflectionMetadata.GuiService,,,"The GuiService is a special service, which currently allows developers to control what GuiObject is currently being selected by the Gamepad Gui navigator, and allows clients to check if Roblox's main menu is currently open. This service has a lot of hidden members, which are mainly used internally by Roblox's CoreScripts.","The GuiService is a special service, which currently allows developers to control what GuiObject is currently being selected by the Gamepad Gui navigator, and allows clients to check if Roblox's main menu is currently open. This service has a lot of hidden members, which are mainly used internally by Roblox's CoreScripts.","GuiService는 특별 서비스입니다. 개발자가 Gamepad Gui 탐색기에서 현재 선택한 GuiObject를 제어할 수 있도록 하고, 클라이언트가 Roblox의 기본 메뉴가 현재 열려 있는지 확인할 수 있도록 해 줍니다. 이 서비스에는 숨겨진 멤버가 많으며 주로 Roblox의 CoreScript에서 내부적으로 사용됩니다.","GuiService — это специальная служба, которая в настоящее время позволяет разработчикам контролировать, какой GuiObject в данный момент выбирается навигатором Gamepad Gui, и позволяет клиентам проверить, открыто ли главное меню Roblox в данный момент. В этой службе много скрытых пользователей, которые в основном используются внутри CoreScripts в Roblox.",GuiServie 是一种特殊服务，目前它可以允许开发者控制 Gamepad Gui 导航器当前选择的 GuiObject，以及允许客户端检查 Roblox 的主菜单当前是否打开。此服务有许多隐藏成员，主要供 Roblox 的 CoreScript 内部使用。
Studio.ReflectionMetadata.ReflectionMetadata.GuiServiceGetGuiInset,,,Returns a Tuple containing two Vector2 values representing the offset of user GUIs in pixels from the top right corner of the screen and the bottom right corner of the screen respectively.,Returns a Tuple containing two Vector2 values representing the offset of user GUIs in pixels from the top right corner of the screen and the bottom right corner of the screen respectively.,화면의 오른쪽 상단 모서리와 화면의 오른쪽 하단 모서리에서 각각 사용자 GUI 오프셋을 픽셀 단위로 나타내는 두 개의 Vector2 값이 포함된 Tuple을 반환합니다.,"Возвращает кортеж, содержащий два значения Vector2, отображающих смещение графического интерфейса в пикселях от верхнего правого угла экрана и нижнего правого угла экрана соответственно.",返回一个包含两个 Vector2 值的 Tuple 容器，这两个值分别代表屏幕右上角和右下角的用户 GUI 偏移量 (以像素为单位)。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionService,,,A service used to bind input to various lua functions.,A service used to bind input to various lua functions.,입력을 다양한 Lua 함수에 바인딩하는 데 사용되는 서비스.,Служба для привязки ввода к различным функциям Lua.,用于将输入绑定至各种 lua 函数的服务。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionServiceBindAction,,,"Binds 'functionToBind' to fire when any 'inputTypes' happen. InputTypes can be variable in number and type. Types can be Enum.KeyCode, single character strings corresponding to keys, or Enum.UserInputType. 'actionName' is a key used by many other ContextActionService functions to query state. 'createTouchButton' if true will create a button on screen on touch devices.  This button will fire 'functionToBind' with three arguments: first argument is the actionName, second argument is the UserInputState of the input, and the third is the InputObject that fired this function. If 'functionToBind' yields or returns nil or Enum.ContextActionResult.Sink, the input will be sunk. If it returns Enum.ContextActionResult.Pass, the next bound action in the stack will be invoked.","Binds 'functionToBind' to fire when any 'inputTypes' happen. InputTypes can be variable in number and type. Types can be Enum.KeyCode, single character strings corresponding to keys, or Enum.UserInputType. 'actionName' is a key used by many other ContextActionService functions to query state. 'createTouchButton' if true will create a button on screen on touch devices.  This button will fire 'functionToBind' with three arguments: first argument is the actionName, second argument is the UserInputState of the input, and the third is the InputObject that fired this function. If 'functionToBind' yields or returns nil or Enum.ContextActionResult.Sink, the input will be sunk. If it returns Enum.ContextActionResult.Pass, the next bound action in the stack will be invoked.","'inputTypes'가 발생할 때 시작되도록 'functionToBind'를 바인딩합니다. InputTypes는 숫자 또는 유형 변수일 수 있습니다. 유형은 Enum.KeyCode, 키에 해당하는 단일 문자열 또는 Enum.UserInputType일 수 있습니다. 'actionName'은 여러 다른 ContextActionService 함수가 상태를 쿼리할 때 사용하는 키입니다. 'createTouchButton'이 true이면 터치 기기의 화면에 버튼을 만듭니다. 이 버튼은 세 가지 인수로 'functionToBind'를 시작합니다. 첫 번째 인수는 actionName, 두 번째 인수는 입력의 UserInputState, 세 번째 인수는 이 함수를 시작한 InputObject입니다. 'functionToBind'가 nil 또는 Enum.ContextActionResult.Sink를 생성하거나 반환하면 입력이 싱크됩니다. Enum.ContextActionResult.Pass를 반환하면 스택의 다음 바인딩 작업이 호출됩니다.","Привязывает срабатывание функции functionToBind к появлению любых inputTypes. InputTypes могут быть переменными по количеству и типу. Типом может быть Enum.KeyCode, строки с одним символом, соответствующие клавишам, или Enum.UserInputType. actionName — это ключ, используемый многими другими функциями ContextActionService для запроса состояния. Если createTouchButton имеет значение true, будет создана кнопка на сенсорных устройствах. Эта кнопка запустит functionToBind с тремя аргументами: первый аргумент — это actionName, второй аргумент — это UserInputState ввода, третий — это InputObject, вызвавший функцию. Если functionToBind генерирует или вызывает значение nil или Enum.ContextActionResult.Sink, то ввод будет получен. Если возвращено Enum.ContextActionResult.Pass, вызывается следующее назначенное действие в стеке.",将 'functionToBind' 绑定至当任意 'inputTypes' 发生时触发。InputType 可以包括多种数量和类型。Type 的值可以是 Enum.KeyCode、对应按键的单一字符，或 Enum.UserInputType。'actionName' 是许多其他 ContextActionService 函数用于查询状态的键。 'createTouchButton' 若为 true，则会在触屏设备的屏幕上创建一个按钮。此按钮会触发 'functionToBind' 并提供三个参数：第一个参数为 actionName，第二个参数为输入的 UserInputState，第三个参数为触发此函数的 InputObject。若 'functionToBind' 暂停或返回空值或 Enum.ContextActionResult.Sink，输入会被汇聚。若返回 Enum.ContextActionResult.Pass，则调用堆栈中的下一个操作操作。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionServiceSetTitle,,,"If 'actionName' key contains a bound action, then 'title' is set as the title of the touch button. Does nothing if a touch button was not created. No guarantees are made whether title will be set when button is manipulated.","If 'actionName' key contains a bound action, then 'title' is set as the title of the touch button. Does nothing if a touch button was not created. No guarantees are made whether title will be set when button is manipulated.",'actionName' 키에 바인딩된 작업이 포함된 경우 'title'이 터치 버튼의 제목으로 설정됩니다. 터치 버튼이 생성되지 않은 경우 아무 작업도 수행하지 않습니다. 버튼 조작 시 타이틀 설정 여부는 보장되지 않습니다.,"Если клавиша actionName содержит привязанное действие, то в качестве заголовка сенсорной кнопки задается title. Ничего не делает, если не создана сенсорная кнопка. Не гарантируется, что заголовок сохранится при изменении кнопки.",若 'actionName' 键包含绑定操作，'title' 将被设为触碰按钮的标题。若未创建触碰按钮，则不执行任何操作。无法保证在操作按钮时是否会设置标题。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionServiceSetDescription,,,"If 'actionName' key contains a bound action, then 'description' is set as the description of the bound action. This description will appear for users in a listing of current actions availables.","If 'actionName' key contains a bound action, then 'description' is set as the description of the bound action. This description will appear for users in a listing of current actions availables.","'actionName' 키에 바인딩된 작업이 포함되어 있는 경우, 'description'이 바인딩된 작업의 설명으로 설정됩니다. 이 설명은 사용자가 현재 사용할 수 있는 작업 목록에 나타납니다.","Если клавиша actionName содержит привязанное действие, то в качестве описания привязанного действия задается description. Описание отображается для пользователей в списке текущих доступных действий.",若 'actionName' 键包含绑定操作，'description' 将被设为绑定操作的描述。此描述会出现在用户当前可用操作的列表中。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionServiceSetImage,,,"If 'actionName' key contains a bound action, then 'image' is set as the image of the touch button. Does nothing if a touch button was not created. No guarantees are made whether image will be set when button is manipulated.","If 'actionName' key contains a bound action, then 'image' is set as the image of the touch button. Does nothing if a touch button was not created. No guarantees are made whether image will be set when button is manipulated.",'actionName' 키에 바인딩된 작업이 포함된 경우 'image'가 터치 버튼의 이미지로 설정됩니다. 터치 버튼이 생성되지 않은 경우 아무 작업도 수행하지 않습니다. 버튼 조작 시 이미지 설정 여부는 보장되지 않습니다.,"Если клавиша actionName содержит привязанное действие, то в качестве изображения сенсорной кнопки задается image. Ничего не делает, если не создана сенсорная кнопка. Не гарантируется, что изображение сохранится при изменении кнопки.",若 'actionName' 键包含绑定操作，'image' 将被设为触碰按钮的图像。若未创建触碰按钮，则不执行任何操作。无法保证在操作按钮时是否会设置图像。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionServiceSetPosition,,,"If 'actionName' key contains a bound action, then 'position' is set as the position of the touch button. Does nothing if a touch button was not created. No guarantees are made whether position will be set when button is manipulated.","If 'actionName' key contains a bound action, then 'position' is set as the position of the touch button. Does nothing if a touch button was not created. No guarantees are made whether position will be set when button is manipulated.",'actionName' 키에 바인딩된 작업이 포함된 경우 'position'이 터치 버튼의 위치로 설정됩니다. 터치 버튼이 생성되지 않은 경우 아무 작업도 수행하지 않습니다. 버튼 조작 시 위치 설정 여부는 보장되지 않습니다.,"Если клавиша actionName содержит привязанное действие, то в качестве положения сенсорной кнопки задается position. Ничего не делает, если не создана сенсорная кнопка. Не гарантируется, что положение сохранится при изменении кнопки.",若 'actionName' 键包含绑定操作，'position' 将被设为触碰按钮的位置。若未创建触碰按钮，则不执行任何操作。无法保证在操作按钮时是否会设置位置。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionServiceUnbindAction,,,"If 'actionName' key contains a bound action, removes function from being called by all input that it was bound by (if function was also bound by a different action name as well, those bound input are still active). Will also remove any touch button created (if button was manipulated manually there is no guarantee it will be cleaned up).","If 'actionName' key contains a bound action, removes function from being called by all input that it was bound by (if function was also bound by a different action name as well, those bound input are still active). Will also remove any touch button created (if button was manipulated manually there is no guarantee it will be cleaned up).","'actionName'키에 바인딩된 작업이 포함되어 있는 경우, 바인딩된 모든 입력에 의한 함수 호출이 제거됩니다(함수가 다른 작업 이름으로 바인딩된 경우에도 해당 바인딩된 입력은 여전히 ​​활성화 상태임). 또한 생성된 모든 터치 버튼을 제거합니다(버튼을 수동으로 조작한 경우에는 제거가 보장되지 않습니다).","Если клавиша actionName содержит привязанное действие, отменяет вызов функции, вызываемой любым вводом, к которому она была привязана (если функция также была привязана другим именем действия, то этот привязанный ввод остается активным). Также удаляет любую созданную сенсорную кнопку (если кнопка была изменена вручную, то не гарантируется, что она будет удалена).",若 'actionName' 键包含绑定操作，阻止函数被其绑定的所有输入调用 (若函数还被其他操作名称绑定，则这些绑定的输入仍然有效)。还会移除创建的触碰按钮 (如果按钮被人工操作过，则无法保证它一定会被清除)。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionServiceUnbindAllActions,,,Removes all functions bound. No actionNames will remain. All touch buttons will be removed. If button was manipulated manually there is no guarantee it will be cleaned up.,Removes all functions bound. No actionNames will remain. All touch buttons will be removed. If button was manipulated manually there is no guarantee it will be cleaned up.,바인딩된 모든 함수를 제거합니다. actionNames가 유지되지 않습니다. 모든 터치 버튼이 제거됩니다. 버튼을 수동으로 조작한 경우에는 보장되지 않습니다.,"Удаляет все привязанные функции. Не оставляет никаких actionNames. Удаляются все сенсорные кнопки. Если кнопка была изменена вручную, то не гарантируется, что она будет удалена.",移除所有绑定的函数。不保留任何 actionName。将会移除所有触碰按钮。如果按钮被人工操作过，则无法保证它一定会被清除。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionServiceGetBoundActionInfo,,,Returns a table with info regarding the function bound with 'actionName'. Table has the keys 'title' (current title that was set with SetTitle) 'image' (image set with SetImage) 'description' (description set with SetDescription) 'inputTypes' (tuple containing all input bound for this 'actionName') 'createTouchButton' (whether or not we created a touch button for this 'actionName').,Returns a table with info regarding the function bound with 'actionName'. Table has the keys 'title' (current title that was set with SetTitle) 'image' (image set with SetImage) 'description' (description set with SetDescription) 'inputTypes' (tuple containing all input bound for this 'actionName') 'createTouchButton' (whether or not we created a touch button for this 'actionName').,'actionName'으로 바인딩된 함수에 대한 정보가 있는 테이블을 반환합니다. 테이블에는 'title'(SetTitle로 설정된 현재 제목) 'image'(SetImage로 설정된 이미지) 'description'(SetDescription으로 설정된 설명) 'inputTypes'(이 'actionName'에 대한 모든 입력 바인딩을 포함하는 튜플) 'createTouchButton' (이 'actionName'에 대한 터치 버튼을 만들었는지 여부에 관계없이) 키가 있습니다.,"Возвращает таблицу с информацией о функции, привязанной к actionName. В таблице содержатся ключи title (текущий заголовок, заданный SetTitle), image (изображение, заданное SetImage), description (описание, заданное SetDescription), inputTypes (кортеж со всеми вводами, привязанными к этому actionName), createTouchButton (создана ли сенсорная кнопка для этого actionName).",返回一个包含与 'actionName' 绑定的函数的信息的格。表键包括 'title' (通过 SetTitle 设置的当前标题)、'image' (通过 SetImage 设置的图像)、'description' (通过 SetDescription 设置的描述)、'inputTypes' (包含此 'actionName' 绑定的所有输入的元组)、'createTouchButton' (我们是否为此 actionName' 创建触碰按钮)。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionServiceGetAllBoundActionInfo,,,Returns a table with all bound action info. Each entry is a key with 'actionName' and value being the same table you would get from ContextActionService:GetBoundActionInfo('actionName').,Returns a table with all bound action info. Each entry is a key with 'actionName' and value being the same table you would get from ContextActionService:GetBoundActionInfo('actionName').,"모든 바인딩된 작업 정보가 있는 테이블을 반환합니다. 테이블의 각 항목은 'actionName'의 키이며, 값은 ContextActionService:GetBoundActionInfo('actionName')에서 얻는 것과 동일합니다.","Возвращает таблицу с информацией обо всех привязанных действиях. Каждая запись является ключом с actionName и значением, которое вы получите от ContextActionService:GetBoundActionInfo('actionName').",返回一个包含所有绑定操作信息的表。表的每个条目都是一个拥有 'actionName' 的键且取值与你通过 ContextActionService:GetBoundActioninfo('actionName') 所获得的表相同。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionServiceGetButton,,,"If 'actionName' key contains a bound action, then this will return the touch button (if was created). Returns nil if a touch button was not created. No guarantees are made whether button will be retrievable when button is manipulated.","If 'actionName' key contains a bound action, then this will return the touch button (if was created). Returns nil if a touch button was not created. No guarantees are made whether button will be retrievable when button is manipulated.",'actionName' 키에 바인딩된 작업이 포함된 경우 터치 버튼(생성되어 있는 경우)을 반환합니다. 터치 버튼이 생성되지 않은 경우 nil을 반환합니다. 버튼 조작 시 버튼 검색 여부가 보장되지 않습니다.,"Если клавиша actionName содержит привязанное действие, то возвращает сенсорную кнопку (если она создана). Возвращает значение nil, если кнопка не создана. Не гарантируется, что кнопку можно вызвать после ее изменения.",若 'actionName' 包含绑定操作，将返回触碰按键 (如果已创建)。如果未创建触碰按钮则返回空值。若按钮被操作，无法保证是否能检索到按钮。
Studio.ReflectionMetadata.ReflectionMetadata.PointsService,,,A service used to query and award points for Roblox users using the universal point system.,A service used to query and award points for Roblox users using the universal point system.,유니버설 포인트 시스템으로 Roblox 사용자의 포인트를 조회하고 보상하는 데 사용되는 서비스.,"Служба, используемая для запроса и начисления баллов пользователям Roblox с использованием универсальной системы баллов.",用于为使用通用积分系统的 Roblox 用户进行查询和奖励积分的服务。
Studio.ReflectionMetadata.ReflectionMetadata.PointsServicePointsAwarded,,,"Fired when points are successfully awarded 'userId'. Also returns the updated balance of points for usedId in universe via 'userBalanceInUniverse', total points via 'userTotalBalance', and the amount points that were awarded via 'pointsAwarded'. This event fires on the server and also all clients in the game that awarded the points.","Fired when points are successfully awarded 'userId'. Also returns the updated balance of points for usedId in universe via 'userBalanceInUniverse', total points via 'userTotalBalance', and the amount points that were awarded via 'pointsAwarded'. This event fires on the server and also all clients in the game that awarded the points.","포인트가 'userId'에 부여되면 발생합니다. 또한 'userBalanceInUniverse'를 통해 유니버스에서 usedId의 업데이트된 포인트 잔액을, 'userTotalBalance'를 통해 총 포인트를, 'pointsAwarded'를 통해 부여된 포인트를 반환합니다. 이 이벤트는 서버에서, 그리고 포인트를 부여한 게임의 모든 클라이언트에서 발생합니다.","Возникает при успешном начислении баллов для userId. Также возвращает обновленный баланс баллов для usedId во вселенной через userBalanceInUniverse, сумму баллов через userTotalBalance и количество баллов, которые были начислены, через pointsAwarded. Это событие возникает на сервере, а также на всех клиентах в игре, которые получили баллы.",积分成功奖励给 'userId' 时触发。还会通过 'userBalanceInUniverse' 返回此宇宙中 usedId 更新后的积分余额，通过 'userTotalBalance' 返回总积分，以及通过 'pointsAwarded' 返回奖励的积分。此事件同时在服务器及所有获得奖励积分的客户端触发。
Studio.ReflectionMetadata.ReflectionMetadata.PointsServiceAwardPoints,,,"Will attempt to award the 'amount' points to 'userId', returns 'userId' awarded to, the number of points awarded, the new point total the user has in the game, and the total number of points the user now has. Will also fire PointsService.PointsAwarded. Works with server scripts ONLY.","Will attempt to award the 'amount' points to 'userId', returns 'userId' awarded to, the number of points awarded, the new point total the user has in the game, and the total number of points the user now has. Will also fire PointsService.PointsAwarded. Works with server scripts ONLY.","'amount' 포인트를 'userId'에게 부여하고, 부여받은 'userId', 부여된 포인트 수, 사용자가 게임 내에서 보유한 포인트의 새로운 총합, 현재 사용자가 보유한 총 포인트 수를 반환합니다. PointsService.PointsAwarded도 실행합니다. 서버 스크립트에서만 작동합니다.","Попытается начислить количество amount баллов для userId. Возвращает userId, которому начислены баллы, количество набранных баллов, общее количество набранных пользователем баллов в игре и общее количество набранных баллов, которые есть у пользователя сейчас. Также запускает PointsService.PointsAwarded. Работает ТОЛЬКО с серверными скриптами.",会尝试奖励 'amount' 点积分给 'userId'，返回接受奖励的 'userId'、奖励的积分数量以及用户在游戏中的新积分总数。还会触发 PointsService.PointsAwarded。仅适用于服务器脚本。
Studio.ReflectionMetadata.ReflectionMetadata.PointsServiceGetPointBalance,,,Returns the overall balance of points that player with userId has (the sum of all points across all games). Works with server scripts ONLY.,Returns the overall balance of points that player with userId has (the sum of all points across all games). Works with server scripts ONLY.,userId에 해당하는 플레이어의 포인트 전체 잔액(모든 게임에서 획득한 총 포인트 수)을 반환합니다. 서버 스크립트에서만 작동합니다.,"Возвращает общий баланс баллов, который есть у игрока с userId (сумма всех баллов по всем играм). Работает ТОЛЬКО с серверными скриптами.",返回该 userId 的玩家的整体积分余额 (所有游戏的全部积分总额)。仅适用于服务器脚本。
Studio.ReflectionMetadata.ReflectionMetadata.PointsServiceGetGamePointBalance,,,Returns the balance of points that player with userId has in the current game (all placeID points combined within the game). Works with server scripts ONLY.,Returns the balance of points that player with userId has in the current game (all placeID points combined within the game). Works with server scripts ONLY.,userId에 해당하는 플레이어가 현재 게임에서 보유 중인 포인트 잔액을 반환합니다(게임 내 모든 placeID 포인트의 합계). 서버 스크립트에서만 작동합니다.,"Возвращает баланс баллов, который игрок с userId имеет в текущей игре (все пункты placeID, объединенные в рамках игры). Работает ТОЛЬКО с серверными скриптами.",返回该 userId 的玩家爱当前游戏中的积分余额 (游戏中所有 placeID 的积分总和)。仅适用于服务器脚本。
Studio.ReflectionMetadata.ReflectionMetadata.PointsServiceGetAwardablePoints,,,Returns the number of points the current universe can award to players. Works with server scripts ONLY.,Returns the number of points the current universe can award to players. Works with server scripts ONLY.,현재 유니버스가 플레이어에게 부여할 수 있는 포인트의 수를 반환합니다. 서버 스크립트에서만 작동합니다.,"Возвращает количество баллов, которое текущая вселенная может начислить игрокам. Работает ТОЛЬКО с серверными скриптами.",返回当前宇宙可以奖励给玩家的积分数量。仅适用于服务器脚本。
Studio.ReflectionMetadata.ReflectionMetadata.LocalizationTable,,,A database of strings used in the game and their translations.,A database of strings used in the game and their translations.,게임에 사용되는 문자열 데이터베이스와 그 번역.,"База данных строк, используемых в игре, и их переводы.",在游戏及翻译中使用的字符串数据库。
Studio.ReflectionMetadata.ReflectionMetadata.LocalizationServicePreferredLanguage,,,Gets the system's preferred language (A Language enum).,Gets the system's preferred language (A Language enum).,시스템의 기본 언어(Language 열거)를 가져옵니다.,"Структура enum, содержащая предпочитаемый язык системы (перечисление Language).",获取系统的首选语言 (语言枚举)。
Studio.ReflectionMetadata.ReflectionMetadata.LocalizationServiceGetLocaleId,,,"Gets the system's LocaleId (Ex: ""en-US"").","Gets the system's LocaleId (Ex: ""en-US"").","시스템의 LocaleId를 가져옵니다 (예: ""en-US"").",Получает значение LocaleId системы (например: en-US).,"获取系统的 LocaleId (例如: ""en-US"")。"
Studio.ReflectionMetadata.ReflectionMetadata.MarketplaceServicePromptPurchase,,,"Will prompt 'player' to purchase the item associated with 'assetId'.  'equipIfPurchased' is an optional argument that will give the item to the player immediately if they buy it (only applies to gear).  'currencyType' is also optional and will attempt to prompt the user with a specified currency if the product can be purchased with this currency, otherwise we use the default currency of the product.","Will prompt 'player' to purchase the item associated with 'assetId'.  'equipIfPurchased' is an optional argument that will give the item to the player immediately if they buy it (only applies to gear).  'currencyType' is also optional and will attempt to prompt the user with a specified currency if the product can be purchased with this currency, otherwise we use the default currency of the product.","'assetId'와 관련된 아이템을 구매하라는 메시지인 'player'가 표시됩니다. 'equipIfPurchased'는 플레이어가 아이템을 구매하면 이를 즉시 제공하도록 하는 옵션 인수입니다(장비에만 적용). 'currencyType' 또한 옵션 인수로, 특정 통화로 제품을 구매할 수 있는 경우 해당 통화를 입력하라는 메시지를 표시하며, 아닐 경우 제품의 기본 통화를 사용합니다.","Направит игроку player запрос на покупку предмета, связанного с assetId. equipIfPurchased является необязательным аргументом, который даст предмет игроку немедленно, если его купят (применимо только для оборудования). currencyType также является необязательным параметром и будет пытаться направлять пользователю запрос с указанной валютой, если продукт можно приобрести за эту валюту. В противном случае используется стандартная валюта продукта.",将提示 'player' 购买与 'assetId' 相关联的物品。'equipIfPurchased' 为可选参数，将在玩家购买物品后立即将其给予玩家 (仅限装备)。'currencyType' 也是可选参数，若产品可以通过指定货币进行购买，则会尝试提示用户使用该货币，否则我们会使用产品的默认货币。
Studio.ReflectionMetadata.ReflectionMetadata.MarketplaceServiceGetProductInfo,,,"Takes one argument ""assetId"" which should be a number of an asset on www.roblox.com.  Returns a table containing the product information (if this process fails, returns an empty table).","Takes one argument ""assetId"" which should be a number of an asset on www.roblox.com.  Returns a table containing the product information (if this process fails, returns an empty table).","www.roblox.com에서의 애셋 수인 하나의 인수 ""assetId""를 사용합니다. 제품 정보를 포함하는 테이블을 반환합니다(이 프로세스가 실패하면 빈 테이블을 반환함).","Принимает один аргумент assetsId, который должен быть номером ресурса на сайте www.roblox.com. Возвращает таблицу, содержащую информацию о продукте (если этот процесс даст сбой, возвращает пустую таблицу).",需指定一个参数 “assetId”，该参数应为 www.roblox.com 上某个资源的编号。返回一个包含产品信息的表（若此过程失败，则返回空表）。
Studio.ReflectionMetadata.ReflectionMetadata.MarketplaceServicePlayerOwnsAsset,,,"Checks to see if 'Player' owns the product associated with 'assetId'. Returns true if the player owns it, false otherwise. This call will produce a warning if called on a guest player.","Checks to see if 'Player' owns the product associated with 'assetId'. Returns true if the player owns it, false otherwise. This call will produce a warning if called on a guest player.","'Player'가 'assetId'와 관련된 제품을 소유하고 있는지 확인합니다. 플레이어가 소유하고 있으면 true를, 그렇지 않으면 false를 반환합니다. 방문자 플레이어에게 호출되면 경고를 생성합니다.","Проверяет, владеет ли игрок Player продуктом, связанным с assetsId. Возвращает значение true, если игрок является владельцем, и false в противном случае. Выдает предупреждение, если использовать на приглашенном игроке.",检查 'Player' 是否拥有与 'assetId' 相关的产品。若玩家拥有则返回 true，否则返回 false。若对访客玩家调用，还会生成一条警告信息。
Studio.ReflectionMetadata.ReflectionMetadata.MarketplaceServiceProcessReceipt,,,"Callback that is executed for pending Developer Product receipts.<p>If this function does not return Enum.ProductPurchaseDecision.PurchaseGranted, then you will not be granted the money for the purchase!</p><p>The callback will be invoked with a table, containing the following informational fields:</p><ul><li>PlayerId: int64 - the id of the player making the purchase.</li><li>PlaceIdWherePurchased: int64:  - the specific place where the purchase was made.</li><li>PurchaseId: string - a unique identifier for the purchase, should be used to prevent granting an item multiple times for one purchase.</li><li>ProductId: int64 - the id of the purchased product.</li><li>CurrencyType: CurrencyType - the type of currency used (Tix, Robux).</li><li>CurrencySpent: int - the amount of currency spent on the product for this purchase.</li></ul>","Callback that is executed for pending Developer Product receipts.<p>If this function does not return Enum.ProductPurchaseDecision.PurchaseGranted, then you will not be granted the money for the purchase!</p><p>The callback will be invoked with a table, containing the following informational fields:</p><ul><li>PlayerId: int64 - the id of the player making the purchase.</li><li>PlaceIdWherePurchased: int64:  - the specific place where the purchase was made.</li><li>PurchaseId: string - a unique identifier for the purchase, should be used to prevent granting an item multiple times for one purchase.</li><li>ProductId: int64 - the id of the purchased product.</li><li>CurrencyType: CurrencyType - the type of currency used (Tix, Robux).</li><li>CurrencySpent: int - the amount of currency spent on the product for this purchase.</li></ul>","보류 중인 개발자 제품 영수증에 대해 실행되는 콜백입니다.<p>이 함수가 Enum.ProductPurchaseDecision.PurchaseGranted를 반환하지 않으면 구매 금액을 받을 수 없습니다!</p><p>콜백은 다음의 정보 필드를 포함하는 테이블과 함께 호출됩니다.</p><ul><li>PlayerId: int64 - 구매하는 플레이어의 ID입니다.</li><li>PlaceIdWherePurchased: int64:  - 구매가 이루어진 특정 장소입니다.</li><li>PurchaseId: string - 구매에 대한 고유 식별자로, 한 번의 구매에 대해 아이템을 여러 번 제공하지 않도록 만들기 위해 사용됩니다.</li><li>ProductId: int64 - 구매한 제품의 ID입니다.</li><li>CurrencyType: CurrencyType - 사용되는 통화 유형(Tix, Robux)입니다.</li><li>CurrencySpent: int - 이 구매를 위해 제품에 지불한 통화 금액입니다.</li></ul>","Обратный вызов, который выполняется для квитанций на Результаты разработки, находящихся в ожидании. <p>Если эта функция не вернет Enum.ProductPurchaseDecision.PurchaseGranted, вы не получите деньги за покупку!</p><p>Обратный вызов вызывается вместе с таблицей, содержащей следующие поля:</p><ul><li>PlayerId: int64 — идентификатор игрока, делающего покупку.</li><li>PlaceIdWherePurchased: int64: — место, где была совершена покупка.</li><li>PurchaseId: строка — уникальный идентификатор покупки, используется для того, чтобы за одну покупку не было сделано несколько начислений.</li><li>ProductId: int64 — идентификатор приобретенного продукта.</li><li>CurrencyType: CurrencyType — тип используемой валюты (Tix, Robux).</li><li>CurrencySpent: int — сумма в валюте, потраченная на приобретение продукта.</li></ul>",对待处理的开发者产品收据执行的回调。<p>若此函数未返回 Enum.ProductPurchaseDecision.PurchaseGranted，你将无法获得购买所支付的金钱!</p><p>将使用包含以下信息字段的表调用回调:</p><ul><li>PlayerId: int64 - 进行购买的玩家的身份标识。</li><li>PlaceIdWherePurchased: int64 - 进行购买的具体位置。</li><li>PurchaseId: string - 该次购买的唯一识别码，可用于防止一次购买多次授予物品。</li><li>ProductId: int64 - 被购买产品的标识。</li><li>CurrencyType: CurrencyType - 使用的货币类型 (Tix、Robux)。</li><li>CurrencySpent: int - 本次购买中花费的货币数量。</li></ul>
Studio.ReflectionMetadata.ReflectionMetadata.MarketplaceServicePromptPurchaseFinished,,,"Fired when a 'player' dismisses a purchase dialog for 'assetId'.  If the player purchased the item 'isPurchased' will be true, otherwise it will be false. This call will produce a warning if called on a guest player.","Fired when a 'player' dismisses a purchase dialog for 'assetId'.  If the player purchased the item 'isPurchased' will be true, otherwise it will be false. This call will produce a warning if called on a guest player.","'player'가 'assetId'에 대한 구매 대화 상자를 닫을 때 발생합니다. 플레이어가 'isPurchased' 항목을 구매한 경우 true이고, 그렇지 않으면 false입니다. 방문자 플레이어에게 호출되면 경고를 생성합니다.","Возникает, когда игрок player закрывает диалог покупки assetsId. Если игрок купил товар, isPurchased имеет значение true, в противном случае — false. Этот вызов вернет предупреждение, если использовать на приглашенном игроке.",当 'player' 关闭 'assetId' 的购买对话框时触发。若玩家已购买该物品，'isPurchased' 为 true，否则为 false。若对访客玩家调用，还会生成一条警告信息。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTouchEnabled,,,"Returns true if the local device accepts touch input, false otherwise.","Returns true if the local device accepts touch input, false otherwise.","로컬 장치가 터치 입력을 허용하면 true를, 그렇지 않으면 false를 반환합니다.","Возвращает true, если локальное устройство принимает сенсорный ввод, false в противном случае.",若本地设备接受触碰输入则返回 true，否则返回 false。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceKeyboardEnabled,,,"Returns true if the local device accepts keyboard input, false otherwise.","Returns true if the local device accepts keyboard input, false otherwise.","로컬 장치가 키보드 입력을 허용하면 true를, 그렇지 않으면 false를 반환합니다.","Возвращает true, если локальное устройство принимает ввод с клавиатуры, false в противном случае.",若本地设备接受键盘输入则返回 true，否则返回 false。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceMouseEnabled,,,"Returns true if the local device accepts mouse input, false otherwise.","Returns true if the local device accepts mouse input, false otherwise.","로컬 장치가 마우스 입력을 허용하면 true를, 그렇지 않으면 false를 반환합니다.","Возвращает true, если локальное устройство принимает ввод мыши, false в противном случае.",若本地设备接受鼠标输入则返回 true，否则返回 false。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceAccelerometerEnabled,,,"Returns true if the local device has an accelerometer, false otherwise.","Returns true if the local device has an accelerometer, false otherwise.","로컬 장치에 가속도계가 있으면 true를, 그렇지 않으면 false를 반환합니다.","Возвращает true, если локальное устройство имеет акселерометр, false в противном случае.",若本地设备拥有加速器则返回 true，否则返回 false。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceGyroscopeEnabled,,,"Returns true if the local device has an gyroscope, false otherwise.","Returns true if the local device has an gyroscope, false otherwise.","로컬 장치에 자이로스코프가 있으면 true를, 그렇지 않으면 false를 반환합니다.","Возвращает true, если локальное устройство имеет гироскоп, false в противном случае.",若本地设备拥有陀螺仪则返回 true，否则返回 false。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTouchTap,,,"Fired when a user taps their finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the tap gesture. This event only fires locally.  This event will always fire regardless of game state.","Fired when a user taps their finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the tap gesture. This event only fires locally.  This event will always fire regardless of game state.","사용자가 TouchEnabled 장치에서 손가락을 탭하면 발생합니다. 'touchPositions'는 Vector2의 Lua 배열로, 각각 탭 제스처와 관련된 모든 손가락의 위치를 ​​나타냅니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.","Возникает, если пользователь касается экрана устройства с TouchEnabled. Параметр touchPositions — это Lua-массив Vector2, указывающий положение всех пальцев, задействованных при касании. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户在 TouchEnabled 设备上轻触手指时触发。'touchPositions' 是一个 Vector2 的 Lua 数组，其成员各自代表轻触手势中涉及的所有手指的位置。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTouchPinch,,,"Fired when a user pinches their fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the pinch gesture. 'scale' is a float that indicates the difference from the beginning of the pinch gesture. 'velocity' is a float indicating how quickly the pinch gesture is happening. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user pinches their fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the pinch gesture. 'scale' is a float that indicates the difference from the beginning of the pinch gesture. 'velocity' is a float indicating how quickly the pinch gesture is happening. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","사용자가 TouchEnabled 기기에서 손가락을 모으면 발생합니다. 'touchPositions'는 Vector2의 Lua 배열로, 확대/축소 제스처와 관련된 모든 손가락의 위치를 ​​나타냅니다. 'scale'은 확대/축소 제스처의 시작과의 차이를 나타내는 부동 소수점 숫자입니다. 'velocity'는 확대/축소 제스처가 얼마나 빨리 발생하는지를 나타내는 부동 소수점 숫자입니다. 'state'는 제스처의 Enum.UserInputState를 나타냅니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.","Возникает, если пользователь совершает жест сжатия экрана устройства с TouchEnabled. Параметр touchPositions — это Lua-массив Vector2, указывающий положение всех пальцев, задействованных при сжатии. scale — это число с плавающей запятой, означающее разницу между началом и окончанием жеста. velocity — это число с плавающей запятой, означающее, как быстро происходит сжатие. state — это число с плавающей запятой, означающее Enum.UserInputState жеста. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户在 TouchEnabled 设备上捏合手指时触发。'touchPositions' 是一个 Vector2 的 Lua 数组，其成员各自代表捏合手势中涉及的所有手指的位置。'scale' 是一个浮点数，代表捏合手势距离初始位置的差值。'velocity' 是一个浮点数，代表捏合手势的发生速度。 'state' 代表手势的 Enum.UserInputState。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTouchSwipe,,,"Fired when a user swipes their fingers on a TouchEnabled device. 'swipeDirection' is an Enum.SwipeDirection, indicating the direction the user swiped. 'numberOfTouches' is an int that indicates how many touches were involved with the gesture.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user swipes their fingers on a TouchEnabled device. 'swipeDirection' is an Enum.SwipeDirection, indicating the direction the user swiped. 'numberOfTouches' is an int that indicates how many touches were involved with the gesture.  This event only fires locally.  This event will always fire regardless of game state.",사용자가 TouchEnabled 기기에서 손가락을 스와이프하면 발생합니다. 'swipeDirection'은 사용자가 스와이프하는 방향을 나타내는 Enum.SwipeDirection입니다. 'numberOfTouches'는 제스처와 관련된 터치 수를 나타내는 int입니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.,"Возникает, если пользователь проводит пальцами по экрану устройства с TouchEnabled. Параметр swipeDirection — это Enum.SwipeDirection, указывающий направление движения пальцев. numberOfTouches — это целое, указывающее, сколько касаний сопутствовало жесту. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户在 TouchEnabled 设备上滑动手指时触发。'swipeDirection' 是一个 Enum.SwipeDirection，代表用户滑动的方向。'numberOfTouches' 是一个整数，代表该手势中涉及的触碰数。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTouchLongPress,,,"Fired when a user holds at least one finger for a short amount of time on the same screen position on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user holds at least one finger for a short amount of time on the same screen position on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","사용자가 TouchEnabled 기기 화면의 같은 위치를 짧은 시간 동안 하나 이상의 손가락으로 길게 누르면 발생합니다. 'touchPositions'는 Vector2의 Lua 배열로, 제스처에 관련된 모든 손가락의 위치를 ​​나타냅니다. 'state'는 제스처의 Enum.UserInputState를 나타냅니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.","Возникает, если пользователь на короткое время удерживает на экране устройства с TouchEnabled хотя бы один палец. Параметр touchPositions — это Lua-массив Vector2, указывающий положение всех пальцев, задействованных при касании. state указывает Enum.UserInputState жеста. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户在 TouchEnabled 设备上至少有一根手指在同一屏幕位置上短时间停留时触发。'touchPositions' 是一个 Vector2 的 Lua 数组，其成员各自代表该手势中涉及的所有手指的位置。'state' 代表手势的 Enum.UserInputState。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTouchRotate,,,"Fired when a user rotates two fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'rotation' is a float indicating how much the rotation has gone from the start of the gesture. 'velocity' is a float that indicates how quickly the gesture is being performed. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user rotates two fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'rotation' is a float indicating how much the rotation has gone from the start of the gesture. 'velocity' is a float that indicates how quickly the gesture is being performed. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","사용자가 TouchEnabled 기기에서 두 손가락을 회전하면 발생합니다. 'touchPositions'는 Vector2의 Lua 배열로, 제스처에 관련된 모든 손가락의 위치를 ​​나타냅니다. 'rotation'은 제스처 시작 이후 회전이 얼마나 진행되었는지를 나타내는 부동 소수점 숫자입니다. 'velocity'는 제스처가 얼마나 빨리 수행되고 있는지를 나타내는 부동 소수점 숫자입니다. 'state'는 제스처의 Enum.UserInputState를 나타냅니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.","Возникает, если пользователь вращает два пальца на устройстве с TouchEnabled. Параметр touchPositions — это Lua-массив Vector2, указывающий положение всех пальцев, задействованных при сжатии. rotation — это число с плавающей запятой, означающее длительность вращения. velocity — это число с плавающей запятой, означающее, как быстро происходит сжатие. state означает Enum.UserInputState жеста. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户在 TouchEnabled 设备上旋转两根手指时触发。'touchPositions' 是一个 Vector2 的 Lua 数组，其成员各自代表该手势中涉及的所有手指的位置。 'rotation' 是一个浮点数，代表从手势初始位置所行进的旋转距离。'velocity' 是一个浮点数，代表手势的发生速度。 'state' 代表手势的 Enum.UserInputState。 此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTouchPan,,,"Fired when a user drags at least one finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'totalTranslation' is a Vector2, indicating how far the pan gesture has gone from its starting point. 'velocity' is a Vector2 that indicates how quickly the gesture is being performed in each dimension. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user drags at least one finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'totalTranslation' is a Vector2, indicating how far the pan gesture has gone from its starting point. 'velocity' is a Vector2 that indicates how quickly the gesture is being performed in each dimension. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","사용자가 TouchEnabled 기기에서 하나 이상의 손가락을 드래그하면 발생합니다. 'touchPositions'는 Vector2의 Lua 배열로, 제스처에 관련된 모든 손가락의 위치를 ​​나타냅니다. 'totalTranslation'은 패닝 제스처가 시작점에서 얼마나 멀리 떨어져 있는지를 나타내는 Vector2입니다. 'velocity'는 각 차원에서 제스처가 얼마나 빨리 수행되고 있는지를 나타내는 Vector2입니다. 'state'는 제스처의 Enum.UserInputState를 나타냅니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.","Возникает, если пользователь перетаскивает хотя бы один палец по экрану устройства с TouchEnabled. Параметр touchPositions — это Lua-массив Vector2, указывающий положение всех пальцев, задействованных при жесте. totalTranslation — это Vector2, означающий длительность жеста от точки начала. velocity — это Vector2, означающий, как быстро происходит жест в каждом измерении. state означает Enum.UserInputState жеста. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户在 TouchEnabled 设备上拖动至少一根手指时触发。 'totalTranslation' 是一个 Vector2 的 Lua 数组，其成员各自代表该手势中涉及的所有手指的位置。 'totalTranslation' 是一个 Vector2，代表平移手势从其初始点所行进的距离。'velocity' 是一个 Vector2，代表手势在各维度上的发生速度。 'state' 代表手势的 Enum.UserInputState。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTouchStarted,,,"Fired when a user places their finger on a TouchEnabled device. 'touch' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user places their finger on a TouchEnabled device. 'touch' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.",사용자가 TouchEnabled 기기에 손가락을 대면 발생합니다. 'touch'는 사용자 입력을 쿼리하는 데 유용한 데이터를 포함하는 InputObject입니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.,"Возникает, если пользователь поместил палец на экран устройства с TouchEnabled. touch — это InputObject, содержащий полезные данные для запроса ввода пользователя. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户将手指放置在 TouchEnabled 设备上时触发。'touch' 是一个 InputObject，包含查询用户输入的有用数据。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTouchMoved,,,"Fired when a user moves their finger on a TouchEnabled device. 'touch' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user moves their finger on a TouchEnabled device. 'touch' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.",사용자가 TouchEnabled 기기에서 손가락을 움직일 때 발생합니다. 'touch'는 사용자 입력을 쿼리하는 데 유용한 데이터를 포함하는 InputObject입니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.,"Возникает, если пользователь передвинул палец на устройстве с TouchEnabled. touch — это InputObject, содержащий полезные данные для запроса ввода пользователя. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户在 TouchEnabled 设备上移动他们的手指时触发。'touch' 是一个 InputObject，包含查询用户输入的有用数据。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTouchEnded,,,"Fired when a user moves their finger on a TouchEnabled device. 'touch' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user moves their finger on a TouchEnabled device. 'touch' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.",사용자가 TouchEnabled 기기에서 손가락을 움직일 때 발생합니다. 'touch'는 사용자 입력을 쿼리하는 데 유용한 데이터를 포함하는 InputObject입니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.,"Возникает, если пользователь передвинул палец на устройстве с TouchEnabled. touch — это InputObject, содержащий полезные данные для запроса ввода пользователя. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户在 TouchEnabled 设备上移动他们的手指时触发。'touch' 是一个 InputObject，包含查询用户输入的有用数据。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceInputBegan,,,"Fired when a user begins interacting via a Human-Computer Interface device (Mouse button down, touch begin, keyboard button down, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user begins interacting via a Human-Computer Interface device (Mouse button down, touch begin, keyboard button down, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","인간·컴퓨터 인터페이스 기기(마우스 버튼 누르기, 시작 터치, 키보드 버튼 누르기 등)를 통해 사용자가 상호 작용을 시작하면 발생합니다. 'inputObject'는 사용자 입력을 쿼리하는 데 유용한 데이터를 포함하는 InputObject입니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.","Возникает, если пользователь начал взаимодействие через устройство с человеко-машинным интерфейсом (нажатие кнопки мыши, касание, нажатие клавиши и т. д.). inputObject — это InputObject, содержащий полезные данные для запроса пользователя. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户开始通过人机交互设备进行交互 (按下鼠标键、触碰开始、按下键盘按键等) 时触发。'inputObject' 是一个 InputObject，包含查询用户输入的有用数据。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceInputChanged,,,"Fired when a user changes interacting via a Human-Computer Interface device (Mouse move, touch move, mouse wheel, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user changes interacting via a Human-Computer Interface device (Mouse move, touch move, mouse wheel, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","인간·컴퓨터 인터페이스 기기(마우스 이동, 터치 이동, 마우스 휠 이동 등)를 통해 사용자가 상호 작용을 변경하면 발생합니다. 'inputObject'는 사용자 입력을 쿼리하는 데 유용한 데이터를 포함하는 InputObject입니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.","Возникает, если пользователь изменяет способ взаимодействия через устройство с человеко-машинным интерфейсом (нажатие кнопки мыши, касание, прокрутка колесика мыши и т. д.). inputObject — это InputObject, содержащий полезные данные для запроса данных о действиях пользователя. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户改变人机交互设备的交互 (鼠标移动、触碰移动、鼠标滚轮等) 时触发。'inputObject' 是一个 InputObject，包含查询用户输入的有用数据。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceInputEnded,,,"Fired when a user stops interacting via a Human-Computer Interface device (Mouse button up, touch end, keyboard button up, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Fired when a user stops interacting via a Human-Computer Interface device (Mouse button up, touch end, keyboard button up, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","인간·컴퓨터 인터페이스 기기(마우스 버튼 놓기, 터치 중지, 키보드 버튼 놓기 등)를 통해 사용자가 대화를 중단하면 발생합니다. 'inputObject'는 사용자 입력을 쿼리하는 데 유용한 데이터를 포함하는 InputObject입니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.","Возникает, если пользователь остановил взаимодействие через устройство с человеко-машинным интерфейсом (нажатие кнопки мыши, касание, нажатие клавиши и т. д.). inputObject — это InputObject, содержащий полезные данные для запроса пользователя. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户停止通过人际交互设备进行交互 (松开鼠标键、触碰结束、松开键盘按键等) 时触发。'inputObject' 是一个 InputObject，包含查询用户输入的有用数据。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTextBoxFocused,,,Fired when a user clicks/taps on a textbox to begin text entry. Argument is the textbox that was put in focus. This also fires if a textbox forces focus on the user. This event only fires locally.,Fired when a user clicks/taps on a textbox to begin text entry. Argument is the textbox that was put in focus. This also fires if a textbox forces focus on the user. This event only fires locally.,사용자가 텍스트 상자를 클릭하거나 탭하여 텍스트 입력을 시작하면 발생합니다. 인수는 포커스가 있는 텍스트 상자입니다. 텍스트 상자가 사용자에게 포커스를 강제로 두는 경우에도 발생합니다. 이 이벤트는 로컬에서만 발생합니다.,"Возникает, если пользователь щелкнул/коснулся поля для начала текстового ввода. Аргументом является поле ввода, на котором установлен фокус ввода. Также возникает, если поле ввода принудительно устанавливает фокус. Это событие возникает только локально.",当用户单击/轻触文本框开始输入文本时触发。参数为进入焦点的文本框。如果文本框强制成为用户焦点，此事件也会触发。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceTextBoxFocusReleased,,,Fired when a user stops text entry into a textbox (usually by pressing return or clicking/tapping somewhere else on the screen). Argument is the textbox that was taken out of focus. This event only fires locally.,Fired when a user stops text entry into a textbox (usually by pressing return or clicking/tapping somewhere else on the screen). Argument is the textbox that was taken out of focus. This event only fires locally.,일반적으로 사용자가 리턴 키를 누르거나 화면의 다른 곳을 클릭하거나 탭하여 텍스트 상자에 텍스트를 입력하는 행동을 멈추면 발생합니다. 인수는 포커스를 벗어난 텍스트 상자입니다. 이 이벤트는 로컬에서만 발생합니다.,"Возникает, если пользователь закончил текстовый ввод (обычно нажатием клавиши «Возврат» или нажатием/касанием другого места экрана). Аргументом является поле ввода, которое не имеет фокуса ввода. Это событие возникает только локально.",当用户停止对文本框进行文本输入 (一般指按下回车或单击/轻触屏幕上的其他位置) 时触发。参数为失去焦点的文本框。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceDeviceAccelerationChanged,,,"Fired when a user moves a device that has an accelerometer. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis. This event only fires locally.","Fired when a user moves a device that has an accelerometer. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis. This event only fires locally.",가속도계가 탑재된 기기를 사용자가 움직일 때 발생합니다. Enum.InputType.Accelerometer 유형이 있는 InputObject와 각 로컬 기기 축에 중력을 표시하는 위치를 통해 발생합니다. 이 이벤트는 로컬에서만 발생합니다.,"Возникает, если пользователь перемещает устройство с акселерометром. Появляется с InputObject, который имеет тип Enum.InputType.Accelerometer и положение, которое показывает силу g на каждой локальной оси устройства. Это событие возникает только локально.",当用户移动拥有加速度传感器的设备时触发。此触发提供一个包含 Enum.InputType.Accelerometer 类型的 InputObject，以及显示本地设备各轴线上的 G 力的位置。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceDeviceGravityChanged,,,"Fired when the force of gravity changes on a device that has an accelerometer. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis. This event only fires locally.","Fired when the force of gravity changes on a device that has an accelerometer. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis. This event only fires locally.",가속도계가 탑재된 기기의 중력이 변경될 때 발생합니다. Enum.InputType.Accelerometer 유형이 있는 InputObject와 각 로컬 기기 축에 중력을 표시하는 위치를 통해 발생합니다. 이 이벤트는 로컬에서만 발생합니다.,"Возникает, если на устройстве с акселерометром изменилась сила тяжести. Появляется с InputObject, который имеет тип Enum.InputType.Accelerometer и положение, которое показывает силу g на каждой локальной оси устройства. Это событие возникает только локально.",当拥有加速器的设备重力发生改变时触发。此触发提供一个包含 Enum.InputType.Accelerometer 类型的 InputObject，以及显示本地设备各轴线上的 G 力的位置。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceDeviceRotationChanged,,,"Fired when a user rotates a device that has an gyroscope. This is fired with an InputObject, which has type Enum.InputType.Gyroscope, and position that shows total rotation in each local device axis.  The delta property describes the amount of rotation that last happened. A second argument of Vector4 is the device's current quaternion rotation in reference to it's default reference frame. This event only fires locally.","Fired when a user rotates a device that has an gyroscope. This is fired with an InputObject, which has type Enum.InputType.Gyroscope, and position that shows total rotation in each local device axis.  The delta property describes the amount of rotation that last happened. A second argument of Vector4 is the device's current quaternion rotation in reference to it's default reference frame. This event only fires locally.",자이로스코프가 탑재된 기기를 사용자가 회전하면 발생합니다. Enum.InputType.Gyroscope 유형이 있는 InputObject와 각 로컬 기기 축에 총 회전을 표시하는 위치를 통해 발생합니다. 델타 속성은 마지막으로 발생한 회전의 양을 나타냅니다. Vector4의 두 번째 인수는 기본 참조 프레임 대비 기기의 현재 쿼터니언 회전입니다. 이 이벤트는 로컬에서만 발생합니다.,"Возникает, если пользователь поворачивает устройство с гироскопом. Появляется с InputObject, который имеет тип Enum.InputType.Gyroscope и положение, которое показывает общее вращение по каждой локальной оси устройства. Свойство delta описывает длительность вращения. Второй аргумент Vector4 — это текущий квартерионный поворот устройства по отношению к первоначальному положению. Это событие возникает только локально.",当用户旋转拥有陀螺仪的设备时触发。此触发提供一个包含 Enum.InputType.Gyroscope 类型的 InputObject，以及显示本地设备各轴线上的总旋转量的位置。delta 属性描述最后发生的旋转量。Vector4 的第二个参数为设备相对其默认参考帧的当前四元数旋转值。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceGetDeviceAcceleration,,,"Returns an InputObject that describes the device's current acceleration. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis.  The delta property describes the amount of rotation that last happened. This event only fires locally.","Returns an InputObject that describes the device's current acceleration. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis.  The delta property describes the amount of rotation that last happened. This event only fires locally.",기기의 현재 가속도를 설명하는 InputObject를 반환합니다. Enum.InputType.Accelerometer 유형이 있는 InputObject와 각 로컬 기기 축에 중력을 표시하는 위치를 통해 발생합니다. 델타 속성은 마지막으로 발생한 회전의 양을 나타냅니다. 이 이벤트는 로컬에서만 발생합니다.,"Возвращает InputObject, который описывает текущее ускорение устройства. Появляется с InputObject, который имеет тип Enum.InputType.Accelerometer и положение, которое показывает силу g на каждой локальной оси устройства. Свойство delta описывает длительность вращения. Это событие возникает только локально.",返回一个描述设备当前加速度的 InputObject。此触发提供一个包含 Enum.InputType.Accelerometer 类型的 InputObject，以及显示本地设备各轴线上的 G 力的位置。delta 属性描述最后发生的旋转量。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceGetDeviceGravity,,,"Returns an InputObject that describes the device's current gravity vector. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis. The delta property describes the amount of rotation that last happened. This event only fires locally.","Returns an InputObject that describes the device's current gravity vector. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis. The delta property describes the amount of rotation that last happened. This event only fires locally.",기기의 현재 중력 벡터를 설명하는 InputObject를 반환합니다. Enum.InputType.Accelerometer 유형이 있는 InputObject와 각 로컬 기기 축에 중력을 표시하는 위치를 통해 발생합니다. 델타 속성은 마지막으로 발생한 회전의 양을 나타냅니다. 이 이벤트는 로컬에서만 발생합니다.,"Возвращает InputObject, который описывает текущий вектор гравитации устройства. Появляется с InputObject, который имеет тип Enum.InputType.Accelerometer и положение, которое показывает силу g на каждой локальной оси устройства. Свойство delta описывает длительность вращения. Это событие возникает только локально.",返回一个描述设备当前重力矢量的 InputObject。此触发提供一个包含 Enum.InputType.Accelerometer 类型的 InputObject，以及显示本地设备各轴线上的 G 力的位置。delta 属性描述最后发生的旋转量。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.UserInputServiceGetDeviceRotation,,,"Returns an InputObject and a Vector4 that describes the device's current rotation vector. This is fired with an InputObject, which has type Enum.InputType.Gyroscope, and position that shows total rotation in each local device axis. The delta property describes the amount of rotation that last happened. The Vector4 is the device's current quaternion rotation in reference to it's default reference frame. This event only fires locally.","Returns an InputObject and a Vector4 that describes the device's current rotation vector. This is fired with an InputObject, which has type Enum.InputType.Gyroscope, and position that shows total rotation in each local device axis. The delta property describes the amount of rotation that last happened. The Vector4 is the device's current quaternion rotation in reference to it's default reference frame. This event only fires locally.",기기의 현재 회전 벡터를 설명하는 Vector4와 InputObject를 반환합니다. Enum.InputType.Gyroscope 유형이 있는 InputObject와 각 로컬 기기 축에 총 회전을 표시하는 위치를 통해 발생합니다. 델타 속성은 마지막으로 발생한 회전의 양을 나타냅니다. Vector4는 기본 참조 프레임 대비 기기의 현재 쿼터니언 회전입니다. 이 이벤트는 로컬에서만 발생합니다.,"Возвращает InputObject и Vector4, который описывает текущий вектор вращения устройства. Появляется с InputObject, который имеет тип Enum.InputType.Gyroscope и положение, которое показывает общее вращение по каждой локальной оси устройства. Свойство delta описывает длительность вращения. Vector4 — это текущий квартерионный поворот устройства по отношению к первоначальному положению. Это событие возникает только локально.",返回一个 InputObject 和一个描述设备当前旋转矢量的 Vector4。此触发提供一个包含 Enum.InputType.Gyroscope 类型的 InputObject，以及显示本地设备各轴线上的总旋转量的位置。delta 属性描述最后发生的旋转量。Vector4 是设备的相对其默认参考帧的当前四元数旋转值。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidMoveTo,,,Attempts to move the Humanoid and it's associated character to 'part'. 'location' is used as an offset from part's origin.,Attempts to move the Humanoid and it's associated character to 'part'. 'location' is used as an offset from part's origin.,휴머노이드 이동을 시도하고 관련 캐릭터를 'part'에 연결합니다. 'location'은 part의 원래 위치에서 오프셋으로 사용됩니다.,Пытается переместить гуманоида и связанного с ним персонажа символ в деталь part. В качестве смещения от начала координат детали используется параметр location.,尝试使 Humanoid 及其相关角色向 'part' 移动。 'location' 是 part 原始位置的偏移量。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidTakeDamage,,,Decreases health by the amount.  Use this instead of changing health directly to make sure weapons are filtered for things such as ForceField(s).,Decreases health by the amount.  Use this instead of changing health directly to make sure weapons are filtered for things such as ForceField(s).,"지정된 양만큼 체력을 감소시킵니다. 체력을 직접 변경하지 말고 이것을 사용해, ForceField(s)와 같은 것들에 대해 무기가 필터링되도록 하세요.","Уменьшает здоровье на величину. Используйте вместо того, чтобы менять здоровье напрямую, чтобы убедиться, что оружие отфильтровано для таких параметров, как ForceField(s).",减少相应数量的生命值。使用此方法取代直接修改生命值，以确保武器经过 ForceField 等的筛选。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidUnequipTools,,,Takes any active gear/tools that the Humanoid is using and puts them into the backpack.  This function only works on Humanoids with a corresponding Player.,Takes any active gear/tools that the Humanoid is using and puts them into the backpack.  This function only works on Humanoids with a corresponding Player.,"휴머노이드가 사용 중인, 활성화된 장비나 도구를 배낭에 넣습니다. 이 기능은 해당 플레이어가 있는 휴머노이드에만 사용할 수 있습니다.","Берет все активные инструменты/оборудование, используемое гуманоидом, и помещает их в рюкзак. Эта функция работает только на гуманоидах с соответствующим игроком.",取 Humanoid 正在使用的任意活跃装备/工具并将其放入背包。此函数仅适用于拥有对应 Player 的 Humanoid。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidEquipTool,,,Takes a specified tool and equips it to the Humanoid's Character.  Tool argument should be of type 'Tool'.,Takes a specified tool and equips it to the Humanoid's Character.  Tool argument should be of type 'Tool'.,지정된 도구를 가져와 휴머노이드의 캐릭터에 장착합니다. 도구 인수는 'Tool' 유형이어야 합니다.,Берет конкретный инструмент и надевает его на персонажа гуманоида. Аргумент инструмента должен иметь тип Tool.,取一件指定工具并将其装备至 Humanoid 的角色。工具参数应为 'Tool' 类型。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidReplaceBodyPartR15,,,Replaces the desired bodypart on the Humanoid's Character using a specified Enum.BodyPartR15 and BasePart. Returns a success boolean.,Replaces the desired bodypart on the Humanoid's Character using a specified Enum.BodyPartR15 and BasePart. Returns a success boolean.,지정된 Enum.BodyPartR15 및 BasePart를 사용해 휴머노이드 캐릭터에서 원하는 신체 부위를 대체합니다. 성공적인 부울 값을 반환합니다.,Заменяет нужную часть тела персонажа гуманоида указанным Enum.BodyPartR15 и BasePart. Возвращает булеву переменную успеха.,用一个指定 Enum.BodyPartR15 和 BasePart 取代 Humanoid 的角色上的身体部件。返回一个成功布尔值。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidGetBodyPartR15,,,Returns a Enum.BodyPartR15 given a body part in the Humanoid's Character.,Returns a Enum.BodyPartR15 given a body part in the Humanoid's Character.,휴머노이드 캐릭터에서 지정된 신체 파트의 Enum.BodyPartR15를 반환합니다.,"Возвращает Enum.BodyPartR15, заданную часть тела персонажа гуманоида.",返回 Humanoid 的 Character 上指定身体部件的 Enum.BodyPartR15。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidNameOcclusion,,,Sets how to display other humanoid names to this humanoid's player. <a href='http://wiki.roblox.com/index.php/NameOcclusion' target='_blank'>More info</a>,Sets how to display other humanoid names to this humanoid's player. <a href='http://wiki.roblox.com/index.php/NameOcclusion' target='_blank'>More info</a>,이 휴머노이드 플레이어에 다른 휴머노이드 이름을 표시하는 방법을 설정합니다. <a href='http://wiki.roblox.com/index.php/NameOcclusion' target='_blank'>추가 정보</a>,Устанавливает способ отображения имен других гуманоидов игроку этого гуманоида. <a href='http://wiki.roblox.com/index.php/NameOcclusion' target='_blank'>Узнать больше</a>,设置如何向此 Humanoid 的玩家显示其他 Humanoid 的名称。<a href='http://wiki.roblox.com/index.php/NameOcclusion' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidHealth,,,"How many hit points the Humanoid has.  When this number reaches 0 or goes below 0, the Humanoid's character falls apart and will respawn.","How many hit points the Humanoid has.  When this number reaches 0 or goes below 0, the Humanoid's character falls apart and will respawn.",휴머노이드의 체력. 이 숫자가 0에 도달하거나 0보다 작아지면 휴머노이드 캐릭터가 파괴되어 리스폰됩니다.,"Сколько очков здоровья есть у гуманоида. Когда это число достигает 0 или опускается ниже 0, персонаж гуманоида разваливается на части и начинает перезагружаться.",此 Humanoid 所拥有的生命值。当此值下降至 0 或以下时，此 Humanoid 的角色会破碎并重生。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidMaxHealth,,,"The maximum number of hit points a Humanoid's health can reach.  If the Humanoid's health is set over this amount, the health gets set to this value.","The maximum number of hit points a Humanoid's health can reach.  If the Humanoid's health is set over this amount, the health gets set to this value.",휴머노이드가 도달할 수 있는 최대 체력. 휴머노이드의 체력이 이것 이상으로 설정되면 체력이 이 값으로 설정됩니다.,"Максимальное количество очков здоровья, которое может быть у гуманоида. Если здоровье гуманоида превышает это количество, то здоровье устанавливается на это значение.",一个 Humanoid 可以达到的最大生命值。若此 Humanoid 的生命值被设为高于此数值，会自动降低至此数值。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidTargetPoint,,,The location that the Humanoid is trying to walk to.,The location that the Humanoid is trying to walk to.,휴머노이드가 이동하고자 하는 위치.,"Место, куда пытается пройти гуманоид.",此 Humanoid 正尝试走向的位置。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidTorso,,,Humanoid.RootPart will be the preferred way of getting a character's humanoid root part.,Humanoid.RootPart will be the preferred way of getting a character's humanoid root part.,Humanoid.RootPart는 캐릭터의 휴머노이드 루트 파트를 얻는 데 주로 사용되는 방법입니다.,Humanoid.RootPart — это предпочтительный способ получения корневой части персонажа гуманоида.,Humanoid.RootPart 是获取角色的 humanoid 根部件的首选方式。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidLeftLeg,,,In R6 this property get the player's left leg. In R15 this gets nothing.,In R6 this property get the player's left leg. In R15 this gets nothing.,R6에서는 이 속성이 플레이어의 왼쪽 다리를 얻습니다. R15에서는 아무것도 얻지 못합니다.,"В R6 это свойство получает левую ногу игрока, в R15 — ничего.",在 R6 中此属性可获取玩家的左腿。在 R15 中无作用。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidRightLeg,,,In R6 this property get the player's right leg. In R15 this gets nothing.,In R6 this property get the player's right leg. In R15 this gets nothing.,R6에서는 이 속성이 플레이어의 오른쪽 다리를 얻습니다. R15에서는 아무것도 얻지 못합니다.,"В R6 это свойство получает правую ногу игрока, в R15 — ничего.",在 R6 中此属性可获取玩家的右腿。在 R15 中无作用。
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidCollisionType,,,"An emum that selects the collision type for R15 and Rthro characters. InnerBox is classic style collisions for all characters, OuterBox is dynamically sized collisions based on Mesh size.","An emum that selects the collision type for R15 and Rthro characters. InnerBox is classic style collisions for all characters, OuterBox is dynamically sized collisions based on Mesh size.","R15 및 Rthro 캐릭터의 충돌 유형을 선택하는 열거형입니다. InnerBox는 모든 캐릭터에 대한 클래식 스타일 충돌이며, OuterBox는 메시 크기를 기준으로 하는 동적 크기 충돌입니다.","Список, который выбирает тип столкновения для персонажей R15 и Rthro. InnerBox — это классический стиль столкновений для всех персонажей, OuterBox — это столкновения динамического размера в зависимости от размера сетки.",一个选择 R15 和 Rthro 角色碰撞类型的枚举。InnerBox 是所有角色的经典风格碰撞，OuterBox 是基于网格尺寸的动态尺寸碰撞。
Studio.ReflectionMetadata.ReflectionMetadata.PVInstanceCoordinateFrame,,,Deprecated. Use CFrame instead,Deprecated. Use CFrame instead,더 이상 사용되지 않습니다. CFrame을 대신 사용하세요,Устарело. Используйте CFrame,已过时。请改用 CFrame
Studio.ReflectionMetadata.ReflectionMetadata.PackageLinkStatus,,,Current status of the Package,Current status of the Package,Package의 현재 상태,Текущее состояние пакета,此 Package 的当前状态
Studio.ReflectionMetadata.ReflectionMetadata.ServiceProviderservice,,,Use GetService() instead,Use GetService() instead,GetService()를 대신 사용하세요,Вместо этого используйте GetService(),请改用 GetService()
Studio.ReflectionMetadata.ReflectionMetadata.Hopper,,,Use StarterPack instead,Use StarterPack instead,StarterPack을 대신 사용하세요,Вместо этого используйте StarterPack,请改用 StarterPack
Studio.ReflectionMetadata.ReflectionMetadata.InstanceArchivable,,,"Determines whether or not an Instance can be saved when the game closes/attempts to save the game. Note: this only applies to games that use Data Persistence, or SavePlaceAsync.","Determines whether or not an Instance can be saved when the game closes/attempts to save the game. Note: this only applies to games that use Data Persistence, or SavePlaceAsync.",게임을 닫거나 저장할 때 인스턴스를 저장할 수 있는지 여부를 결정합니다. 참고: Data Persistence 또는 SavePlaceAsync를 사용하는 게임에만 적용됩니다.,"Определяет, может ли экземпляр сохраниться при закрытии игры/попытках сохранения игры. Примечание: относится только к играм, в которых используется функция Data Persisting или SavePlaceAsync.",决定一个 Instance 在游戏关闭/尝试保存游戏时是否可以被保存。注: 仅适用于使用 Data Persistence 或 SavePlaceAsync 的游戏。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceClassName,,,The string name of this Instance's most derived class.,The string name of this Instance's most derived class.,이 인스턴스의 가장 많이 파생된 클래스의 문자열 이름입니다.,Имя строки самого производного класса этого экземпляра.,此 Instance 的最底层派生类的字符串名称
Studio.ReflectionMetadata.ReflectionMetadata.InstanceParent,,,The Instance that is directly above this Instance in the tree.,The Instance that is directly above this Instance in the tree.,트리에서 이 Instance 바로 위에 있는 Instance.,"Экземпляр, который находится прямо над этим экземпляром в дереве.",在关系树中直接位于此 Instance 上层的 Instance。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceGetDebugId,,,This function is for internal testing. Don't use in production code,This function is for internal testing. Don't use in production code,내부 테스트 전용 기능입니다. 프로덕션 코드에 사용하지 마세요,Эта функция предназначена для внутреннего тестирования. Не используйте в производственном коде,此函数仅供内部测试。不要在生产代码中使用
Studio.ReflectionMetadata.ReflectionMetadata.InstanceClone,,,Returns a copy of this Object and all its children. The copy's Parent is nil,Returns a copy of this Object and all its children. The copy's Parent is nil,이 개체와 모든 자식들의 사본을 반환합니다. 사본의 부모는 nil입니다.,Возвращает копию этого объекта и всех его дочерних элементов. Родительский элемент копии равен nil,返回此对象及其所有子级的副本。副本的父项为零
Studio.ReflectionMetadata.ReflectionMetadata.InstanceisA,,,"Returns a boolean if this Instance is of type 'className' or a is a subclass of type 'className'.  If 'className' is not a valid class type in ROBLOX, this function will always return false.  <a href='http://wiki.roblox.com/index.php/IsA' target='_blank'>More info</a>","Returns a boolean if this Instance is of type 'className' or a is a subclass of type 'className'.  If 'className' is not a valid class type in ROBLOX, this function will always return false.  <a href='http://wiki.roblox.com/index.php/IsA' target='_blank'>More info</a>","이 Instance가 'className' 유형이거나 a가 'className' 유형의 서브클래스인 경우 부울 값을 반환합니다. Roblox에서 'className'이 유효한 클래스 유형이 아닌 경우, 이 함수는 항상 false를 반환합니다. <a href='http://wiki.roblox.com/index.php/IsA' target='_blank'>추가 정보</a>","Возвращает булеву переменную, если экземпляр имеет тип className или подкласс типа className. Если className не является допустимым типом класса в ROBLOX, эта функция всегда будет возвращать false. <a href='http://wiki.roblox.com/index.php/IsA' target='_blank'>Узнать больше</a>",返回一个布尔值，判断此 Instance 是否为 'className' 类型或 'className' 类型的子类。若 'className' 不是 ROBLOX 中的有效类类型，此函数将始终返回 false。<a href='http://wiki.roblox.com/index.php/IsA' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.InstanceFindFirstChild,,,Returns the first child of this Instance that matches the first argument 'name'.  The second argument 'recursive' is an optional boolean (defaults to false) that will force the call to traverse down thru all of this Instance's descendants until it finds an object with a name that matches the 'name' argument.  The function will return nil if no Instance is found.,Returns the first child of this Instance that matches the first argument 'name'.  The second argument 'recursive' is an optional boolean (defaults to false) that will force the call to traverse down thru all of this Instance's descendants until it finds an object with a name that matches the 'name' argument.  The function will return nil if no Instance is found.,"첫 번째 인수 'name'과 일치하는 이 인스턴스의 첫 번째 자식을 반환합니다. 두 번째 인수 'recursive'는 선택적 부울 값(기본값은 false)으로, 'name' 인수와 이름이 일치하는 개체를 찾을 때까지 호출이 이 인스턴스의 모든 후손을 순회하도록 만듭니다. 인스턴스를 찾지 못하면 함수는 nil을 반환합니다.","Возвращает первый дочерний элемент этого экземпляра, который соответствует первому аргументу name. Второй аргумент recursive является необязательной булевой переменной (по умолчанию false), которая принудительно заставляет вызов проходить через все потомки этого экземпляра, пока не найдет объект с именем, соответствующим аргументу name. Функция вернет значение nil, если экземпляры не найдены.",返回与第一个参数 'name' 匹配的该实例的第一个子级。 第二个参数 'recursive' 是一个可选的布尔值 (默认为 false)，将强制调用遍历该实例的所有后代，直至找到名称与 'name' 参数匹配的对象为止。如果没有找到实例，该函数将返回零。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceFindFirstChildOfClass,,,Returns the first child of this Instance that with a ClassName equal to 'className'.  The function will return nil if no Instance is found.,Returns the first child of this Instance that with a ClassName equal to 'className'.  The function will return nil if no Instance is found.,이 인스턴스에서 ClassName이 'className'과 동일한 첫 번째 자식을 반환합니다. Instance를 찾지 못하면 함수는 nil을 반환합니다.,"Возвращает первый дочерний элемент этого экземпляра, который имеет имя класса ClassName. Функция возвращает значение nil, если экземпляры не найдены.",返回此 Instance 中 ClassName 等于 'className' 的第一个子类。若未找到 Instance，此函数将返回空值。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceFindFirstChildWhichIsA,,,Returns the first child of this Instance that :IsA(className).  The second argument 'recursive' is an optional boolean (defaults to false) that will force the call to traverse down thru all of this Instance's descendants until it finds an object with a name that matches the 'className' argument.  The function will return nil if no Instance is found.,Returns the first child of this Instance that :IsA(className).  The second argument 'recursive' is an optional boolean (defaults to false) that will force the call to traverse down thru all of this Instance's descendants until it finds an object with a name that matches the 'className' argument.  The function will return nil if no Instance is found.,"이 인스턴스의 첫 번째 자식을 반환합니다(:IsA(className)). 두 번째 인수 'recursive'는 선택적 부울 값(기본값은 false)으로, 'className'인수와 이름이 일치하는 개체를 찾을 때까지 호출이 이 인스턴스의 모든 하위 항목을 순회하도록 만듭니다. 인스턴스를 찾지 못하면 함수는 nil을 반환합니다.","Возвращает первый дочерний элемент экземпляра, который имеет класс :IsA(className). Второй аргумент recursive является необязательной булевой переменной (по умолчанию false), которая принудительно заставляет вызов проходить через все потомки этого экземпляра, пока не найдет объект с именем, соответствующим аргументу className. Функция возвращает значение nil, если экземпляры не найдены.",返回此 Instance 中符合 IsA(className) 的第一个子类。第二个参数 'recursive' 是一个可选布尔值 (默认为 false)，参数为 true 时将强制此调用遍历此 Instance 的所有后代直到其找到一个名称与 'className' 参数匹配的对象。若未找到 Instance，此函数将返回空值。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceFindFirstAncestor,,,Returns the first ancestor of this Instance that matches the first argument 'name'.  The function will return nil if no Instance is found.,Returns the first ancestor of this Instance that matches the first argument 'name'.  The function will return nil if no Instance is found.,이 인스턴스에서 첫 번째 인수 'name'와(과) 일치하는 첫 번째 상위 항목을 반환합니다. 인스턴스를 찾지 못하면 함수는 nil을 리턴합니다.,"Возвращает первого предка этого экземпляра, который соответствует первому аргументу name. Функция возвращает значение nil, если экземпляры не найдены.",返回此 Instance 的匹配第一个参数 'name' 的第一个祖先。若未找到 Instance，此函数将返回空值。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceFindFirstAncestorOfClass,,,Returns the first ancestor of this Instance with a ClassName equal to 'className'.  The function will return nil if no Instance is found.,Returns the first ancestor of this Instance with a ClassName equal to 'className'.  The function will return nil if no Instance is found.,이 인스턴스에서 ClassName이 'className'과 동일한 첫 번째 상위 항목을 반환합니다. Instance를 찾지 못하면 함수는 nil을 반환합니다.,"Возвращает первого предка этого экземпляра, ClassName которого соответствует параметру className. Функция возвращает значение nil, если экземпляры не найдены.",返回此 Instance 的 ClassName 等于 'className' 的第一个祖先。若未找到 Instance，此函数将返回空值。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceFindFirstAncestorWhichIsA,,,Returns the first ancestor of this Instance that :IsA(className).  The function will return nil if no Instance is found.,Returns the first ancestor of this Instance that :IsA(className).  The function will return nil if no Instance is found.,이 인스턴스의 첫 번째 상위 항목을 반환합니다(IsA(className)). 인스턴스를 찾지 못하면 함수는 nil을 반환합니다.,"Возвращает первого предка экземпляра, который имеет класс :IsA(className). Функция возвращает значение nil, если экземпляры не найдены.",返回此 Instance 的符合 IsA(className) 的第一个祖先。若未找到 Instance，此函数将返回空值。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceGetFullName,,,Returns a string that shows the path from the root node (DataModel) to this Instance.  This string does not include the root node (DataModel).,Returns a string that shows the path from the root node (DataModel) to this Instance.  This string does not include the root node (DataModel).,루트 노드(DataModel)에서 이 Instance까지의 경로를 나타내는 문자열을 반환합니다. 이 문자열은 루트 노드(DataModel)를 포함하지 않습니다.,"Возвращает строку, показывающую путь от корневого узла (DataModel) до этого экземпляра. Строка не включает корневой узел (DataModel).",返回一个显示从根节点 (DataModel) 至此 Instance 的路径的字符串。此字符串不包括根节点 (DataModel)。
Studio.ReflectionMetadata.ReflectionMetadata.Instancechildren,,,Use GetChildren() instead,Use GetChildren() instead,GetChildren()을 대신 사용하세요,Вместо этого используйте GetChildren(),请改用 GetChildren()
Studio.ReflectionMetadata.ReflectionMetadata.InstanceGetChildren,,,Returns a read-only table of this Object's children,Returns a read-only table of this Object's children,이 Object의 자식의 읽기 전용 테이블을 반환합니다,Возвращает таблицу с дочерними элементами данного объекта только для чтения,返回此对象的子级的只读表
Studio.ReflectionMetadata.ReflectionMetadata.InstanceGetDescendants,,,"Returns an array containing all of the descendants of the instance. Returns in preorder traversal, or in other words, where the parents come before their children, depth first.","Returns an array containing all of the descendants of the instance. Returns in preorder traversal, or in other words, where the parents come before their children, depth first.","인스턴스의 모든 하위 항목을 포함하는 배열을 반환합니다. 전위 순회 방식, 즉 부모가 자식보다 먼저 오는 방식(깊이 우선)으로 반환합니다.","Возвращает массив, содержащий всех потомков экземпляра. Возвращает в префиксном порядке, т. е. родительские элементы предшествуют дочерним. Сортировка по глубине.",返回一个包含此实例的所有后代的数组。返回值为前序遍历，换言之，父类将排在子类的前面，深度优先。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceRemove,,,"Deprecated. Use ClearAllChildren() to get rid of all child objects, or Destroy() to invalidate this object and its descendants","Deprecated. Use ClearAllChildren() to get rid of all child objects, or Destroy() to invalidate this object and its descendants",더 이상 사용할 수 없습니다. ClearAllChildren()을 사용하여 모든 자식 개체를 제거하거나 Destroy()를 사용하여 이 개체와 하위 항목을 무효화하세요.,Устарело. Используйте ClearAllChildren() для удаления всех дочерних объектов или Destroy() для аннулирования этого объекта и его потомков,已弃用。使用 ClearAllChildren() 去除所有子对象，或使用 Destroy() 使该对象及其后代失效
Studio.ReflectionMetadata.ReflectionMetadata.InstanceClearAllChildren,,,Removes all children (but not this object) from the workspace.,Removes all children (but not this object) from the workspace.,작업 공간에서 모든 하위 항목(이 개체는 아님)을 제거합니다.,Удаляет все дочерние элементы (но не этот объект) из рабочей области.,从工作区移除所有子类 (不包括此对象)。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceDestroy,,,Removes object and all of its children from the workspace. Disconnects object and all children from open connections. Object and children may not be usable after calling Destroy.,Removes object and all of its children from the workspace. Disconnects object and all children from open connections. Object and children may not be usable after calling Destroy.,작업 공간에서 개체 및 모든 하위 항목을 제거합니다. 열려 있는 연결에서 개체와 모든 하위 항목의 연결을 끊습니다. Destroy를 호출한 후에는 개체 및 하위 항목을 사용하지 못할 수 있습니다.,Удаляет объект и все его дочерние элементы из рабочей области. Отключает объект и все дочерние элементы от открытых соединений. После вызова команды Destroy объект и дочерние элементы могут оказаться недоступными для использования.,从工作区移除此对象及其所有子类。从开放连接断开此对象及其所有子类。在调用 Destroy 后此对象及其子类可能无法使用。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceAncestryChanged,,,Fired when any of this object's ancestors change.  First argument 'child' is the object whose parent changed.  Second argument 'parent' is the first argument's new parent.,Fired when any of this object's ancestors change.  First argument 'child' is the object whose parent changed.  Second argument 'parent' is the first argument's new parent.,이 개체의 상위 항목이 변경되면 발생합니다. 첫 번째 인수 'child'는 부모가 변경된 개체입니다. 두 번째 인수 'parent'는 첫 번째 인수의 새로운 부모입니다.,"Возникает при смене предков любого из объектов. Первый аргумент child — это объект, родительский элемент которого изменился. Второй аргумент parent — новый родительский элемент первого аргумента.",当此对象的任意祖先发生变动时触发。第一个参数 'child' 是父类发生变动的对象。第二个参数 'parent' 是第一个参数的新父类。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceDescendantAdded,,,"Fired after an Instance is parented to this object, or any of this object's descendants.  The 'descendant' argument is the Instance that is being added.","Fired after an Instance is parented to this object, or any of this object's descendants.  The 'descendant' argument is the Instance that is being added.",인스턴스가 이 개체 또는 이 개체의 하위 항목의 부모가 된 후에 발생합니다. 'descendant' 인수는 추가된 인스턴스입니다.,"Возникает после того, как объект или любые потомки объекта присвоены экземпляру в качестве родительского элемента. Аргумент descendant — это добавляемый экземпляр.",当一个 Instance 成为此对象或此对象的任意后代的父类时触发。 'descendant' 参数是被添加的 Instance。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceDescendantRemoving,,,"Fired after an Instance is unparented from this object, or any of this object's descendants.  The 'descendant' argument is the Instance that is being added.","Fired after an Instance is unparented from this object, or any of this object's descendants.  The 'descendant' argument is the Instance that is being added.",인스턴스가 이 개체 또는 이 개체의 하위 항목의 부모에게서 분리되면 발생합니다. 'descendant' 인수는 추가된 인스턴스입니다.,"Возникает после того, как объект или любые потомки объекта открепляются от экземпляра как родительские элементы. Аргумент descendant — это добавляемый экземпляр.",当一个 Instance 与此对象或此对象的任意后代脱离父类关系后触发。 'descendant' 参数是被添加的 Instance。
Studio.ReflectionMetadata.ReflectionMetadata.InstanceChanged,,,Fired after a property changes value.  The property argument is the name of the property,Fired after a property changes value.  The property argument is the name of the property,속성 값이 변경되면 발생합니다. 속성 인수는 속성의 이름입니다,Возникает после изменения значения свойства. Аргумент свойства — это имя свойства,当一个属性的值发生变动时触发。属性参数是该属性的名称
Studio.ReflectionMetadata.ReflectionMetadata.BodyGyro,,,Attempts to maintain a fixed orientation of its parent Part,Attempts to maintain a fixed orientation of its parent Part,부모 Part의 고정된 방향을 유지하려고 합니다,Пытается сохранить фиксированную ориентацию родительской детали,尝试维持其父 Part 的固定朝向
Studio.ReflectionMetadata.ReflectionMetadata.BodyGyroMaxTorque,,,The maximum torque that will be exerted on the Part,The maximum torque that will be exerted on the Part,파트에 가해지는 최대 토크,"Максимальный крутящий момент, который будет приложен к детали",施加在部件上的最大扭矩
Studio.ReflectionMetadata.ReflectionMetadata.BodyGyroD,,,The dampening factor applied to this force,The dampening factor applied to this force,이 힘에 적용되는 댐프닝 인수,"Коэффициент демпфирования, действующий на эту силу",应用于此力的阻尼系数
Studio.ReflectionMetadata.ReflectionMetadata.BodyGyroP,,,The power continually applied to this force,The power continually applied to this force,이 힘에 연속적으로 적용되는 파워,"Мощность, постоянно действующая на эту силу",应持续用于此力的功率
Studio.ReflectionMetadata.ReflectionMetadata.BodyGyroCFrame,,,"The cframe that this force is trying to orient its parent Part to.  Note: this force only uses the rotation of the cframe, not the position.","The cframe that this force is trying to orient its parent Part to.  Note: this force only uses the rotation of the cframe, not the position.",이 힘이 부모 파트를 향하게 하는 cframe입니다. 참고: 이 힘은 cframe의 위치가 아니라 회전만 사용합니다.,"Cframe, в сторону которого эта сила пытается повернуть свою родительскую часть. Примечание: эта сила использует только разворот cframe, а не положение.",该力试图将其父部件定向到的 cframe。 注意: 此力仅使用 cframe 的旋转，而不是位置。
Studio.ReflectionMetadata.ReflectionMetadata.BodyPositionMaxForce,,,The maximum force that will be exerted on the Part,The maximum force that will be exerted on the Part,파트에 가해지는 최대 힘,"Максимальная сила, которая будет приложена к детали",施加在部件上的最大力
Studio.ReflectionMetadata.ReflectionMetadata.BodyPositionD,,,The dampening factor applied to this force,The dampening factor applied to this force,이 힘에 적용되는 댐프닝 인수,"Коэффициент демпфирования, действующий на эту силу",应用于此力的阻尼系数
Studio.ReflectionMetadata.ReflectionMetadata.BodyPositionP,,,The power factor continually applied to this force,The power factor continually applied to this force,이 힘에 지속적으로 적용되는 역률,"Коэффициент мощности, постоянно действующий на эту силу",持续应用于此力的功率因数
Studio.ReflectionMetadata.ReflectionMetadata.BodyPositionPosition,,,The Vector3 that this force is trying to position its parent Part to.,The Vector3 that this force is trying to position its parent Part to.,이 힘이 부모 파트를 배치하려고 하는 Vector3입니다.,"Vector3, в сторону которого эта сила пытается разместить родительскую деталь.",此力试图将其父部件定位到的 Vector3。
Studio.ReflectionMetadata.ReflectionMetadata.RocketPropulsion,,,A propulsion system that mimics a rocket,A propulsion system that mimics a rocket,로켓을 모방한 추진 시스템,"Двигательная система, имитирующая ракету",一种模仿火箭的推进系统
Studio.ReflectionMetadata.ReflectionMetadata.BodyVelocityMaxForce,,,The maximum force that will be exerted on the Part in each axis,The maximum force that will be exerted on the Part in each axis,각 축의 파트에 가해지는 최대 힘,"Максимальная сила, прилагаемая к детали по каждой оси",在每个轴上施加在部件上的最大力
Studio.ReflectionMetadata.ReflectionMetadata.BodyVelocityP,,,"The amount of power we add to the system.  The higher the power, the quicker the force will achieve its goal.","The amount of power we add to the system.  The higher the power, the quicker the force will achieve its goal.",시스템에 추가하는 파워의 양입니다. 파워가 높을수록 힘이 목표를 더 빠르게 달성합니다.,"Мощность, добавляемая в систему. Чем выше мощность, тем быстрее сила достигает цели.",我们添加到系统的功率数值。功率越高，力达成目标的速度就越快。
Studio.ReflectionMetadata.ReflectionMetadata.BodyVelocityVelocity,,,The velocity this system tries to achieve.  How quickly the system reaches this velocity (if ever) is defined by P.,The velocity this system tries to achieve.  How quickly the system reaches this velocity (if ever) is defined by P.,이 시스템이 달성하려고 하는 속도입니다. 시스템이 이 속도에 도달하는 속도(가능한 경우)는 P에 의해 정의됩니다.,"Скорость, которой пытается достичь система. Как быстро система достигает этой скорости (если вообще достигает), определяется параметром P.",该系统试图达到的速度。P 定义系统达到此速度的速度 (如果有的话)。
Studio.ReflectionMetadata.ReflectionMetadata.BodyForce,,,"When parented to a physical part, BodyForce will continually exert a force upon its parent object.","When parented to a physical part, BodyForce will continually exert a force upon its parent object.",물리적 파트의 부모로 지정되면 BodyForce는 부모 개체에 지속적으로 힘을 가합니다.,При присвоении родительского элемента физической части BodyForce будет постоянно прилагать силу к своему родительскому объекту.,当成为物理部件的子类时，BodyForce 将对其父对象持续施加一个力。
Studio.ReflectionMetadata.ReflectionMetadata.BodyThrustForce,,,The power continually applied to this force,The power continually applied to this force,이 힘에 연속적으로 적용되는 파워,"Мощность, постоянно действующая на эту силу",不断在此力上施加的力量
Studio.ReflectionMetadata.ReflectionMetadata.BodyThrustLocation,,,The Vector3 location of where to apply the force to.,The Vector3 location of where to apply the force to.,힘을 적용할 Vector3 위치입니다.,"Место расположения Vector3, к которому приложена сила.",将力施加到的 Vector3 位置。
Studio.ReflectionMetadata.ReflectionMetadata.Teams,,,This Service-level object is the container for all Team objects in a level. A map that supports team games must have a Teams service. <a href='http://wiki.roblox.com/index.php/Team' target='_blank'>More info</a>,This Service-level object is the container for all Team objects in a level. A map that supports team games must have a Teams service. <a href='http://wiki.roblox.com/index.php/Team' target='_blank'>More info</a>,이 서비스 레벨 개체는 레벨의 모든 Team 개체에 대한 컨테이너입니다. Team 게임을 지원하는 맵에는 팀 서비스가 있어야 합니다. <a href='http://wiki.roblox.com/index.php/Team' target='_blank'>추가 정보</a>,"Этот объект уровня службы является контейнером для всех общих объектов на данном уровне. Карта, поддерживающая совместную игру, должна иметь службу Teams. <a href='http://wiki.roblox.com/index.php/Team' target='_blank'>Узнать больше</a>",此 Service 级对象是一个关卡中所有 Team 对象的容器。支持组队游戏的地图必须拥有 Team 服务。<a href='http://wiki.roblox.com/index.php/Team' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.TeamsGetPlayers,,,Returns a read-only table of players which are on this team.,Returns a read-only table of players which are on this team.,이 팀에 속한 플레이어의 읽기 전용 테이블을 반환합니다.,"Возвращает таблицу игроков только для чтения, которые находятся в этой команде.",返回一个包含在此队伍中的所有玩家的只读表。
Studio.ReflectionMetadata.ReflectionMetadata.Team,,,The Team class is used to represent a faction in a team game. The only valid location for a Team object is under the Teams service. <a href='http://wiki.roblox.com/index.php/Team' target='_blank'>More info</a>,The Team class is used to represent a faction in a team game. The only valid location for a Team object is under the Teams service. <a href='http://wiki.roblox.com/index.php/Team' target='_blank'>More info</a>,Team 클래스는 팀 게임에서 진영을 나타내는 데 사용됩니다. Team 개체에서 유일하게 유효한 위치는 Team 서비스 아래에 있습니다. <a href='http://wiki.roblox.com/index.php/Team' target='_blank'>추가 정보</a>,Класс Team используется для представления фракции в командной игре. Единственное действительное местоположение для объекта Team — служба Teams. <a href='http://wiki.roblox.com/index.php/Team' target='_blank'>Узнать больше</a>,Team 类用于代表组队游戏中的一个阵营。Team 对象的唯一有效位置是在 Teams 服务下。<a href='http://wiki.roblox.com/index.php/Team' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.LuaSourceContainerCurrentEditor,,,The name of the player who is currently editing the script in Team Create.,The name of the player who is currently editing the script in Team Create.,팀 만들기에서 현재 스크립트를 편집중인 플레이어의 이름.,"Имя игрока, который в данный момент редактирует скрипт в режиме совместной разработки.",目前正在组队创作中编辑此脚本的玩家名称。
Studio.ReflectionMetadata.ReflectionMetadata.ScriptLinkedScript,,,This property is under development. Do not use,This property is under development. Do not use,이 속성은 개발 중입니다. 사용하지 마세요,Это свойство находится в стадии разработки. Не использовать,此属性正在开发中。请不要使用
Studio.ReflectionMetadata.ReflectionMetadata.LocalScript,,,"A script that runs on clients, NOT servers.  LocalScripts can only run when parented under one of the following:1) A player's Backpack.2) A player's Character model.3) A player's PlayerGui.4) A player's PlayerScripts.5) The ReplicatedFirst service.","A script that runs on clients, NOT servers.  LocalScripts can only run when parented under one of the following:1) A player's Backpack.2) A player's Character model.3) A player's PlayerGui.4) A player's PlayerScripts.5) The ReplicatedFirst service.",서버가 아닌 클라이언트에서 실행되는 스크립트. LocalScripts는 다음 중 하나의 아래에서 부모로 지정된 경우에만 실행될 수 있습니다. 1) 플레이어의 배낭. 2) 플레이어의 캐릭터 모델. 3) 플레이어의 PlayerGui. 4) 플레이어의 PlayerScript. 5) ReplicatedFirst 서비스.,"Скрипт, который работает на клиентах, а НЕ серверах. LocalScripts может быть выполнен только при условии, что ему присвоен родительский элемент в одной из следующих категорий: 1) рюкзак игрока; 2) модель персонажа игрока; 3) PlayerGui; 4) PlayerScripts игрока; 5) служба ReplicatedFirst.",在客户端而非服务器上运行的脚本。LocalScript 只有作为以下类的子类时才能运行: 1) 玩家的背包。2) 玩家的 Character 模型。3) 玩家的 PlayerGui。4) 玩家的 PlayerScripts。5) ReplicatedFirst 服务。
Studio.ReflectionMetadata.ReflectionMetadata.RenderingTest,,,dummy summary,dummy summary,더미 요약,пустое резюме,伪摘要
Studio.ReflectionMetadata.ReflectionMetadata.Model,,,"A construct used to group Parts and other objects together, also allows manipulation of multiple objects.","A construct used to group Parts and other objects together, also allows manipulation of multiple objects.","Part와 다른 개체를 함께 그룹화하는 데 사용되는 구조로, 여러 개체를 조작할 수도 있습니다.","Конструкция, используемая для группировки деталей и других объектов, также позволяет работать с несколькими объектами.",用于将 Part 和其他对象组合在一起的构造，允许对多个对象进行操作。
Studio.ReflectionMetadata.ReflectionMetadata.ModelBreakJoints,,,Breaks all surface joints contained within,Breaks all surface joints contained within,안에 포함된 모든 표면 이음을 끊습니다,"Разрушает все поверхностные соединения, содержащиеся внутри",断开包含在内的所有表面接头
Studio.ReflectionMetadata.ReflectionMetadata.ModelGetModelCFrame,,,"Returns a CFrame that has position of the centroid of all Parts in the Model.  The rotation matrix is either the rotation matrix of the user-defined PrimaryPart, or if not specified then  a part in the Model chosen by the engine.","Returns a CFrame that has position of the centroid of all Parts in the Model.  The rotation matrix is either the rotation matrix of the user-defined PrimaryPart, or if not specified then  a part in the Model chosen by the engine.","모델에 있는 모든 Part의 중심 위치를 포함하는 CFrame을 반환합니다. 회전 행렬은 사용자 정의 PrimaryPart의 회전 행렬이거나, 지정되지 않은 경우 엔진이 선택한 Model의 파트입니다.","Возвращает CFrame, который занимает центральное положение для всех деталей в модели. Матрица вращения является либо матрицей вращения пользовательской PrimaryPart, либо, если она не указана, частью в модели, выбранной двигателем.",返回一个包含 Model 内所有 Part 的质心位置的 CFrame。旋转矩阵可以是用户指定的 PrimaryPart 的旋转矩阵，若用户未指定则由引擎选择 Model 中的一个部件。
Studio.ReflectionMetadata.ReflectionMetadata.ModelGetModelSize,,,Returns a Vector3 that is union of the extents of all Parts in the model.,Returns a Vector3 that is union of the extents of all Parts in the model.,모델의 모든 Part 범위의 결합체인 Vector3을 반환합니다.,"Возвращает Vector3, который является объединением величин всех деталей модели.",返回 Model 中所有 Part 的范围并集 Vector3。
Studio.ReflectionMetadata.ReflectionMetadata.ModelMakeJoints,,,"Creates the appropriate SurfaceJoints between all touching Parts contrained within the model. Technically, this function calls MakeJoints() on all Parts inside the model.","Creates the appropriate SurfaceJoints between all touching Parts contrained within the model. Technically, this function calls MakeJoints() on all Parts inside the model.",모델 내에 제한된 모든 접촉 파트 간에 적절한 SurfaceJoints를 만듭니다. 엄밀히 말하면 이 함수는 모델 내부의 모든 파트에서 MakeJoints()를 호출합니다.,"Создает соответствующие SurfaceJoints между всеми соприкасающимися деталями, содержащимися в модели. Фактически эта функция вызывает MakeJoints() для всех деталей внутри модели.",在模型中约束的所有接触部件之间创建适当的 SurfaceJoint。从技术上而言，此函数在模型内的所有部件上调用MakeJoints()。
Studio.ReflectionMetadata.ReflectionMetadata.ModelMoveTo,,,"Moves the centroid of the Model to the specified location, respecting all relative distances between parts in the model.","Moves the centroid of the Model to the specified location, respecting all relative distances between parts in the model.",Model의 부품 간 모든 상대 거리를 유지하면서 모델의 중심을 지정된 위치로 이동합니다.,"Перемещает центроид модели в указанное место, соблюдая все относительные расстояния между деталями в модели.",将 Model 的质心移至指定位置，保留模型中所有部件之间的相对距离。
Studio.ReflectionMetadata.ReflectionMetadata.ModelResetOrientationToIdentity,,,"Rotates all parts in the model to the orientation that was set using SetIdentityOrientation().  If this function has never been called, rotation is reset to GetModelCFrame()'s rotation.","Rotates all parts in the model to the orientation that was set using SetIdentityOrientation().  If this function has never been called, rotation is reset to GetModelCFrame()'s rotation.",모델의 모든 파트를 SetIdentityOrientation()에 의해 설정된 방향으로 회전합니다. 이 함수를 호출한 적이 없으면 회전 값이 GetModelCFrame()의 회전으로 재설정됩니다.,"Поворачивает все детали модели в положение, заданное с помощью функции SetIdentityOrientation(). Если эта функция никогда не вызывалась, выполняется сброс на поворот GetModelCFrame().",将模型中的所有部件旋转至通过 SetIdentityOrientation() 设置的指定朝向。若此函数先前从未被调用，旋转值将重置为 GetModelCFrame() 的旋转值。
Studio.ReflectionMetadata.ReflectionMetadata.ModelSetIdentityOrientation,,,Takes the current rotation matrix of the model and stores it as the model's identity matrix. The rotation is applied when ResetOrientationToIdentity() is called.,Takes the current rotation matrix of the model and stores it as the model's identity matrix. The rotation is applied when ResetOrientationToIdentity() is called.,모델의 현재 회전 행렬을 가져 와서 모델의 항등 행렬로 저장합니다. ResetOrientationToIdentity()가 호출될 때 회전 값이 적용됩니다.,Принимает текущую матрицу вращения модели и сохраняет ее в качестве матрицы идентичности модели. Поворот применяется при вызове функции ResetOrientationToIdentity().,取模型的当前旋转矩阵并将其储存为该模型的单位矩阵。调用 ResetOrientationToIdentity() 时应用旋转值。
Studio.ReflectionMetadata.ReflectionMetadata.ModelTranslateBy,,,"Similar to MoveTo(), except instead of moving to an explicit location, we use the model's current CFrame location and offset it.","Similar to MoveTo(), except instead of moving to an explicit location, we use the model's current CFrame location and offset it.","MoveTo()와 유사하지만, 명시적 위치로 이동하는 대신 모델의 현재 CFrame 위치를 사용하여 오프셋합니다.","Аналогично MoveTo(), за исключением того, что вместо перемещения в указанное местоположение используется текущее местоположение CFrame модели и его сдвиг.",与 MoveTo() 类似，但不直接移动至明确位置，而是使用模型的当前 CFrame 位置进行偏移。
Studio.ReflectionMetadata.ReflectionMetadata.ModelGetPrimaryPartCFrame,,,"Returns the cframe of the Model.PrimaryPart. If PrimaryPart is nil, then this function will throw an error.","Returns the cframe of the Model.PrimaryPart. If PrimaryPart is nil, then this function will throw an error.",Model.PrimaryPart의 cframe을 반환합니다. 이 함수는 PrimaryPart가 nil인 경우 오류를 발생시킵니다.,"Возвращает cframe для Model.PrimaryPart. Если PrimaryPart имеет значение nil, то эта функция вызовет ошибку.",返回 Model.PrimaryPart 的 CFrame。若 PrimaryPart 为空值，此函数会报错。
Studio.ReflectionMetadata.ReflectionMetadata.ModelSetPrimaryPartCFrame,,,"Sets the cframe of the Model.PrimaryPart. If PrimaryPart is nil, then this function will throw an error. This also sets the cframe of all descendant Parts relative to the cframe change to PrimaryPart.","Sets the cframe of the Model.PrimaryPart. If PrimaryPart is nil, then this function will throw an error. This also sets the cframe of all descendant Parts relative to the cframe change to PrimaryPart.",Model.PrimaryPart의 cframe을 설정합니다. 이 함수는 PrimaryPart가 nil일 경우 오류를 발생시킵니다. 또한 PrimaryPart의 cframe 변경과 관련된 모든 하위 파트의 cframe을 설정합니다.,"Устанавливает cframe для Model.PrimaryPart. Если PrimaryPart имеет значение nil, то эта функция вызовет ошибку. Также устанавливает cframe для всех деталей-потомков относительно изменения cframe на PrimaryPart.",设置 Model.PrimaryPart 的 CFrame。若 PrimaryPart 为空值，此函数会报错。还会设置与 PrimaryPart 的 CFrame 改动相关的所有后代 Part 的 CFrame。
Studio.ReflectionMetadata.ReflectionMetadata.Modelmove,,,Use MoveTo() instead,Use MoveTo() instead,MoveTo()를 대신 사용하세요,Вместо этого используйте MoveTo(),请改用 MoveTo()
Studio.ReflectionMetadata.ReflectionMetadata.ModelPrimaryPart,,,A Part that serves as a reference for the Model's CFrame. Used in conjunction with GetModelPrimaryPartCFrame and SetModelPrimaryPartCFrame. Use this to rotate/translate all Parts relative to the PrimaryPart.,A Part that serves as a reference for the Model's CFrame. Used in conjunction with GetModelPrimaryPartCFrame and SetModelPrimaryPartCFrame. Use this to rotate/translate all Parts relative to the PrimaryPart.,모델의 CFrame에 대한 참조 역할을 하는 파트입니다. GetModelPrimaryPartCFrame 및 SetModelPrimaryPartCFrame과 함께 사용됩니다. 이 기능을 사용하면 PrimaryPart와 관련된 모든 파트를 회전하거나 변형할 수 있습니다.,"Деталь, служащая образцом для CFrame модели. Используется в сочетании с GetModelPrimaryPartCFrame и SetModelPrimaryPartCFrame. Используйте для вращения/перевода всех деталей относительно PrimaryPart.",作为 Model 的 CFrame 的参照物的 Part。与 GetModelPrimaryPartCFrame 和 SetModelPrimaryPartCFrame 结合使用。使用此方法旋转/转变与 PrimaryPart 相关的所有 Part。
Studio.ReflectionMetadata.ReflectionMetadata.Statusmove,,,Use MoveTo() instead,Use MoveTo() instead,MoveTo()를 대신 사용하세요,Вместо этого используйте MoveTo(),请改用 MoveTo()
Studio.ReflectionMetadata.ReflectionMetadata.DataModel,,,The root of ROBLOX's parent-child hierarchy (commonly known as game after the global variable used to access it),The root of ROBLOX's parent-child hierarchy (commonly known as game after the global variable used to access it),Roblox의 부모·자식 계층 구조의 루트 (액세스에 사용되는 전역 변수 이후에는 일반적으로 '게임'이라고 함),"Корень иерархии между родительскими и дочерними элементами ROBLOX (обычно известной как игра, названная по глобальной переменной, используемой для доступа к ней)",ROBLOX 的父子层次结构的根 (对于用来访问它的全局变量，俗称“游戏”)
Studio.ReflectionMetadata.ReflectionMetadata.DataModelOnClose,,,Deprecated. Use DataModel.BindToClose,Deprecated. Use DataModel.BindToClose,더 이상 사용되지 않습니다. DataModel.BindToClose를 사용하세요,Устарело. Используйте DataModel.BindToClose,已过时。请改用 DataModel.BindToClose
Studio.ReflectionMetadata.ReflectionMetadata.DataModelworkspace,,,Deprecated. Use Workspace,Deprecated. Use Workspace,더 이상 사용되지 않습니다. Workspace를 사용하세요,Устарело. Используйте Workspace,已过时。请改用 Workspace
Studio.ReflectionMetadata.ReflectionMetadata.DataModelShowMouse,,,Deprecated. Use Workspace.IsMouseCursorVisible,Deprecated. Use Workspace.IsMouseCursorVisible,더 이상 사용되지 않습니다. Workspace.IsMouseCursorVisible을 사용하세요,Устарело. Используйте Workspace.IsMouseCursorVisible,已过时。请改用 Workspace.IsMouseCursorVisible
Studio.ReflectionMetadata.ReflectionMetadata.DataModelIsLoaded,,,"Returns true if the game has finished loading, false otherwise.  Check this before listening to the Loaded signal to ensure a script knows when a game finishes loading.","Returns true if the game has finished loading, false otherwise.  Check this before listening to the Loaded signal to ensure a script knows when a game finishes loading.","게임 불러오기가 완료되면 true를, 그렇지 않으면 false를 반환합니다. Loaded 신호를 듣기 전에 이를 확인하여 게임이 불러오기를 완료한 시점을 스크립트가 알 수 있도록 하세요.","Возвращает true, если игра завершила загрузку, false в противном случае. Проверьте это перед прослушиванием сигнала Loaded, чтобы убедиться, что скрипт знает, когда игра завершит загрузку.",若游戏已加载完毕则返回 true，否则返回 false。在监听 Loaded 信号前先检查此项以确保脚本知道游戏何时完成加载。
Studio.ReflectionMetadata.ReflectionMetadata.DataModelLoaded,,,"Fires when the game finishes loading.  Use this to know when to remove your custom loading gui.  It is best to check IsLoaded() before connecting to this event, as the game may load before the event is connected to.","Fires when the game finishes loading.  Use this to know when to remove your custom loading gui.  It is best to check IsLoaded() before connecting to this event, as the game may load before the event is connected to.","게임 불러오기가 완료되면 발생합니다. 이 이벤트를 사용하면 언제 사용자 정의 불러오기 GUI를 제거해야 하는지 알 수 있습니다. 이벤트에 연결되기 전에 게임이 불러오기를 실행할 수 있으므로, 이 이벤트에 연결하기 전에 IsLoaded()를 확인하는 것이 좋습니다.","Возникает, когда игра завершает загрузку. Используйте, чтобы знать, когда убрать пользовательский интерфейс загрузки. Перед подключением к этому событию лучше всего проверить IsLoaded(), так как игра может загрузиться до того, как событие будет подключено.",当游戏加载完毕时触发。使用此事件来获知何时应移除你的自定义加载界面。最好在连接至此事件前先检查 IsLoaded()，因为游戏可能在事件连接前载入。
Studio.ReflectionMetadata.ReflectionMetadata.DataModelSetPlaceID,,,Use SetPlaceId() instead,Use SetPlaceId() instead,SetPlaceId()를 대신 사용하세요,Вместо этого используйте SetPlaceId(),请改用 SetPlaceId()
Studio.ReflectionMetadata.ReflectionMetadata.DataModelSetCreatorID,,,Use SetCreatorId() instead,Use SetCreatorId() instead,SetCreatorId()를 대신 사용하세요,Вместо этого используйте SetCreatorId(),请改用 SetCreatorId()
Studio.ReflectionMetadata.ReflectionMetadata.DataStoreService,,,Responsible for storing data across multiple user created places,Responsible for storing data across multiple user created places,여러 사용자가 만든 장소에 데이터 저장을 담당함,"Ответственный за хранение данных в разных местах, созданных пользователями",负责在多个用户创建场景之间储存数据
Studio.ReflectionMetadata.ReflectionMetadata.DataStoreServiceGetDataStore,,,Returns a data store with the given name and scope,Returns a data store with the given name and scope,지정된 이름과 범위를 가진 데이터 저장소를 반환합니다,Возвращает хранилище данных с заданным именем и объемом,返回具有指定名称和作用域的数据存储
Studio.ReflectionMetadata.ReflectionMetadata.DataStoreServiceGetGlobalDataStore,,,Returns the default data store,Returns the default data store,기본 데이터 저장소를 반환합니다,Возвращает хранилище данных по умолчанию,返回数据存储
Studio.ReflectionMetadata.ReflectionMetadata.DataStoreServiceGetOrderedDataStore,,,Returns an ordered data store with the given name and scope,Returns an ordered data store with the given name and scope,지정된 이름과 범위로 정렬된 데이터 저장소를 반환합니다,Возвращает заказанное хранилище данных с заданным именем и областью,返回具有指定名称和作用域的经过排序的数据存储
Studio.ReflectionMetadata.ReflectionMetadata.GlobalDataStore,,,Exposes functions for saving and loading data for the DataStoreService,Exposes functions for saving and loading data for the DataStoreService,DataStoreService에 대한 데이터 저장 및 불러오기 함수를 노출합니다.,Выставляет функции сохранения и загрузки данных для DataStoreService.,公开用于为 DataStoreService 保存和加载数据的函数
Studio.ReflectionMetadata.ReflectionMetadata.GlobalDataStoreOnUpdate,,,Sets callback as a function to be executed any time the value associated with key is changed. It is important to disconnect the connection when the subscription to the key is no longer needed.,Sets callback as a function to be executed any time the value associated with key is changed. It is important to disconnect the connection when the subscription to the key is no longer needed.,키와 관련된 값이 변경될 때 실행되는 함수로 콜백을 설정합니다. 키에 대한 가입이 더 이상 필요하지 않으면 연결을 끊는 것이 중요합니다.,"Устанавливает функцию обратного вызова при каждом изменении значения ключа. Важно разорвать соединение, когда подписка на ключ больше не нужна.",将回调设置为与键关联的值发生改动时执行的函数。不再需要订阅键时断开连接非常重要。
Studio.ReflectionMetadata.ReflectionMetadata.GlobalDataStoreGetAsync,,,Returns the value of the entry in the DataStore with the given key,Returns the value of the entry in the DataStore with the given key,주어진 키를 사용하여 DataStore의 항목 값을 반환합니다.,Возвращает значение записи в DataStore с помощью данного ключа,返回 DataStore 中指定键的条目的值
Studio.ReflectionMetadata.ReflectionMetadata.GlobalDataStoreIncrementAsync,,,Increments the value of a particular key amd returns the incremented value,Increments the value of a particular key amd returns the incremented value,특정 키의 값을 증가시키고 증가된 값을 반환합니다,Увеличивает значение определенного ключа и возвращает увеличенное значение,递增指定键的值并返回递增后的值
Studio.ReflectionMetadata.ReflectionMetadata.GlobalDataStoreSetAsync,,,Sets the value of the key. This overwrites any existing data stored in the key,Sets the value of the key. This overwrites any existing data stored in the key,키의 값을 설정합니다. 이 작업은 키에 저장된 기존 데이터를 덮어씁니다.,"Устанавливает значение ключа. Функция перезаписывает все существующие данные, хранящиеся в ключе",设置键的值。此操作会覆盖键中储存的现有数据
Studio.ReflectionMetadata.ReflectionMetadata.GlobalDataStoreUpdateAsync,,,"Retrieves the value of the key from the website, and updates it with a new value. The callback until the value fetched matches the value on the web. Returning nil means it will not save.","Retrieves the value of the key from the website, and updates it with a new value. The callback until the value fetched matches the value on the web. Returning nil means it will not save.",웹사이트에서 키 값을 검색하여 새로운 값으로 업데이트합니다. 가져온 값이 웹의 값과 일치할 때까지 콜백합니다. nil을 반환하면 저장되지 않습니다.,"Вызывает значение ключа с веб-сайта, записывает в него новое значение. Обратный вызов происходит до тех пор, пока полученное значение не будет соответствовать значению в сети. Возврат значения nil означает, что оно не будет сохранено.",从网站检索键的值，并更新为新值。回调直到从网站获取的值与该值相匹配。返回空值表示无法保存。
Studio.ReflectionMetadata.ReflectionMetadata.OrderedDataStore,,,A type of DataStore where values must be positive integers. This makes OrderedDataStore suitable for leaderboard related scripting where you are required to order large amounts of data efficiently.,A type of DataStore where values must be positive integers. This makes OrderedDataStore suitable for leaderboard related scripting where you are required to order large amounts of data efficiently.,값이 양의 정수여야 하는 DataStore 유형. 따라서 OrderedDataStore는 대량의 데이터를 효율적으로 정렬해야 하는 순위표 관련 스크립팅에 적합합니다.,"Тип DataStore, где значения должны быть положительными целыми числами. Это делает OrderedDataStore пригодным для скриптов, связанных с таблицей лидеров, где требуется эффективный заказ больших объемов данных.",一种 DataStore 类型，其值必须为正整数。这使得 OrderedDataStore 适用于需要给大量数据高效排序的排行榜相关脚本。
Studio.ReflectionMetadata.ReflectionMetadata.OrderedDataStoreGetSortedAsync,,,"Returns a DataStorePages object. The length of each page is determined by pageSize, and the order is determined by isAscending. minValue and maxValue are optional parameters which will filter the result.","Returns a DataStorePages object. The length of each page is determined by pageSize, and the order is determined by isAscending. minValue and maxValue are optional parameters which will filter the result.",DataStorePages 개체를 반환합니다. 각 페이지의 길이는 pageSize에 의해 결정되며 순서는 isAscending에 의해 결정됩니다. minValue 및 maxValue는 결과 필터링을 위한 선택적 매개변수입니다.,"Возвращает объект DataStorePages. Длина каждой страницы определяется размером страницы pageSize, а порядок определяется как isAscending. Значения minValue и maxValue являются необязательными и фильтруют результат.",返回一个 DataStorePages 对象。每页的长度由 pageSize 决定，顺序由 isAscending 决定。minValue 和 maxValue 为用于过滤结果的可选参数。
Studio.ReflectionMetadata.ReflectionMetadata.CameraCameraSubject,,,Where the Camera's focus is.  Any rotation of the camera will be about this subject.,Where the Camera's focus is.  Any rotation of the camera will be about this subject.,카메라의 포커스 위치입니다. 카메라는 이 대상을 중심으로 회전합니다.,Расположение фокуса камеры. Любое вращение камеры происходит вокруг этого объекта.,镜头的焦点所在位置。对镜头的一切旋转都将围绕此对象进行。
Studio.ReflectionMetadata.ReflectionMetadata.CameraCameraType,,,Defines how the camera will behave. <a href='http://wiki.roblox.com/index.php/CameraType' target='_blank'>More info</a>,Defines how the camera will behave. <a href='http://wiki.roblox.com/index.php/CameraType' target='_blank'>More info</a>,카메라 행동을 정의합니다. <a href='http://wiki.roblox.com/index.php/CameraType' target='_blank'>추가 정보</a>,Задает поведение камеры. <a href='http://wiki.roblox.com/index.php/CameraType' target='_blank'>Узнать больше</a>,定义镜头的行为方式。<a href='http://wiki.roblox.com/index.php/CameraType' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.CameraCoordinateFrame,,,"The current position and rotation of the Camera.  For most CameraTypes, the rotation is set such that the CoordinateFrame lookVector is pointing at the Focus.","The current position and rotation of the Camera.  For most CameraTypes, the rotation is set such that the CoordinateFrame lookVector is pointing at the Focus.",카메라의 현재 위치 및 회전. 대부분 CameraTypes의 회전 설정은 CoordinateFrame lookVector가 Focus를 향하도록 되어 있습니다.,"Текущее положение и разворот камеры. Для большинства типов CameraType вращение установлено таким образом, что CoordinateFrame lookVector указывает на фокус.",镜头的当前位置和旋转值。对于大多数 CameraType 而言，旋转值为 CoordinateFrame 的 lookVector 指向 Focus。
Studio.ReflectionMetadata.ReflectionMetadata.CameraCFrame,,,"The current position and rotation of the Camera.  For most CameraTypes, the rotation is set such that the CoordinateFrame lookVector is pointing at the Focus.","The current position and rotation of the Camera.  For most CameraTypes, the rotation is set such that the CoordinateFrame lookVector is pointing at the Focus.",카메라의 현재 위치 및 회전. 대부분 CameraTypes의 회전 설정은 CoordinateFrame lookVector가 Focus를 향하도록 되어 있습니다.,"Текущее положение и разворот камеры. Для большинства типов CameraType вращение установлено таким образом, что CoordinateFrame lookVector указывает на фокус.",镜头的当前位置和旋转值。对于大多数 CameraType 而言，旋转值为 CoordinateFrame 的 lookVector 指向 Focus。
Studio.ReflectionMetadata.ReflectionMetadata.CameraFieldOfView,,,"The current angle, or width, of what the camera can see.  Current acceptable values are from 20 degrees to 80.","The current angle, or width, of what the camera can see.  Current acceptable values are from 20 degrees to 80.",카메라에서 볼 수 있는 현재 각도 또는 너비. 현재 허용 가능한 값은 20~80도입니다.,"Текущий угол, или ширина, доступный для просмотра камера. Допустимые значения: от 20 до 80 градусов.",镜头当前可见的角度或宽度。当前可接受的值为 20 至 80 度。
Studio.ReflectionMetadata.ReflectionMetadata.CameraFocus,,,The current CoordinateFrame that the camera is looking at.  Note: it is not always guaranteed that the camera is always looking here.,The current CoordinateFrame that the camera is looking at.  Note: it is not always guaranteed that the camera is always looking here.,카메라가 향하고 있는 현재의 CoordinateFrame입니다. 참고: 항상 여기를 향하고 있는 것은 아닙니다.,"Текущий CoordinateFrame, на который повернута камера. Примечание: не всегда гарантируется, что камера повернута именно сюда.",镜头当前朝向的 CoordinateFrame 。注: 不能保证镜头总是看向这里。
Studio.ReflectionMetadata.ReflectionMetadata.CameraViewportSize,,,"Holds the x,y screen resolution of the viewport the camera is presenting (note: this can differ from the AbsoluteSize property of a full screen gui).","Holds the x,y screen resolution of the viewport the camera is presenting (note: this can differ from the AbsoluteSize property of a full screen gui).","카메라가 표시하는 뷰포트의 x,y 화면 해상도를 유지합니다(참고: 전체 화면 GUI의 AbsoluteSize 속성과 다를 수 있음).","Удерживает разрешение экрана X,Y в области просмотра камеры (примечание: может отличаться от свойства AbsoluteSize в интерфейсе полноэкранного режима).","储存镜头所呈现的观察窗的屏幕分辨率 x,y 值 (注: 此数值可能与全屏图形界面的 AbsoluteSize 属性有所不同)。"
Studio.ReflectionMetadata.ReflectionMetadata.CameraNearPlaneZ,,,The negative z-offset of the view frustum's near clipping plane.,The negative z-offset of the view frustum's near clipping plane.,시야 절두체의 인접 클리핑 면의 음수 z 오프셋입니다.,Отрицательное Z-смещение усеченного угла обзора вблизи плоскости сечения.,视椎体近剪切平面的负 z 轴偏移
Studio.ReflectionMetadata.ReflectionMetadata.CameraGetRoll,,,"Returns the camera's current roll. Roll is defined in radians, and is stored as the delta from the camera's y axis default normal vector.","Returns the camera's current roll. Roll is defined in radians, and is stored as the delta from the camera's y axis default normal vector.","카메라의 현재 롤을 반환합니다. 롤은 라디안으로 정의되며, 카메라의 y축 기본 법선 벡터의 델타로 저장됩니다.",Возвращает текущее перемещение камеры. Перемещение исчисляется в радианах и хранится как дельта от обычного вектора оси Y камеры по умолчанию.,返回镜头的当前翻滚值。翻滚值以弧度为单位，并储存为镜头 y 轴默认法矢量的 delta 值。
Studio.ReflectionMetadata.ReflectionMetadata.CameraWorldToScreenPoint,,,"Takes a 3D position in the world and projects it onto x,y coordinates of screen space. Returns two values, first is a Vector3 that has x,y position and z position which is distance from camera (negative if behind camera, positive if in front). Second return value is a boolean indicating if the first argument is an on-screen coordinate.","Takes a 3D position in the world and projects it onto x,y coordinates of screen space. Returns two values, first is a Vector3 that has x,y position and z position which is distance from camera (negative if behind camera, positive if in front). Second return value is a boolean indicating if the first argument is an on-screen coordinate.","월드의 3D 위치를 가져와 화면 공간의 x,y 좌표에 투영합니다. 두 개의 값을 반환합니다. 첫 번째 값은 카메라와의 거리인 x,y 위치와 z 위치가 포함된 Vector3입니다(카메라 뒤에 있으면 음수, 카메라 앞에 있으면 양수). 두 번째로 반환되는 값은 첫 번째 인수가 화면상 좌표인지 표시하는 부울 값입니다.","Занимает 3D-позицию в мире и проецирует ее на координаты пространства экрана X,Y. Возвращает два значения, первое — Vector3 с осями X,Y и Z, которое равно расстоянию от камеры (отрицательное, если за камерой, и положительное, если перед ней). Второе значение — булева переменная, указывающая, является ли первый аргумент координатой на экране.","取世界中的一个 3D 位置并将其映射至屏幕空间的 x,y 坐标。返回两个值，第一个是包含 x,y 位置和定义与镜头距离的 z 位置 (负数为在镜头后，正数为在镜头前) 的 Vector3。第二个返回值是判断第一个参数是否为屏幕上的坐标的布尔值。"
Studio.ReflectionMetadata.ReflectionMetadata.CameraScreenPointToRay,,,"Takes a 2D screen position and produces a Ray object to be used for 3D raycasting. Input is x,y screen coordinates, and a (optional, defaults to 0) z position which sets how far in the camera look vector to start the ray origin.","Takes a 2D screen position and produces a Ray object to be used for 3D raycasting. Input is x,y screen coordinates, and a (optional, defaults to 0) z position which sets how far in the camera look vector to start the ray origin.","2D 화면 위치를 가져와 3D 레이캐스팅에 사용할 Ray 개체를 생성합니다. 입력은 x,y 화면 좌표이고, z 위치(선택 사항, 기본값은 0)는 광선 원점을 시작하기 위해 카메라에서 벡터가 보이는 정도를 설정합니다.","Занимает 2D-позицию и создает объект Ray для использования в 3D-отслеживании лучей. В качестве ввода используются координаты экрана X,Y и (необязательно, по умолчанию 0) Z, которые определяют, насколько далеко в векторе изображения камеры должен начинаться источник луча.","取屏幕上的一个 2D 位置并生成一个用于 3D 光线投射的 Ray 对象。输入为 x,y 屏幕坐标，(可选，默认为0) 的 z 位置设置镜头看向光线原点的矢量距离。"
Studio.ReflectionMetadata.ReflectionMetadata.CameraViewportPointToRay,,,"Same as ScreenPointToRay, except no GUI offsets are taken into account. Useful for things like casting a ray from the middle of the Camera.ViewportSize","Same as ScreenPointToRay, except no GUI offsets are taken into account. Useful for things like casting a ray from the middle of the Camera.ViewportSize",GUI 오프셋이 고려되지 않는다는 점을 제외하면 ScreenPointToRay와 동일합니다. Camera.ViewportSize의 중앙에서 광선을 비출 때 등에 유용합니다.,"То же, что и ScreenPointToRay, однако не учитываются смещения графического интерфейса пользователя. Полезно для отслеживания лучшей из центра Camera.ViewportSize",同 ScreenPointToRay，但不计入 GUI 偏移。适用于从 Camera.ViewportSize 中央投射光线等。
Studio.ReflectionMetadata.ReflectionMetadata.CameraWorldToViewportPoint,,,"Same as WorldToScreenPoint, except no GUI offsets are taken into account.","Same as WorldToScreenPoint, except no GUI offsets are taken into account.",GUI 오프셋이 고려되지 않는다는 점을 제외하면 WorldToScreenPoint와 동일합니다.,"То же, что и WorldToScreenPoint, однако не учитываются смещения графического интерфейса пользователя.",同 WorldToScreenPoint，但不计入 GUI 偏移。
Studio.ReflectionMetadata.ReflectionMetadata.CameraSetRoll,,,"Sets the camera's current roll. Roll is defined in radians, and is stored as the delta from the camera's y axis default normal vector.","Sets the camera's current roll. Roll is defined in radians, and is stored as the delta from the camera's y axis default normal vector.","카메라의 현재 롤을 설정합니다. 롤은 라디안으로 정의되며, 카메라의 y축 기본 법선 벡터의 델타로 저장됩니다.",Устанавливает текущее перемещение камеры. Перемещение определяется в радианах и сохраняется как дельта от обычного вектора оси Y камеры по умолчанию.,设置镜头的当前翻滚值。翻滚值以弧度为单位，并储存为镜头 y 轴默认法矢量的 delta 值。
Studio.ReflectionMetadata.ReflectionMetadata.PlayersCharacterAutoLoads,,,"Set to true, when a player joins a game, they get a character automatically, as well as when they die.  When set to false, characters do not auto load and will only load in using Player:LoadCharacter().","Set to true, when a player joins a game, they get a character automatically, as well as when they die.  When set to false, characters do not auto load and will only load in using Player:LoadCharacter().","true로 설정하면, 플레이어가 게임에 참가할 때와 게임에서 죽을 때 캐릭터를 자동으로 얻습니다. false로 설정하면 캐릭터가 자동으로 로드되지 않으며 Player:LoadCharacter()를 사용하여 로드해야 합니다.","При значении true, когда игрок присоединяется к игре или умирает, то получает персонажа автоматически. При значении false персонажи не загружаются автоматически и загружаются только с помощью Player:LoadCharacter().",若设为真，玩家加入游戏和死亡时会自动获得一个角色。若设为假，角色不会自动加载，只有在使用 Player:LoadCharacter() 时才会加载。
Studio.ReflectionMetadata.ReflectionMetadata.Playersplayers,,,Use GetPlayers() instead,Use GetPlayers() instead,GetPlayers()를 대신 사용하세요,Вместо этого используйте GetPlayers(),请改用 GetPlayers()
Studio.ReflectionMetadata.ReflectionMetadata.ReplicatedStorage,,,A container whose contents are replicated to all clients and the server.,A container whose contents are replicated to all clients and the server.,내용이 모든 클라이언트와 서버에 복제되는 컨테이너.,"Контейнер, содержимое которого воспроизводится на всех клиентах и сервере.",一个容器，其内容被复制到所有客户端和服务器。
Studio.ReflectionMetadata.ReflectionMetadata.ReplicatedFirst,,,"A container whose contents are replicated to all clients (but not back to the server) first before anything else. Useful for creating loading guis, tutorials, etc.","A container whose contents are replicated to all clients (but not back to the server) first before anything else. Useful for creating loading guis, tutorials, etc.","다른 무엇보다 가장 먼저 내용이 모든 클라이언트(서버로 돌아가지는 않음)에 복제되는 컨테이너. 불러오기 GUI, 튜토리얼 등을 만드는 데 유용합니다.","Контейнер, содержимое которого в первую очередь реплицируется на всех клиентах (но не обратно на сервер). Полезно для создания интерфейсов загрузки, учебных материалов и т. д.",一个容器，其内容在进行其他一切操作前先被复制到所有客户端 (但不会返回到服务器)。适用于创建载入图形界面、教程等。
Studio.ReflectionMetadata.ReflectionMetadata.ReplicatedFirstRemoveRobloxLoadingScreen,,,"Removes the default Roblox loading screen from view. Call this when you are ready to either show your own loading gui, or when the game is ready to play.","Removes the default Roblox loading screen from view. Call this when you are ready to either show your own loading gui, or when the game is ready to play.",기본 Roblox 불러오기 화면을 보기에서 제거합니다. 자체 불러오기 GUI를 보여줄 준비가 되었거나 게임 플레이가 준비되면 이것을 호출하세요.,"Скрывает экран загрузки Roblox по умолчанию. Вызовите эту функцию, когда нужно показать собственный интерфейс загрузки или когда все готово к игре.",从视图中移除默认 Roblox 载入页面。当你准备好显示自己的载入界面或当游戏已准备就绪时调用。
Studio.ReflectionMetadata.ReflectionMetadata.ServerStorage,,,A container whose contents are only on the server.,A container whose contents are only on the server.,내용이 서버에만 존재하는 컨테이너.,"Контейнер, содержимое которого находится только на сервере.",一个容器，其内容仅存在于服务器上。
Studio.ReflectionMetadata.ReflectionMetadata.ServerScriptService,,,A container whose contents should be scripts. Scripts that are added to the container are run on the server.,A container whose contents should be scripts. Scripts that are added to the container are run on the server.,내용이 스크립트여야 하는 컨테이너. 컨테이너에 추가된 스크립트는 서버에서 실행됩니다.,"Контейнер, содержимое которого должно быть скриптами. Скрипты, которые добавляются в контейнер, выполняются на сервере.",一个容器，其内容应为脚本。添加至该容器的脚本将在服务器上运行。
Studio.ReflectionMetadata.ReflectionMetadata.StudioService,,,A service for interfacing with the current studio state from Lua.,A service for interfacing with the current studio state from Lua.,Lua의 현재 스튜디오 상태와 인터페이스하기 위한 서비스.,Услуга для взаимодействия с текущим состоянием программы из Lua.,用于与 Lua 的当前 Studio 状态进行交互的服务。
Studio.ReflectionMetadata.ReflectionMetadata.Lighting,,,Responsible for all lighting aspects of the world (affects how things are rendered).,Responsible for all lighting aspects of the world (affects how things are rendered).,게임 세계의 모든 조명 측면을 담당합니다(렌더링 방식에 영향을 미침).,Отвечает за все стороны освещения в мире (влияет на визуализацию).,负责游戏世界中的所有照明外观 (影响物体的渲染方式)。
Studio.ReflectionMetadata.ReflectionMetadata.LightingGetMinutesAfterMidnight,,,"The number of minutes that the current time is past midnight.  If currently at midnight, returns 0.  Will return decimal values if not at an exact minute.","The number of minutes that the current time is past midnight.  If currently at midnight, returns 0.  Will return decimal values if not at an exact minute.",자정 이후 현재까지 지난 시간(분). 현재 시간이 자정이면 0을 반환합니다. 정확한 분 수가 아닌 경우 10진수 값을 반환합니다.,"Количество минут после полуночи. Если сейчас полночь, возвращает 0. Если значение минут не целое, возвращает десятичную дробь.",从午夜开始到当前时间的分钟数。若当前时间为午夜，则返回 0。若未处于准确分钟，将返回小数值。
Studio.ReflectionMetadata.ReflectionMetadata.LightingGetMoonDirection,,,"Returns the lookVector (Vector3) of the moon. If this lookVector was used in a CFrame, the Part would face the moon.","Returns the lookVector (Vector3) of the moon. If this lookVector was used in a CFrame, the Part would face the moon.",달의 lookVector(Vector3)를 반환합니다. 이 lookVector가 CFrame에서 사용되면 Part는 달을 향하게 됩니다.,"Возвращает lookVector (Vector3) луны. Если lookVector использовался в CFrame, деталь будет обращена к луне.",返回月球的 lookVector (Vector3)。若此 lookVector 被用于 CFrame 中，Part 将面向月球。
Studio.ReflectionMetadata.ReflectionMetadata.LightingGetMoonPhase,,,Currently always returns 0.75. MoonPhase cannot be edited.,Currently always returns 0.75. MoonPhase cannot be edited.,현재는 항상 0.75를 반환합니다. MoonPhase는 편집할 수 없습니다.,В настоящее время всегда возвращает 0.75. MoonPhase не редактируется.,目前总是返回 0.75。MoonPhase 无法被编辑。
Studio.ReflectionMetadata.ReflectionMetadata.LightingGetSunDirection,,,"Returns the lookVector (Vector3) of the sun. If this lookVector was used in a CFrame, the Part would face the sun.","Returns the lookVector (Vector3) of the sun. If this lookVector was used in a CFrame, the Part would face the sun.",태양의 lookVector(Vector3)를 반환합니다. 이 lookVector가 CFrame에서 사용되면 Part는 태양을 향하게 됩니다.,"Возвращает lookVector (Vector3) солнца. Если lookVector использовался в CFrame, деталь будет обращена к солнцу.",返回太阳的 lookVector (Vector3)。若此 lookVector 被用于 CFrame 中，Part 将面向太阳。
Studio.ReflectionMetadata.ReflectionMetadata.LightingSetMinutesAfterMidnight,,,Sets the time to be a certain number of minutes after midnight.  This works with integer and decimal values.,Sets the time to be a certain number of minutes after midnight.  This works with integer and decimal values.,자정 이후 특정 시간(분)으로 시간을 설정합니다. 정수 및 10진수 값일 수 있습니다.,Устанавливает время на определенное количество минут после полуночи. Работает с целыми и десятичными значениями.,设置时间为从午夜开始经过的一定分钟数。可为整数或小数值。
Studio.ReflectionMetadata.ReflectionMetadata.LightingAmbient,,,The hue of the global lighting.  Changing this changes the color tint of all objects in the Workspace.,The hue of the global lighting.  Changing this changes the color tint of all objects in the Workspace.,전역 조명의 색조. 이를 변경하면 작업 공간에 있는 모든 개체의 색조가 변경됩니다.,Оттенок глобального освещения. Изменение этого параметра изменяет цветовой тон всех объектов в рабочей области.,全局照明的色调。修改此值会改变工作区中所有对象的颜色色调。
Studio.ReflectionMetadata.ReflectionMetadata.LightingBrightness,,,"How much global light each Part in the Workspace receives. Standard range is 0 to 2 (0 being little light), but can be increased all the way to 10 (colors start to be appear very different at this value).","How much global light each Part in the Workspace receives. Standard range is 0 to 2 (0 being little light), but can be increased all the way to 10 (colors start to be appear very different at this value).","작업 공간의 각 Part가 받는, 전역 조명의 양. 표준 범위는 0~2(0은 빛이 거의 없음)이지만 10까지 늘릴 수 있습니다(이 값에서 색상이 매우 다르게 나타나기 시작함).","Сколько общего света получает каждая деталь в рабочей области. Стандартный диапазон: от 0 до 2 (0 означает малое освещение), но может быть увеличен до 10 (при этом цвета начинают сильно различаться).",工作区中的每个 Part 能接收到多少全局光照。标准范围为 0 至 2 (0 为极少光照)，但也可以增加至 10 (从此数值开始色彩会显得极为不同)。
Studio.ReflectionMetadata.ReflectionMetadata.LightingExposureCompensation,,,Exposure compensation amount. Applies a bias to the exposure level prior to the tonemap step. +1 indicates twice as much exposure and -1 means half as much exposure.,Exposure compensation amount. Applies a bias to the exposure level prior to the tonemap step. +1 indicates twice as much exposure and -1 means half as much exposure.,노출 보정 양. 톤맵 단계 전에 노출 레벨에 바이어스를 적용합니다. +1은 노출의 두 배를 나타내고 -1은 노출의 절반을 의미합니다.,"Значение компенсации экспозиции. Применяется к уровню экспозиции, предшествующему шагу тональной карты. +1 означает вдвое большую экспозицию, а -1 — вдвое меньшую.",曝光补偿值。在色调映射步骤前对曝光级别应用偏差值。+1 代表曝光量加倍，-1 代表曝光量减半。
Studio.ReflectionMetadata.ReflectionMetadata.LightingShadowSoftness,,,This property controls how blurry the shadows are.,This property controls how blurry the shadows are.,이 속성은 그림자가 흐릿한 정도를 제어합니다.,"Это свойство контролирует, насколько размыты тени.",此属性控制阴影的模糊程度。
Studio.ReflectionMetadata.ReflectionMetadata.LightingColorShift_Bottom,,,The hue of global lighting on the bottom surfaces of an object.,The hue of global lighting on the bottom surfaces of an object.,개체의 아래쪽 표면에 있는 전역 조명의 색조.,Оттенок глобального освещения на нижних поверхностях объекта.,物体底表面的全局照明色调。
Studio.ReflectionMetadata.ReflectionMetadata.LightingColorShift_Top,,,The hue of global lighting on the top surfaces of an object.,The hue of global lighting on the top surfaces of an object.,개체의 위쪽 표면에 있는 전역 조명의 색조.,Оттенок глобального освещения на верхних поверхностях объекта.,物体顶表面的全局照明色调。
Studio.ReflectionMetadata.ReflectionMetadata.LightingFogColor,,,A Color3 value that changes the hue of distance fog.,A Color3 value that changes the hue of distance fog.,거리 안개의 색조를 변경하는 Color3 값.,"Значение Color3, изменяющее оттенок тумана на расстоянии.",用于改变远方迷雾色调的 Color3 值。
Studio.ReflectionMetadata.ReflectionMetadata.LightingFogEnd,,,The distance at which fog completely blocks your vision. This distance is relative to the camera position. Units are in studs,The distance at which fog completely blocks your vision. This distance is relative to the camera position. Units are in studs,안개가 시야를 완전히 차단하는 거리. 이 거리는 카메라 위치를 기준으로 합니다. 단위는 스터드입니다.,"Расстояние, на котором туман полностью блокирует зрение. Это расстояние относительно положения камеры. Единицами измерения являются стойки",迷雾能完全阻隔你的视线的距离。此距离与镜头位置有关。单位为格
Studio.ReflectionMetadata.ReflectionMetadata.LightingFogStart,,,The distance at which the fog gradient begins. This distance is relative to the camera position. Units are in studs.,The distance at which the fog gradient begins. This distance is relative to the camera position. Units are in studs.,안개 그레디언트가 시작되는 거리. 이 거리는 카메라 위치를 기준으로 합니다. 단위는 스터드입니다.,"Расстояние, с которого начинается градиент тумана. Это расстояние относительно положения камеры. Единицами измерения являются стойки",迷雾渐变开始的距离。此距离与镜头位置有关。单位为格。
Studio.ReflectionMetadata.ReflectionMetadata.LightingGeographicLatitude,,,The latitude position the level is placed at.  This affects sun position. <a href='http://wiki.roblox.com/index.php/GeographicLatitude' target='_blank'>More info</a>,The latitude position the level is placed at.  This affects sun position. <a href='http://wiki.roblox.com/index.php/GeographicLatitude' target='_blank'>More info</a>,레벨이 배치된 경도 위치. 이 값은 태양 위치에 영향을 줍니다. <a href='http://wiki.roblox.com/index.php/GeographicLatitude' target='_blank'>추가 정보</a>,Широта уровня. Влияет на положение солнца. <a href='http://wiki.roblox.com/index.php/GeographicLatitude' target='_blank'>Узнать больше</a>,关卡所在的纬度位置。此设定会影响太阳的位置。<a href='http://wiki.roblox.com/index.php/GeographicLatitude' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.LightingGlobalShadows,,,Flag enabling shadows from sun and moon in the place,Flag enabling shadows from sun and moon in the place,장소에 태양과 달의 그림자를 구현하는 플래그,"Флаг, позволяющий создавать тени от солнца и луны",代表启用场景中太阳和月亮所造成的阴影
Studio.ReflectionMetadata.ReflectionMetadata.LightingOutdoorAmbient,,,"Effective ambient value for outdoors, effectively shadow color outdoors (requires GlobalShadows enabled)","Effective ambient value for outdoors, effectively shadow color outdoors (requires GlobalShadows enabled)","실외, 그 중에서도 그림자 색상 실외에 특히 효과적인 앰비언트 값(GlobalShadows 활성화 필요)","Эффективное значение окружения, т. е. цвет тени вне помещений (требует включения функции GlobalShadows)",户外有效环境值，户外有效阴影值 (需启用 GlobalShadows)
Studio.ReflectionMetadata.ReflectionMetadata.LightingOutlines,,,Flag enabling or disabling outlines on parts and terrain,Flag enabling or disabling outlines on parts and terrain,파트와 지형에 윤곽선을 활성화하거나 비활성화하는 플래그,"Флаг, включающий и отключающий контуры на деталях и рельефе",代表显示或隐藏部件和地形的轮廓线
Studio.ReflectionMetadata.ReflectionMetadata.LightingShadowColor,,,"Color the shadows appear as. Shadows are drawn mostly for characters, but depending on the lighting will also show for Parts in the Workspace.  Rendering settings can also affect if shadows are drawn.","Color the shadows appear as. Shadows are drawn mostly for characters, but depending on the lighting will also show for Parts in the Workspace.  Rendering settings can also affect if shadows are drawn.","그림자가 표시되는 색상. 그림자는 대개 캐릭터 쪽으로 그려지지만, 조명에 따라 작업 공간의 파트에도 표시됩니다. 또한 그림자가 그려지면 렌더링 설정도 영향을 줄 수 있습니다.","Цвет, которым отображаются тени. Тени рисуются в основном для персонажей, но в зависимости от освещения также отображаются для деталей в рабочей области. Параметры визуализации также могут влиять на то, как нарисованы тени.",阴影的显示颜色。大多数情况下只对角色绘制阴影，但根据照明条件，也可能显示工作区中 Part 的阴影。渲染设定也会影响是否绘制阴影。
Studio.ReflectionMetadata.ReflectionMetadata.LightingTimeOfDay,,,"A string that represent the current time of day. Time is in 24-hour clock format ""XX::YY:ZZ"", where X is hour, Y is minute, and Z is seconds.","A string that represent the current time of day. Time is in 24-hour clock format ""XX::YY:ZZ"", where X is hour, Y is minute, and Z is seconds.","현재 시간을 표시하는 문자열. 시간은 24시간 형식(""XX::YY:ZZ"")입니다. 여기서 X는 시간, Y는 분, Z는 초입니다.","Строка, отображающая текущее время суток. Время в 24-часовом формате «XX::YY:ZZ», где X — часы, Y — минуты, Z — секунды.","代表一天中当前时间的字符串。时间使用 24 小时制时钟格式 ""XX::YY:ZZ""，其中 X 代表小时，Y 代表分钟，Z 代表秒。"
Studio.ReflectionMetadata.ReflectionMetadata.LightingLightingChanged,,,"Fired whenever a property of Lighting is changed, or a skybox is added or removed. Skyboxes are of type 'Sky' and should be parented directly to lighting.","Fired whenever a property of Lighting is changed, or a skybox is added or removed. Skyboxes are of type 'Sky' and should be parented directly to lighting.",Lighting 속성이 변경되거나 스카이 박스가 추가 또는 제거될 때마다 발생합니다. 스카이 박스는 'Sky' 유형이므로 조명에 부모로 직접 연결되어야 합니다.,"Возникает при изменении свойств освещения, добавлении или удалении скайбокса. Скайбоксы имеют тип Sky, и в качестве родительского элемента им должно быть присвоено непосредственно освещение.",每当 Lighting 的属性变动，或 Skybox 被添加或移除时触发。 Skybox 属于 'Sky' 类型且应为 Lighting 的直接子类。
Studio.ReflectionMetadata.ReflectionMetadata.Debris,,,A service that provides utility in cleaning up objects,A service that provides utility in cleaning up objects,개체 정리 유틸리티를 제공하는 서비스,"Служба, полезная при очистке объектов",提供清理对象实用工具的服务
Studio.ReflectionMetadata.ReflectionMetadata.DebrisaddItem,,,Adds an Instance into the debris service that will later be destroyed.  Second argument 'lifetime' is optional and specifies how long (in seconds) to wait before destroying the item. If no time is specified then the item added will automatically be destroyed in 10 seconds.,Adds an Instance into the debris service that will later be destroyed.  Second argument 'lifetime' is optional and specifies how long (in seconds) to wait before destroying the item. If no time is specified then the item added will automatically be destroyed in 10 seconds.,나중에 파괴될 파편 서비스에 인스턴스를 추가합니다. 두 번째 인수 'lifetime'은 선택 사항으로 해당 아이템을 파괴하기 전에 대기하는 시간(단위: 초)을 지정합니다. 시간을 지정하지 않으면 추가되는 아이템은 10초 내에 자동으로 파괴됩니다.,"Добавляет экземпляр в службу мусора, для последующего уничтожения. Второй аргумент lifetime является необязательным и указывает, как долго (в секундах) следует ждать перед уничтожением объекта. Если не указано время, то добавленный объект будет автоматически уничтожен через 10 секунд.",向稍后将被销毁的碎片服务添加一个 Instance。第二个参数 'lifetime' 为可选项，指定项目被销毁前的等待时间 (以秒为单位)。若不指定时间，则被添加的项目将在 10 秒后被自动销毁。
Studio.ReflectionMetadata.ReflectionMetadata.DebrisMaxItems,,,Deprecated. No replacement,Deprecated. No replacement,더 이상 사용할 수 없습니다. 대체 옵션이 없습니다,Устарело. Нет замены,已过时。无替代
Studio.ReflectionMetadata.ReflectionMetadata.PlayerCameraMode,,,An enum that describes how a Player's camera is allowed to behave. <a href='http://wiki.roblox.com/index.php/CameraMode' target='_blank'>More info</a>.,An enum that describes how a Player's camera is allowed to behave. <a href='http://wiki.roblox.com/index.php/CameraMode' target='_blank'>More info</a>.,플레이어의 카메라가 동작할 수 있는 방식을 설명하는 열거형입니다. <a href='http://wiki.roblox.com/index.php/CameraMode' target='_blank'>추가 정보</a>.,"Перечисление (enum), описывающее поведение камеры игрока. <a href='http://wiki.roblox.com/index.php/CameraMode' target='_blank'>Узнать больше</a>.",描述 Player 的镜头的可用行为方式的枚举。<a href='http://wiki.roblox.com/index.php/CameraMode' target='_blank'>更多信息</a>。
Studio.ReflectionMetadata.ReflectionMetadata.PlayerDataReady,,,"Read-only. If true, this Player's persistent data can be loaded, false otherwise. <a href='http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence' target='_blank'>Info on Data Persistence</a>.","Read-only. If true, this Player's persistent data can be loaded, false otherwise. <a href='http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence' target='_blank'>Info on Data Persistence</a>.","읽기 전용입니다. true이면 이 플레이어의 지속 데이터를 로드할 수 있고, false이면 그럴 수 없습니다. <a href='http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence' target='_blank'>데이터 지속성에 대한 추가 정보</a>.","Только для чтения. Если значение true, можно загрузить постоянные данные этого игрока. В противном случае значение false. <a href='http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence' target='_blank'>Информация о постоянных данных</a>.",只读。若值为 true，此 Player 的持久性数据可被载入，值为 false 则相反。<a href='http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence' target='_blank'>关于数据持久性的信息</a>。
Studio.ReflectionMetadata.ReflectionMetadata.PlayerLoadCharacter,,,"Loads in a new character for this player.  This will replace the player's current character, if they have one. This should be used in conjunction with Players.CharacterAutoLoads to control spawning of characters. This function only works from a server-side script (NOT a LocalScript).","Loads in a new character for this player.  This will replace the player's current character, if they have one. This should be used in conjunction with Players.CharacterAutoLoads to control spawning of characters. This function only works from a server-side script (NOT a LocalScript).",이 플레이어의 새 캐릭터를 로드합니다. 이 캐릭터는 플레이어의 현재 캐릭터(있는 경우)를 교체합니다. 캐릭터 스폰을 제어하기 위해 Players.CharacterAutoLoads와 함께 사용해야 합니다. 이 함수는 서버 측 스크립트(LocalScript가 아님)에서만 동작합니다.,"Загружает нового персонажа для этого игрока. Заменяет текущего персонажа игрока, если он есть. Следует использовать совместно с Players.CharacterAutoLoads для управления созданием персонажей. Функция работает только из серверного скрипта (НЕ является LocalScript).",为此玩家载入一个新角色。若该玩家已有角色，将取代其当前角色。应结合 Players.CharacterAutoLoads 使用，用于控制角色的再生。此函数仅适用于服务器端脚本 (非 LocalScript)。
Studio.ReflectionMetadata.ReflectionMetadata.PlayerplayerFromCharacter,,,Use GetPlayerFromCharacter() instead,Use GetPlayerFromCharacter() instead,GetPlayerFromCharacter()를 대신 사용하세요.,Вместо этого используйте GetPlayerFromCharacter(),请改用 GetPlayerFromCharacter()
Studio.ReflectionMetadata.ReflectionMetadata.PlayerWaitForDataReady,,,Yields until the persistent data for this Player is ready to be loaded. <a href='http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence' target='_blank'>Info on Data Persistence</a>.,Yields until the persistent data for this Player is ready to be loaded. <a href='http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence' target='_blank'>Info on Data Persistence</a>.,이 플레이어에 대한 지속 데이터가 로드할 준비가 될 때까지 생성됩니다. <a href='http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence' target='_blank'>데이터 지속성에 대한 추가 정보</a>.,"Генерируется до тех пор, пока постоянные данные для этого игрока не будут готовы к загрузке. <a href='http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence' target='_blank'>Информация о постоянных данных</a>.","暂停直到此 Player 的持久性数据已准备好被载入。<a href='http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence' target='_blank'>关于数据持久性的信息</a>。"""
Studio.ReflectionMetadata.ReflectionMetadata.PlayerIdled,,,"Fired periodically after the user has been AFK for a while.  Currently this event is only fired for the *local* Player.  ""time"" is the time in seconds that the user has been idle.","Fired periodically after the user has been AFK for a while.  Currently this event is only fired for the *local* Player.  ""time"" is the time in seconds that the user has been idle.","사용자가 한 동안 자리를 비운 후 주기적으로 발생합니다. 현재 이 이벤트는 *local* 플레이어에 대해서만 발생합니다. ""time""은 플레이어가 아무 행동도 하지 않은 시간(단위: 초)입니다.","Запускается периодически после того, как пользователь некоторое время бездействует. В настоящий момент это событие запускается только для *локального* игрока. time — это время в секундах, в течение которого пользователь не совершал действий.",用户进入 AFK (离开) 状态一段时间后定期触发。当前此事件仅针对 *本地* Player 触发。“time”是用户进入离开状态的时间 (以秒为单位)。
Studio.ReflectionMetadata.ReflectionMetadata.WorkspaceFindPartsInRegion3,,,"Returns parts in the area defined by the Region3, up to specified maxCount or 100, whichever is less","Returns parts in the area defined by the Region3, up to specified maxCount or 100, whichever is less",Region3에서 정의된 영역의 파트를 반환합니다. 최대 값은 지정된 maxCount와 100 중에서 더 작은 값입니다.,"Возвращает детали в области, определенной в Region3, до указанного максимального количества maxCount или 100 (в зависимости от того, что меньше)",返回由 Region3 指定区域内的部件，最多 maxCount 或 100 个，以较小者为准
Studio.ReflectionMetadata.ReflectionMetadata.WorkspaceFindPartsInRegion3WithIgnoreList,,,"Returns parts in the area defined by the Region3, up to specified maxCount or 100, whichever is less","Returns parts in the area defined by the Region3, up to specified maxCount or 100, whichever is less",Region3에서 정의된 영역의 파트를 반환합니다. 최대 값은 지정된 maxCount와 100 중에서 더 작은 값입니다.,"Возвращает детали в области, определенной в Region3, до указанного максимального количества maxCount или 100 (в зависимости от того, что меньше)",返回由 Region3 指定区域内的部件，最多 maxCount 或 100 个，以较小者为准
Studio.ReflectionMetadata.ReflectionMetadata.WorkspaceFindPartOnRay,,,"Return type is (BasePart, Vector3) if the ray hits.  If it misses it will return (nil, PointAtEndOfRay)","Return type is (BasePart, Vector3) if the ray hits.  If it misses it will return (nil, PointAtEndOfRay)","광선이 닿을 경우 반환 유형은 (BasePart, Vector3)입니다. 광선이 닿지 않으면 (nil, PointAtEndOfRay)를 반환합니다.","Тип возврата — (BasePart, Vector3) при попадании луча. Если луч не попадает, возвращается (nil, PointAtEndOfRay)","若光线命中，则返回类型 (BasePart, Vector3)。若未命中则返回R (nil, PointAtEndOfRay)"
Studio.ReflectionMetadata.ReflectionMetadata.WorkspaceFindPartOnRayWithIgnoreList,,,"Return type is (BasePart, Vector3) if the ray hits.  If it misses it will return (nil, PointAtEndOfRay)","Return type is (BasePart, Vector3) if the ray hits.  If it misses it will return (nil, PointAtEndOfRay)","광선이 닿을 경우 반환 유형은 (BasePart, Vector3)입니다. 광선이 닿지 않으면 (nil, PointAtEndOfRay)를 반환합니다.","Тип возврата — (BasePart, Vector3) при попадании луча. Если луч не попадает, возвращается (nil, PointAtEndOfRay)","若光线命中，则返回类型 (BasePart, Vector3)。若未命中则返回R (nil, PointAtEndOfRay)"
Studio.ReflectionMetadata.ReflectionMetadata.WorkspacePGSPhysicsSolverEnabled,,,Boolean used to enable the new physics solver,Boolean used to enable the new physics solver,새로운 물리적 해결기를 활성화하는 데 사용되는 부울 값,Булева переменная для включения нового средства решения физики,布尔值，用于启用新物理解决器
Studio.ReflectionMetadata.ReflectionMetadata.WorkspaceFallenPartsDestroyHeight,,,Sets the height at which falling characters and parts are destroyed. This property is not scriptable and can only be set in Studio,Sets the height at which falling characters and parts are destroyed. This property is not scriptable and can only be set in Studio,떨어지는 캐릭터와 파트가 파괴되는 높이를 설정합니다. 이 속성은 스크립팅할 수 없으며 Studio에서만 설정할 수 있습니다.,"Устанавливает высоту, на которой падающие персонажи и детали уничтожаются. Это свойство не является скриптом и может быть установлено только в Studio",设置下落的角色和部件会被破坏的高度。此属性不可用于脚本，只能在 Studio 中进行设置
Studio.ReflectionMetadata.ReflectionMetadata.BasePart,,,"A structural class, not creatable","A structural class, not creatable",생성 불가능한 구조적 클래스,"Структурный класс, нельзя создать",结构类，不可创建
Studio.ReflectionMetadata.ReflectionMetadata.BasePartColor,,,Color3 of the part.,Color3 of the part.,파트의 Color3.,Color3 детали.,部件的 Color3。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartCFrame,,,Contains information regarding the Part's position and a matrix that defines the Part's rotation.  Can read/write. <a href='http://wiki.roblox.com/index.php/Cframe' target='_blank'>More info</a>,Contains information regarding the Part's position and a matrix that defines the Part's rotation.  Can read/write. <a href='http://wiki.roblox.com/index.php/Cframe' target='_blank'>More info</a>,파트의 위치에 관한 정보와 파트의 회전을 정의하는 매트릭스가 들어 있습니다. 읽거나 쓸 수 있습니다. <a href='http://wiki.roblox.com/index.php/Cframe' target='_blank'>추가 정보</a>,"Содержит информацию о положении детали и матрицу, определяющую вращение детали. Может читать/записывать. <a href='http://wiki.roblox.com/index.php/Cframe' target='_blank'>Узнать больше</a>",包含关于 Part 的位置的信息和定义 Part 旋转值的矩阵。可读写。<a href='http://wiki.roblox.com/index.php/Cframe' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.BasePartCanCollide,,,"Determines whether physical interactions with other Parts are respected.  If true, will collide and react with physics to other Parts.  If false, other parts will pass thru instead of colliding","Determines whether physical interactions with other Parts are respected.  If true, will collide and react with physics to other Parts.  If false, other parts will pass thru instead of colliding",다른 파트와의 물리적 상호작용이 적용되는지 여부를 결정합니다. true이면 물리 요소가 다른 파트와 충돌하고 반응합니다. false이면 다른 파트가 충돌하지 않고 통과합니다.,"Определяет, соблюдаются ли физические взаимодействия с другими деталями. Если да, сталкивается с другими деталями и реагирует по законам физики. Если нет, то другие детали проходят насквозь, не сталкиваясь.",决定是否遵守与其他 Part 的物理学互动。若值为 true，将与其他 Part 碰撞和互动。若值为 false，其他部件会穿过而非碰撞
Studio.ReflectionMetadata.ReflectionMetadata.BasePartAnchored,,,"Determines whether or not physics acts upon the Part.  If true, part stays 'Anchored' in space, not moving regardless of any collision/forces acting upon it.  If false, physics works normally on the part.","Determines whether or not physics acts upon the Part.  If true, part stays 'Anchored' in space, not moving regardless of any collision/forces acting upon it.  If false, physics works normally on the part.",물리 요소가 파트에 작용하는지 여부를 결정합니다. true이면 파트가 자리에 '고정'되고 충돌이나 작용하는 힘에 관계없이 움직이지 않습니다. false이면 물리 요소가 평상시대로 파트에 작용합니다.,"Определяет, действует ли физика на деталь. Если значение true, то деталь остается «привязанной» в пространстве, не двигаясь независимо от столкновения/действующих на нее сил. Если false, то физика работает нормально.",决定 Part 是否遵守物理学原理。若值为真，部件会被“锚固”在空间中，不会因为对其造成的碰撞和力而移动。若值为 true，部件将遵守一般物理学原理。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartMassless,,,If true the part will be massless when welded to another part that is not massless. The part will still have mass like a normal part if it is an assembly root part according to GetRootPart().,If true the part will be massless when welded to another part that is not massless. The part will still have mass like a normal part if it is an assembly root part according to GetRootPart().,true이면 파트가 질량이 없는 다른 파트에 용접될 때 질량을 가지지 않습니다. GetRootPart()에 따른 어셈블리 루트 파트인 경우에는 일반 파트처럼 계속 질량을 가집니다.,"Если переменная имеет значение true, то при сварке с другой деталью, которая имеет массу, деталь не будет обладать массой. Однако деталь будет иметь массу, как обычно, если она находится в сборке с корневой деталью согласно GetRootPart().",若值为 true，部件在接合至另一个非无质量的部件时将变为无质量。若部件是一个根据 GetRootPart() 确定的装配根部件，它仍会像一个正常部件一样具有质量。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartRootPriority,,,An integer from -127 to 127. Compares before other all other part properties besides massless for deciding which part is the assembly root part according to GetRootPart().,An integer from -127 to 127. Compares before other all other part properties besides massless for deciding which part is the assembly root part according to GetRootPart().,-127에서  127.  사이의 정수입니다. 어느 파트가 GetRootPart()에 따른 어셈블리 루트 파트인지 결정하기 위해 무질량 외에 다른 모든 파트 속성과 비교합니다.,"Целое число от -127 до 127. Сравнивает все свойства детали, кроме отсутствия массы, чтобы определить, какая часть является корневой деталью сборки согласно GetRootPart().",-127 到 127 之间的整数。在除无质量外的其他所有部件属性之前进行比较，以确定哪个部件是根据  GetRootPart() 确定的装配根部件。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartElasticity,,,"A float value ranging from 0.0f to 1.0f. Sets how much the Part will rebound against another. a value of 1 is like a superball, and 0 is like a lead block.","A float value ranging from 0.0f to 1.0f. Sets how much the Part will rebound against another. a value of 1 is like a superball, and 0 is like a lead block.",0.0f에서 1.0f 사이의 부동 소수점 값입니다. 파트가 다른 파트에 부딪혔을 때 튀어나오는 정도를 설정합니다. 값이 1이면 매우 빠르게 튀어나오고 값이 0이면 매우 느리게 튀어나옵니다.,"Плавающее значение в диапазоне от 0,0f до 1,0f. Определяет, насколько далеко деталь отскакивает от других. Значение 1 — это отскок с силой мяча, а 0 — как бетонный блок.",0.0f 到 1.0f 之间的浮点值。设置 Part 相互间的反弹系数。值为 1 时相当于橡皮球，值为 0 时相当于铅块。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartFriction,,,"A float value ranging from 0.0f to 1.0f. Sets how much the Part will be able to slide. a value of 1 is no sliding, and 0 is no friction, so infinite sliding.","A float value ranging from 0.0f to 1.0f. Sets how much the Part will be able to slide. a value of 1 is no sliding, and 0 is no friction, so infinite sliding.","0.0f에서 1.0f 사이의 부동 소수점 값입니다. 파트가 미끄러지는 정도를 설정합니다. 값이 1이면 미끄러지지 않고, 값이 0이면 마찰이 없어 무한히 미끄러집니다.","Плавающее значение в диапазоне от 0,0f до 1,0f. Определяет, насколько далеко деталь скользит. Значение 1 — без скольжения, а 0 — отсутствие трения и бесконечное скольжение.",0.0f 到 1.0f 之间的浮点值。设置 Part 的滑行能力。值为 1 时无法滑动，值为 0 时无摩擦力，即可以无限滑行。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartLocked,,,"Determines whether building tools (in-game and studio) can manipulate this Part.  If true, no editing allowed.  If false, editing is allowed.","Determines whether building tools (in-game and studio) can manipulate this Part.  If true, no editing allowed.  If false, editing is allowed.","제작 도구(게임 내 및 Studio)가 이 파트를 조작할 수 있는지 여부를 결정합니다. true이면 편집이 허용되지 않고, false이면 편집이 허용됩니다.","Определяет, могут ли строительные инструменты (внутриигровые и студийные) изменять эту деталь. Если true, редактирование не разрешается. Если false, редактирование разрешается.",决定建造工具 (游戏内和 Studio 中) 是否可操作此 Part。值为 true 时不允许编辑。值为 false 时允许编辑。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartCastShadow,,,Determines whether this Part casts a shadow.,Determines whether this Part casts a shadow.,이 파트가 그림자를 드리우는지 여부를 결정합니다.,"Определяет, отбрасывает ли эта деталь тень.",决定此 Part 是否投射阴影。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartMaterial,,,"Specifies the look and feel the Part should have.  Note: this does not define the color the Part is, see BrickColor for that. <a href='http://wiki.roblox.com/index.php/Material' target='_blank'>More info</a>","Specifies the look and feel the Part should have.  Note: this does not define the color the Part is, see BrickColor for that. <a href='http://wiki.roblox.com/index.php/Material' target='_blank'>More info</a>",파트의 모양과 느낌을 지정합니다. 참고: 이 설정은 파트의 색상에 영향을 주지 않습니다. 해당 내용은 BrickColor를 참조하세요. <a href='http://wiki.roblox.com/index.php/Material' target='_blank'>추가 정보</a>,"Определяет внешний вид и ощущения от прикосновения к детали. Примечание: не определяет цвет детали, для этого см. BrickColor. <a href='http://wiki.roblox.com/index.php/Material' target='_blank'>Узнать больше</a>",指定 Part 应有的外观和感觉。注: 不会定义 Part 的颜色，若需定义该值，请参阅 BrickColor。<a href='http://wiki.roblox.com/index.php/Material' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.BasePartReflectance,,,"Specifies how shiny the Part is. A value of 1 is completely reflective (chrome), while a value of 0 is no reflectance (concrete wall)","Specifies how shiny the Part is. A value of 1 is completely reflective (chrome), while a value of 0 is no reflectance (concrete wall)","파트가 빛나는 정도를 지정합니다. 값이 1이면 완전히 반사되고(크롬), 값이 0이면 전혀 반사되지 않습니다(콘크리트 벽).","Указание степени блеска детали. Значение 1 — это полное светоотражение (хром), а значение 0 — отсутствие отражения (бетонная стена).",指定 Part 的光泽度。值为 1 时完全反射 (铬)，值为 0 时无反射 (混凝土墙)
Studio.ReflectionMetadata.ReflectionMetadata.BasePartResizeIncrement,,,"Sets the value for the smallest change in size allowable by the Resize(NormalId, int) function.","Sets the value for the smallest change in size allowable by the Resize(NormalId, int) function.","Resize(NormalId, int) 함수가 허용하는 최소 크기 변경 값을 설정합니다.","Устанавливает наименьшее допустимое функцией Resize(NormalId, int) значение для изменения размера.","设置 Resize(NormalId, int) 函数允许改变尺寸的最小改动值。"
Studio.ReflectionMetadata.ReflectionMetadata.BasePartResizeableFaces,,,"Sets the value for the faces allowed to be resized by the Resize(NormalId, int) function.","Sets the value for the faces allowed to be resized by the Resize(NormalId, int) function.","Resize(NormalId, int) 함수로 크기 변경이 가능한 면의 값을 설정합니다.","Устанавливает значение для лиц, размер которых допустимо изменять с помощью функции Resize(NormalId, int).","设置 Resize(NormalId, int) 函数允许改变尺寸的面的值。"
Studio.ReflectionMetadata.ReflectionMetadata.BasePartTransparency,,,"Sets how visible an object is. A value of 1 makes the object invisible, while a value of 0 makes the object opaque.","Sets how visible an object is. A value of 1 makes the object invisible, while a value of 0 makes the object opaque.",개체의 가시성을 설정합니다. 값이 1이면 개체가 보이지 않게 되고 값이 0이면 불투명하게 됩니다.,"Устанавливает видимость объекта. Значение 1 делает объект невидимым, значение 0 делает его непрозрачным.",设置物体的可见程度。值为 1 时物体不可见，值为 0 时物体完全不透明。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartVelocity,,,"How fast the Part is traveling in studs/second. This property is NOT recommended to be modified directly, unless there is good reason.  Otherwise, try using a BodyForce to move a Part.","How fast the Part is traveling in studs/second. This property is NOT recommended to be modified directly, unless there is good reason.  Otherwise, try using a BodyForce to move a Part.",파트가 이동하는 속도(스터드/초)입니다. 이 속성은 합당한 이유가 없다면 직접 수정하지 않는 것이 좋습니다. 다른 경우에는 BodyForce를 사용하여 파트를 이동시키세요.,"Насколько быстро деталь перемещается в стойках в секунду. Это свойство НЕ рекомендуется изменять напрямую, если на то нет веских причин. В противном случае попробуйте использовать для перемещения детали BodyForce.",Part 的行进速度，以格/秒为单位。除非理由充分，否则不推荐直接修改此属性。请尝试使用 BodyForce 来移动 Part。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartPositionLocal,,,"Position relative to parent part, or global space if there is no parent.","Position relative to parent part, or global space if there is no parent.","부모 파트를 기준으로 한 위치, 또는 부모가 없는 경우에는 전역 공간입니다.","Положение относительно родительской детали или глобального пространства, если родительский элемент отсутствует.",相对父部件的位置，或无父部件时相对全局空间的位置。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartOrientationLocal,,,"Orientation relative to parent part, or global space if there is no parent.","Orientation relative to parent part, or global space if there is no parent.","부모 파트를 기준으로 한 방향, 또는 부모가 없는 경우에는 전역 공간입니다.","Ориентация относительно родительской детали или глобального пространства, если родительский элемент отсутствует.",相对父部件的朝向，或无父部件时相对全局空间的朝向。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartOrientation,,,"Rotation around X, Y, and Z axis.  Rotations applied in YXZ order.","Rotation around X, Y, and Z axis.  Rotations applied in YXZ order.","X, Y 및 Z 축을 중심으로 한 회전입니다. 회전은 YXZ 순서로 적용됩니다.","Вращение вокруг осей X, Y и Z. Вращение в порядке YXZ.",围绕 X、Y 和 Z 轴的旋转值。按 YXZ 顺序旋转。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartmakeJoints,,,"Creates the appropriate SurfaceJoints with all parts that are touching this Instance (including internal joints in the Instance, as in a Model).  This uses the SurfaceTypes defined on the surfaces of parts to create the appropriate welds. <a href='http://wiki.roblox.com/index.php/MakeJoints' target='_blank'>More info</a>","Creates the appropriate SurfaceJoints with all parts that are touching this Instance (including internal joints in the Instance, as in a Model).  This uses the SurfaceTypes defined on the surfaces of parts to create the appropriate welds. <a href='http://wiki.roblox.com/index.php/MakeJoints' target='_blank'>More info</a>",이 인스턴스와 접촉하는 모든 파트가 포함된 적절한 SurfaceJoints(인스턴스와 모델의 내부 조인트 포함)를 만듭니다. 이때 파트 표면에 정의된 SurfaceTypes를 사용하여 적절한 용접을 만듭니다. <a href='http://wiki.roblox.com/index.php/MakeJoints' target='_blank'>추가 정보</a>,"Создает соответствующие соединения SurfaceJoint со всеми деталями, которые касаются этого экземпляра (включая внутренние соединения в экземпляре, как в модели). Использует тип SurfaceType, определенный на поверхностях деталей для создания соответствующих швов. <a href='http://wiki.roblox.com/index.php/MakeJoints' target='_blank'>Узнать больше</a>",使用接触到此 Instance 的所有 Part 创建适当的 SurfaceJoint (包括如 Model 等 Instance 中的内部接头)。利用部件表面定义的 SurfaceType 来创建适当的接合。<a href='http://wiki.roblox.com/index.php/MakeJoints' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.BasePartBreakJoints,,,"Destroys SurfaceJoints with all parts that are touching this Instance (including internal joints in the Instance, as in a Model).","Destroys SurfaceJoints with all parts that are touching this Instance (including internal joints in the Instance, as in a Model).",이 인스턴스와 접촉하는 모든 파트가 포함된 적절한 SurfaceJoints(인스턴스와 모델의 내부 조인트 포함)를 파괴합니다.,"Уничтожает SurfaceJoints со всеми деталями, которые касаются данного экземпляра (включая внутренние соединения в экземпляре, как в модели).",销毁接触到此 Instance 的所有部件的 SurfaceJoint（包括 Instance 中的内部接头，如在 Model 中）。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartGetMass,,,"Returns a number that is the mass of this Instance.  Mass of a Part is immutable, and is changed only by the size of the Part.","Returns a number that is the mass of this Instance.  Mass of a Part is immutable, and is changed only by the size of the Part.",이 인스턴스의 질량을 숫자로 반환합니다. 파트의 질량은 변경할 수 없으며 파트의 크기에 의해서만 변경됩니다.,"Возвращает число, равное массе этого экземпляра. Масса детали неизменна и изменяется только с размером детали.",返回一个数字，该数字是此实例的质量。部件的质量是不变的，并且仅通过部件的大小进行更改。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartResize,,,"Resizes a Part in the direction of the face defined by 'NormalId', by the amount specified by 'deltaAmount'. If the operation will expand the part to intersect another Instance, the part will not resize at all.  Return true if the call is successful, false otherwise.","Resizes a Part in the direction of the face defined by 'NormalId', by the amount specified by 'deltaAmount'. If the operation will expand the part to intersect another Instance, the part will not resize at all.  Return true if the call is successful, false otherwise.","'NormalId'에서 정의된 면 방향으로 'deltaAmount'만큼 파트의 크기를 변경합니다. 이 작업으로 인해 파트가 다른 인스턴스와 교차되도록 확장되면 파트의 크기가 변경되지 않습니다. 호출이 성공하면 true를 반환하고, 실패하면 false를 반환합니다.","Изменяет размер детали в направлении грани, заданной параметром NormalId, на величину, заданную параметром deltaAmount. Если при этом деталь расширяется и пересекается с другим экземпляром, размер детали не изменяется. В случае успешного вызова возвращается true, в противном случае false.",根据 'NormalId' 定义的面的方向，根据 'deltaAmount' 指定的数值调整 Part 的大小。若此操作会拓展部件至其与其他 Instance 相交，则部件不会被调整大小。若调用成功返回 true，否则返回 false。
Studio.ReflectionMetadata.ReflectionMetadata.BasePartLocalSimulationTouched,,,Deprecated. Use Touched instead,Deprecated. Use Touched instead,더 이상 사용되지 않습니다. Touched를 대신 사용하세요,Устарело. Используйте Touched,已过时。请改用 Touched
Studio.ReflectionMetadata.ReflectionMetadata.BasePartStoppedTouching,,,Deprecated. Use TouchEnded instead,Deprecated. Use TouchEnded instead,더 이상 사용되지 않습니다. TouchEnded를 대신 사용하세요,Устарело. Используйте TouchEnded,已过时。请改用 TouchEnded
Studio.ReflectionMetadata.ReflectionMetadata.BasePartTouchEnded,,,Fired when the part stops touching another part,Fired when the part stops touching another part,파트가 다른 파트에 닿지 않게 되면 발생합니다.,"Возникает, когда деталь перестает касаться другой детали",当部件停止接触其他部件时触发
Studio.ReflectionMetadata.ReflectionMetadata.Part,,,A plastic building block - the fundamental component of ROBLOX,A plastic building block - the fundamental component of ROBLOX,플라스틱 건설 블록 - ROBLOX의 기본 구성 요소,Пластиковый строительный блок — основной компонент системы ROBLOX,一块塑料积木— ROBLOX 的基本组件
Studio.ReflectionMetadata.ReflectionMetadata.TrussPart,,,An extendable building truss,An extendable building truss,확장 가능한 건물 트러스,Удлиняемая стропильная балка,可扩展的建筑桁架
Studio.ReflectionMetadata.ReflectionMetadata.WedgePart,,,A Wedge Part,A Wedge Part,Wedge 파트,"Деталь ""клин""",一个楔形部件
Studio.ReflectionMetadata.ReflectionMetadata.PrismPart,,,A Prism Part,A Prism Part,Prism 파트,"Деталь ""призма""",一个棱形部件
Studio.ReflectionMetadata.ReflectionMetadata.PyramidPart,,,A Pyramid Part,A Pyramid Part,Pyramid 파트,"Деталь ""пирамида""",一个金字塔部件
Studio.ReflectionMetadata.ReflectionMetadata.ParallelRampPart,,,A ParallelRamp Part,A ParallelRamp Part,ParallelRamp 파트,Деталь ParallelRamp,一个并行斜坡部件
Studio.ReflectionMetadata.ReflectionMetadata.RightAngleRampPart,,,A RightAngleRamp Part,A RightAngleRamp Part,RightAngleRamp 파트,Деталь RightAngleRamp,一个右角斜坡部件
Studio.ReflectionMetadata.ReflectionMetadata.CornerWedgePart,,,A CornerWedge Part,A CornerWedge Part,CornerWedge 파트,Деталь CornerWedge,一个转角楔形部件
Studio.ReflectionMetadata.ReflectionMetadata.PlayerGui,,,A container instance that syncs data between a single player and the server.  ScreenGui objects that are placed in this container will be shown to the Player parent only,A container instance that syncs data between a single player and the server.  ScreenGui objects that are placed in this container will be shown to the Player parent only,단일 플레이어와 서버 간에 데이터를 동기화하는 컨테이너 인스턴스입니다. 이 컨테이너에 배치된 ScreenGui 개체는 플레이어 부모에게만 표시됩니다,"Экземпляр контейнера, который синхронизирует данные между одним игроком и сервером. Объекты ScreenGui, которые находятся в этом контейнере, будут показаны только родительскому элементу игрока",一个容器实例，用于在单个玩家和服务器之间同步数据。放置在此容器中的 ScreenGui 对象只会对 Player 父类显示
Studio.ReflectionMetadata.ReflectionMetadata.PlayerGuiSelectionImageObject,,,"Overrides the default selection adornment (used for gamepads). For best results, this should point to a GuiObject.","Overrides the default selection adornment (used for gamepads). For best results, this should point to a GuiObject.",기본 선택 장식을 재정의합니다(게임 패드에 사용). 최상의 결과를 얻으려면 GuiObject를 가리켜야 합니다.,Переопределяет графические элементы выделения по умолчанию (используемые для геймпадов). Для наилучших результатов должно указывать на GuiObject.,覆盖默认选择装饰 (用于游戏手柄)。为了获得最佳效果，应指向一个 GuiObject。
Studio.ReflectionMetadata.ReflectionMetadata.PlayerScripts,,,A container instance that contains LocalScripts.  LocalScript objects that are placed in this container will be exectue only when a Player is the parent.,A container instance that contains LocalScripts.  LocalScript objects that are placed in this container will be exectue only when a Player is the parent.,LocalScripts가 들어 있는 컨테이너 인스턴스입니다. 이 컨테이너에 배치된 LocalScript 개체는 플레이어가 부모인 경우에만 실행됩니다.,"Экземпляр контейнера с LocalScripts. Объекты LocalScript, расположенные в этом контейнере, будут выполняться только в том случае, если родительским элементом является Player.",一个包含 LocalScript 的容器实例。放置在此容器中的 LocalScript 对象只会在作为 Player 的子类时执行。
Studio.ReflectionMetadata.ReflectionMetadata.StarterPlayerScripts,,,A container instance that contains LocalScripts.  LocalScript objects that are placed in this container will be copied to new Players on startup.,A container instance that contains LocalScripts.  LocalScript objects that are placed in this container will be copied to new Players on startup.,LocalScripts가 들어 있는 컨테이너 인스턴스입니다. 이 컨테이너에 배치된 LocalScript 개체는 시작 시 새로운 플레이어에게 복사됩니다.,"Экземпляр контейнера с LocalScripts. Объекты LocalScript, расположенные в этом контейнере, будут скопированы в новые элементы Player при запуске.",一个包含 LocalScript 的容器实例。放置在此容器中的 LocalScript 对象会在启动时复制给新玩家。
Studio.ReflectionMetadata.ReflectionMetadata.StarterCharacterScripts,,,A container instance that contains LocalScripts.  LocalScript objects that are placed in this container will be copied to new characters on startup.,A container instance that contains LocalScripts.  LocalScript objects that are placed in this container will be copied to new characters on startup.,LocalScripts가 들어 있는 컨테이너 인스턴스입니다. 이 컨테이너에 배치된 LocalScript 개체는 시작 시 새로운 캐릭터에게 복사됩니다.,"Экземпляр контейнера c LocalScripts. Объекты LocalScript, расположенные в этом контейнере, будут скопированы новым персонажам при запуске.",一个包含 LocalScript 的容器实例。放置在此容器中的 LocalScript 对象会在启动时复制给新角色。
Studio.ReflectionMetadata.ReflectionMetadata.GuiMain,,,"Deprecated, please use ScreenGui","Deprecated, please use ScreenGui",더 이상 사용할 수 없습니다. ScreenGui를 사용하세요.,Устарело. Используйте ScreenGui,已过时。请改用 ScreenGui
Studio.ReflectionMetadata.ReflectionMetadata.LayerCollector,,,"The base class of ScreenGui, BillboardGui, and SurfaceGui.","The base class of ScreenGui, BillboardGui, and SurfaceGui.","ScreenGui, BillboardGui 및 SurfaceGui의 기본 클래스입니다.","Базовый класс ScreenGui, BillboardGui и SurfaceGui.",ScreenGui、BillboardGui 和 SurfaceGui 的基类。
Studio.ReflectionMetadata.ReflectionMetadata.ScreenGui,,,The core GUI object on which tools are built.  Add Frames/Labels/Buttons to this object to have them rendered as a 2D overlay,The core GUI object on which tools are built.  Add Frames/Labels/Buttons to this object to have them rendered as a 2D overlay,도구가 제작되는 코어 GUI 개체.  이 개체에 프레임/레이블/버튼을 추가해 2D 오버레이로 렌더링,"Основной объект графического интерфейса, на котором построены инструменты. Добавьте к этому объекту рамки/метки/кнопки, чтобы они отображались в виде 2D-наложений.",打造工具所需的核心 GUI 对象。为对象添加帧/标签/按钮，将它们渲染为 2D 覆盖
Studio.ReflectionMetadata.ReflectionMetadata.FunctionalTest,,,Deprecated. Use TestService instead,Deprecated. Use TestService instead,더 이상 사용되지 않습니다. TestService를 대신 사용하세요,Устарело. Используйте TestService,已过时。请改用 TestService
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGui,,,A GUI that adorns an object in the 3D world.  Add Frames/Labels/Buttons to this object to have them rendered while attached to a 3D object,A GUI that adorns an object in the 3D world.  Add Frames/Labels/Buttons to this object to have them rendered while attached to a 3D object,3D 세계에서 개체를 장식하는 GUI. 이 개체에 프레임/레이블/버튼을 추가해 3D 객체에 연결된 상태에서 렌더링되도록 하세요.,"Графический интерфейс оформления объекта в 3D-мире. Добавьте рамки/метки/кнопки, чтобы они отображались при присоединении к 3D-объекту.",用于装饰 3D 世界中的对象的 GUI。为此对象添加 Frame/Label/Button，以便在附加到 3D 对象时进行渲染
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiAdornee,,,"The Object the billboard gui uses as its base to render from.  Currently, the only way to set this property is thru a script, and must exist in the workspace.  This will only render if the object assigned derives from BasePart.","The Object the billboard gui uses as its base to render from.  Currently, the only way to set this property is thru a script, and must exist in the workspace.  This will only render if the object assigned derives from BasePart.","빌보드 GUI가 렌더링할 기준으로 사용하는 개체입니다. 현재 이 속성을 설정하는 유일한 방법은 스크립트를 통하는 것이며, 작업 공간에 존재해야 합니다. 지정된 개체가 BasePart에서 파생된 경우에만 렌더링됩니다.","Объект, который используется графическим интерфейсом рекламной панели как источник отображения. В настоящее время установить это свойство можно только с помощью скрипта, и оно должно существовать в рабочей области. Отображается, только если назначенный объект является производным от BasePart.",排行榜 GUI 用作渲染的基础 Object。目前只能通过脚本设置此属性，且必须存在于工作区中。只有当指定对象派生自 BasePart 时才会进行渲染。
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiAbsolutePosition,,,"A read-only Vector2 value that is the GuiObject's current position (x,y) in pixel space, from the top left corner of the GuiObject.","A read-only Vector2 value that is the GuiObject's current position (x,y) in pixel space, from the top left corner of the GuiObject.","GuiObject의 왼쪽 상단 모서리의 픽셀 공간에서 GuiObject의 현재 위치(x,y)인 읽기 전용 Vector2 값입니다.","Значение Vector2 только для чтения, которое является текущей позицией GuiObject (X,Y) в пиксельном пространстве от левого верхнего угла GuiObject.","一个表明 GuiObject 在像素空间中的当前位置 (x, y) 的只读 Vector2 值，以 GuiObject 的左上角为准。"
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiAbsoluteSize,,,"A read-only Vector2 value that is the GuiObject's current size (width, height) in pixel space.","A read-only Vector2 value that is the GuiObject's current size (width, height) in pixel space.","픽셀 공간에서 GuiObject의 현재 크기(너비, 높이)인 읽기 전용 Vector2 값입니다.","Значение Vector2 только для чтения, которое является текущим размером GuiObject (ширина, высота) в пиксельном пространстве.",一个表明 GuiObject 在像素空间中的当前大小 (宽，高) 的只读 Vector2 值。
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiActive,,,"If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.","If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.",true인 경우 GuiObject는 마우스 이벤트를 발생시키며 계층 하위의 모든 GuiObject로 전달합니다. false이면 해당 기능이 없습니다.,"Если значение true, этот GuiObject может запускать события мыши и передавать их любым GuiObject в нижних слоях. Значение false не будет делать ни того, ни другого.",若值为 true，此 GuiObject 可触发鼠标事件并将其传递给下层 GuiObject，若值为否则无上述功能。
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiAlwaysOnTop,,,"If true, billboard gui does not get occluded by 3D objects, but always renders on the screen.","If true, billboard gui does not get occluded by 3D objects, but always renders on the screen.","true인 경우, 빌보드 GUI는 3D 개체에 의해 가려지지 않지만 항상 화면에 렌더링됩니다.","Если значение true, интерфейс рекламной панели не загораживается 3D-объектами, а всегда отображается на экране.",若值为 true，排行榜 GUI 不会被 3D 对象遮挡，而是始终渲染在屏幕上。
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiEnabled,,,"If true, billboard gui will render, otherwise rendering will be skipped.","If true, billboard gui will render, otherwise rendering will be skipped.","true일 경우 빌보드 GUI가 렌더링되고, 그렇지 않으면 렌더링을 건너뜁니다.","Если значение true, интерфейс рекламной панели отображается. В противном случае отображение не происходит.",若值为 true，排行榜 GUI 会被渲染，否则将会跳过渲染。
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiExtentsOffset,,,"A Vector3 (x,y,z) defined in studs that will offset the gui from the extents of the 3d object it is rendering from.","A Vector3 (x,y,z) defined in studs that will offset the gui from the extents of the 3d object it is rendering from.","렌더링하는 3D 개체 범위에서 GUI를 오프셋하는 스터드로 정의되는 Vector3(x,y,z)입니다.","Vector3 (X,Y,Z), заданный в стойках, который смещает интерфейс с 3D-объекта, с которого выполняется отображение.","一个定义 GUI 与其渲染的 3D 对象范围的相对偏移值的 Vector3 (x,y,z)，以格为单位。"
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiPlayerToHideFrom,,,Specifies a Player that the BillboardGui will not render to.,Specifies a Player that the BillboardGui will not render to.,BillboardGui가 렌더링하지 않을 플레이어를 지정합니다.,"Указывает игрока, для которого не отображается BillboardGui.",指定 BillboardGui 不会渲染的 Player。
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiStudsOffset,,,"A Vector3 (x,y,z) defined in studs that will offset the gui from the centroid of the 3d object it is rendering from","A Vector3 (x,y,z) defined in studs that will offset the gui from the centroid of the 3d object it is rendering from","렌더링하는 3D 개체 중심에서 GUI를 오프셋하는 스터드로 정의되는 Vector3(x,y,z)입니다.","Vector3 (X,Y,Z), заданный в стойках, который смещает интерфейс с центроида 3D-объекта, с которого выполняется отображение","一个定义 GUI 与其渲染的 3D 对象质心的相对偏移值的 Vector3 (x,y,z)，以格为单位"
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiSizeOffset,,,"A Vector2 (x,y) defined in studs that will offset the gui size from it's current size.","A Vector2 (x,y) defined in studs that will offset the gui size from it's current size.","현재 크기에서 GUI 크기를 오프셋하는 스터드로 정의되는 Vector2(x,y,z)입니다.","Vector2 (X,Y), заданный в стойках, который смещает размер интерфейса по отношению к текущему размеру.","一个定义 GUI 与其当前大小的相对偏移值的 Vector2 (x,y)，以格为单位。"
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiSize,,,A UDim2 value describing the size of the BillboardGui. More information on UDim2 is available <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>here</a>. Relative values are defined as one-to-one with studs.,A UDim2 value describing the size of the BillboardGui. More information on UDim2 is available <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>here</a>. Relative values are defined as one-to-one with studs.,BillboardGui 크기를 설명하는 UDim2 값입니다. UDim2에 대한 추가 정보는 <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>여기서</a> 확인할 수 있습니다. 상대 값은 스터드로 1대1 정의됩니다.,"Значение UDim2, описывающее размер BillboardGui. Дополнительная информация о UDim2 доступна <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>здесь</a>. Относительные значения определяются стойками как одно к одному.",一个描述 BillboardGui 大小的 UDim2 值。更多关于 UDim2 的信息请参阅<a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>这里</a>。所定义的相关值与格一一对应。
Studio.ReflectionMetadata.ReflectionMetadata.BillboardGuiLightInfluence,,,"Specifies the amount of influence lighting has on the billboard gui. A value of 0 is unlit, 1 is fully lit. Fractional values blend from unlit to lit.","Specifies the amount of influence lighting has on the billboard gui. A value of 0 is unlit, 1 is fully lit. Fractional values blend from unlit to lit.",조명이 빌보드 GUI에 미치는 영향력을 지정합니다. 값이 0이면 조명을 비추지 않고 값이 1이면 조명을 완전히 비춥니다. 분수 값은 조명을 비추지 않음(unlit)과 비춤(lit) 간에 혼합됩니다.,"Указание степени влияния освещения на интерфейс рекламной панели. Значение 0 — не освещен, 1 — полностью освещен. Дробные значения означают переход от неосвещенного к освещенному.",指定照明对排行榜 GUI 的影响力值。值为 0 时完全熄灭，值为 1 时完全点亮。中间的分数值表示从完全熄灭到完全点亮之间的状态。
Studio.ReflectionMetadata.ReflectionMetadata.SurfaceGui,,,Renders its contained GuiObjects flat against the face of a part.,Renders its contained GuiObjects flat against the face of a part.,포함된 GuiObjects 평면을 파트의 면에 대해 렌더링합니다.,Отображает содержащиеся GuiObject на лицевой стороне детали.,渲染其包含的平放在一个部件的面上的 GuiObject。
Studio.ReflectionMetadata.ReflectionMetadata.SurfaceGuiAdornee,,,"The Object the surface gui uses as its base to render from.  Currently, the only way to set this property is thru a script, and must exist in the workspace.  This will only render if the object assigned derives from BasePart.","The Object the surface gui uses as its base to render from.  Currently, the only way to set this property is thru a script, and must exist in the workspace.  This will only render if the object assigned derives from BasePart.","표면 GUI가 렌더링할 기준으로 사용하는 개체입니다. 현재 이 속성을 설정하는 유일한 방법은 스크립트를 통하는 것이며, 작업 공간에 존재해야 합니다. 지정된 개체가 BasePart에서 파생된 경우에만 렌더링됩니다.","Объект, который использует интерфейс поверхности в качестве базы для отображения. В настоящее время установить это свойство можно только с помощью скрипта, и оно должно существовать в рабочей области. Отображается, только если назначенный объект является производным от BasePart.",被此表面 GUI 用作渲染基础的 Object。目前只能通过脚本设置此属性，且必须存在于工作区。只有当指定对象派生自 BasePart 时才会进行渲染。
Studio.ReflectionMetadata.ReflectionMetadata.SurfaceGuiActive,,,"If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.","If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.",true인 경우 GuiObject는 마우스 이벤트를 발생시키며 계층 하위의 모든 GuiObject로 전달합니다. false이면 해당 기능이 없습니다.,"Если значение true, этот GuiObject может запускать события мыши и передавать их любым GuiObject в нижних слоях. Значение false не будет делать ни того, ни другого.",若值为 true，此 GuiObject 可触发鼠标事件并将其传递给下层 GuiObject，若值为 false 则无上述功能。
Studio.ReflectionMetadata.ReflectionMetadata.SurfaceGuiEnabled,,,"If true, surface gui will render, otherwise rendering will be skipped.","If true, surface gui will render, otherwise rendering will be skipped.","true일 경우 표면 GUI가 렌더링되고, 그렇지 않으면 렌더링을 건너뜁니다.","Если значение true, то выполняется отображение поверхностей. В противном случае отображение пропускается.",若值为 true，表面 GUI 会被渲染，否则将会跳过渲染。
Studio.ReflectionMetadata.ReflectionMetadata.SurfaceGuiLightInfluence,,,"Specifies the amount of influence lighting has on the surface gui. A value of 0 is unlit, 1 is fully lit. Fractional values blend from unlit to lit.","Specifies the amount of influence lighting has on the surface gui. A value of 0 is unlit, 1 is fully lit. Fractional values blend from unlit to lit.",조명이 표면 GUI에 미치는 영향력을 지정합니다. 값이 0이면 조명을 비추지 않고 값이 1이면 조명을 완전히 비춥니다. 분수 값은 조명을 비추지 않음(unlit)과 비춤(lit) 간에 혼합됩니다.,"Определяет степень влияния освещения на интерфейс поверхности. Значение 0 — не освещен, значение 1 — полностью освещен. Дробные значения означают переход от неосвещенного к освещенному.",指定照明对表面 GUI 的影响力值。值为 0 时完全熄灭，值为 1 时完全点亮。中间的分数值表示从完全熄灭到完全点亮之间的状态。
Studio.ReflectionMetadata.ReflectionMetadata.GuiBase2dAbsolutePosition,,,"A read-only Vector2 value that is the GuiObject's current position (x,y) in pixel space, from the top left corner of the GuiObject.","A read-only Vector2 value that is the GuiObject's current position (x,y) in pixel space, from the top left corner of the GuiObject.","GuiObject의 왼쪽 상단 모서리의 픽셀 공간에서 GuiObject의 현재 위치(x,y)인 읽기 전용 Vector2 값입니다.","Значение Vector2 только для чтения, которое является текущей позицией GuiObject (X,Y) в пиксельном пространстве от левого верхнего угла GuiObject.","一个表明 GuiObject 在像素空间中的当前位置 (x, y) 的只读 Vector2 值，以 GuiObject 的左上角为准。"
Studio.ReflectionMetadata.ReflectionMetadata.GuiBase2dAbsoluteSize,,,"A read-only Vector2 value that is the GuiObject's current size (width, height) in pixel space.","A read-only Vector2 value that is the GuiObject's current size (width, height) in pixel space.","픽셀 공간에서 GuiObject의 현재 크기(너비, 높이)인 읽기 전용 Vector2 값입니다.","Значение Vector2 только для чтения, которое является текущим размером GuiObject (ширина, высота) в пиксельном пространстве.",一个表明 GuiObject 在像素空间中的当前大小 (宽，高) 的只读 Vector2 值。
Studio.ReflectionMetadata.ReflectionMetadata.InputObject,,,"An object that describes a particular user input, such as mouse movement, touches, keyboard, and more.","An object that describes a particular user input, such as mouse movement, touches, keyboard, and more.","마우스 이동, 터치, 키보드 등과 같은 특정 사용자 입력을 설명하는 개체.","Объект, описывающий определенный пользовательский ввод, например движение мыши, касание, нажатие клавиши и другое.",一个描述特定用户输入的对象，如鼠标移动、触碰、键盘等。
Studio.ReflectionMetadata.ReflectionMetadata.InputObjectUserInputType,,,"An enum that describes what kind of input this object is describing (mousebutton, touch, etc.).  See Enum.UserInputType for more info.","An enum that describes what kind of input this object is describing (mousebutton, touch, etc.).  See Enum.UserInputType for more info.","이 개체가 설명하는 입력의 종류를 설명하는 열거형(마우스 버튼, 터치 등). 자세한 내용은 Enum.UserInputType을 참조하세요.","Перечень, который описывает, какой ввод описывается данным объектом (кнопка мыши, касание и т. д.). Для получения дополнительной информации см. раздел Enum.UserInputType.",一个描述此对象描述的输入类型 (鼠标按钮、触碰等) 的枚举。更多信息请参阅 Enum.UserInputType。
Studio.ReflectionMetadata.ReflectionMetadata.InputObjectUserInputState,,,"An enum that describes what state of a particular input (touch began, touch moved, touch ended, etc.). See Enum.UserInputState for more info.","An enum that describes what state of a particular input (touch began, touch moved, touch ended, etc.). See Enum.UserInputState for more info.","특정 입력 상태(터치 시작, 터치 이동, 터치 종료 등)를 설명하는 열거형. 자세한 내용은 Enum.UserInputState를 참조하세요.","Перечень, который описывает состояние конкретного ввода (начало касания, перемещение, конец касания и т. д.). Для получения дополнительной информации см. раздел Enum.UserInputState.",一个描述特定输入的状态 (触碰开始、触碰移动、触碰结束等) 的枚举。更多信息请参阅 Enum.UserInputState。
Studio.ReflectionMetadata.ReflectionMetadata.InputObjectPosition,,,"A Vector3 value that describes a positional value of this input. For mouse and touch input, this is the screen position of the mouse/touch, described in the x and y components. For mouse wheel input, the z component describes whether the wheel was moved forward or backward.","A Vector3 value that describes a positional value of this input. For mouse and touch input, this is the screen position of the mouse/touch, described in the x and y components. For mouse wheel input, the z component describes whether the wheel was moved forward or backward.",이 입력의 위치 값을 설명하는 Vector3 값입니다. 마우스 및 터치 입력의 경우 x 및 y 구성 요소에 설명된 마우스/터치의 화면 위치입니다. 마우스 휠 입력의 경우 z 구성 요소는 휠이 앞으로 또는 뒤로 움직였는지 설명합니다.,"Значение Vector3, описывающее позиционное значение этого ввода. Для мыши и сенсорного ввода это положение курсора и место касания, описанное в компонентах X и Y. Для колесика мыши компонент Z описывает прокрутку вперед или назад.",一个描述此输入的位置值的 Vector3 值。针对鼠标和触碰输入，给出的是鼠标或触碰的屏幕位置，存放于 x 和 y 值中。针对鼠标滚轮输入， z 值描述滚轮的前滚或后滚。
Studio.ReflectionMetadata.ReflectionMetadata.InputObjectKeyCode,,,"An enum that describes what kind of input is being pressed. For types of input like Keyboard, this describes what key was pressed. For input like mousebutton, this provides no additional information.","An enum that describes what kind of input is being pressed. For types of input like Keyboard, this describes what key was pressed. For input like mousebutton, this provides no additional information.",어떤 종류의 입력 버튼을 눌렀는지 설명하는 열거형. 키보드와 같은 입력 유형의 경우 어떤 키를 눌렀는지 설명합니다. 마우스 버튼과 같은 입력의 경우 추가 정보가 제공되지 않습니다.,"Перечисление (enum), описывающее используемый типа ввода. Например, для клавиатуры описывается, какая клавиша нажата. Для нажатия кнопки мыши не предоставляется никакой дополнительной информации.",一个描述此输入按键种类的枚举。针对键盘输入，描述按下的按键。针对鼠标按钮输入，不提供其他额外信息。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectTweenPosition,,,Smoothly moves a GuiObject from its current position to 'endPosition'. The only required argument is 'endPosition'. <a href='http://wiki.roblox.com/index.php/TweenPosition' target='_blank'>More info</a>,Smoothly moves a GuiObject from its current position to 'endPosition'. The only required argument is 'endPosition'. <a href='http://wiki.roblox.com/index.php/TweenPosition' target='_blank'>More info</a>,GuiObject를 현재 위치에서 'endPosition'으로 부드럽게 이동합니다. 유일한 필수 인수는 'endPosition'입니다. <a href='http://wiki.roblox.com/index.php/TweenPosition' target='_blank'>추가 정보</a>,Плавно перемещает GuiObject из текущей позиции в endPosition. Единственный необходимый аргумент — endPosition. <a href='http://wiki.roblox.com/index.php/TweenPosition' target='_blank'>Узнать больше</a>,将一个 GuiObject 从当前位置平滑地移动至 'endPosition'。唯一的必要参数为 'endPosition'。<a href='http://wiki.roblox.com/index.php/TweenPosition' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectTweenSize,,,Smoothly translates a GuiObject's current size to 'endSize'. The only required argument is 'endSize'. <a href='http://wiki.roblox.com/index.php/TweenSize' target='_blank'>More info</a>,Smoothly translates a GuiObject's current size to 'endSize'. The only required argument is 'endSize'. <a href='http://wiki.roblox.com/index.php/TweenSize' target='_blank'>More info</a>,GuiObject의 현재 크기를 'endSize'로 부드럽게 변환합니다. 유일한 필수 인수는 'endSize'입니다. <a href='http://wiki.roblox.com/index.php/TweenSize' target='_blank'>추가 정보</a>,Плавно переводит текущий размер GuiObject к значению endSize. Единственный необходимый аргумент — endSize. <a href='http://wiki.roblox.com/index.php/TweenSize' target='_blank'>Узнать больше</a>,将一个 GuiObject 从当前大小平滑地形变至 'endSize'。唯一的必要参数为 'endSize'。<a href='http://wiki.roblox.com/index.php/TweenSize' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectTweenSizeAndPosition,,,"Smoothly translates a GuiObject's current size to 'endSize', and also smoothly translates the GuiObject's current position to 'endPosition'. The only required arguments are 'endSize' and 'endPosition'. <a href='http://wiki.roblox.com/index.php/TweenSizeAndPosition' target='_blank'>More info</a>","Smoothly translates a GuiObject's current size to 'endSize', and also smoothly translates the GuiObject's current position to 'endPosition'. The only required arguments are 'endSize' and 'endPosition'. <a href='http://wiki.roblox.com/index.php/TweenSizeAndPosition' target='_blank'>More info</a>",GuiObject의 현재 크기를 'endSize'로 부드럽게 변환하고 GuiObject의 현재 위치를 'endPosition'으로 부드럽게 변경합니다. 유일한 필수 인수는 'endSize'및 'endPosition'입니다. <a href='http://wiki.roblox.com/index.php/TweenSizeAndPosition' target='_blank'>추가 정보</a>,"Плавно переводит текущий размер GuiObject к значению endSize, а также плавно перемещает GuiObject из текущей позиции в endPosition. Единственными необходимыми аргументами являются endSize и endPosition. <a href='http://wiki.roblox.com/index.php/TweenSizeAndPosition' target='_blank'>Узнать больше</a>",将一个 GuiObject 从当前大小平滑地形变至 'endSize'，并将其从当前位置平滑地移动至 'endPosition'。唯一的必要参数为 'endSize' 和 'endPosition'。<a href='http://wiki.roblox.com/index.php/TweenSizeAndPosition' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectActive,,,"If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.","If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.",true인 경우 GuiObject는 마우스 이벤트를 발생시키며 계층 하위의 모든 GuiObject로 전달합니다. false이면 해당 기능이 없습니다.,"Если значение true, этот GuiObject может запускать события мыши и передавать их любым GuiObject в нижних слоях. Значение false не будет делать ни того, ни другого.",若值为 true，此 GuiObject 可触发鼠标事件并将其传递给下层 GuiObject，若值为 false 则无上述功能。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectBackgroundColor3,,,A Color3 value that specifies the background color for the GuiObject. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.,A Color3 value that specifies the background color for the GuiObject. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.,GuiObject의 배경색을 지정하는 Color3 값. Style 속성(모든 GuiObject에서 찾을 수 없음)이 사용자 정의 이외의 것으로 설정되는 경우 이 값은 무시됩니다.,"Значение Color3, которое определяет цвет фона для GuiObject. Это значение игнорируется, если свойство Style (имеющееся не во всех GuiObject) имеет значение, отличное от пользовательского.",一个为 GuiObject 指定背景色的 Color3 值。若 Style 属性 (并非在所有 GuiObject 中都存在) 为非 Custom 的值，则此数值将被忽略。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectBackgroundTransparency,,,A number value that specifies how transparent the background of the GuiObject is. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.,A number value that specifies how transparent the background of the GuiObject is. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.,GuiObject의 배경이 얼마나 투명한지 지정하는 숫자 값. Style 속성(모든 GuiObject에서 찾을 수 없음)이 사용자 정의 이외의 것으로 설정되는 경우 이 값은 무시됩니다.,"Значение, которое определяет, насколько прозрачен фон GuiObject. Это значение игнорируется, если свойство Style (имеющееся не во всех GuiObject) имеет значение, отличное от пользовательского.",一个为 GuiObject 指定背景透明度的数值。若 Style 属性 (并非在所有 GuiObject 中都存在) 为非 Custom 的值，则此数值将被忽略。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectBorderColor3,,,A Color3 value that specifies the color of the outline of the GuiObject. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.,A Color3 value that specifies the color of the outline of the GuiObject. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.,GuiObject의 윤곽선 색상을 지정하는 Color3 값. Style 속성(모든 GuiObject에서 찾을 수 없음)이 사용자 정의 이외의 것으로 설정되는 경우 이 값은 무시됩니다.,"Значение Color3, которое определяет цвет контура GuiObject. Это значение игнорируется, если свойство Style (имеющееся не во всех GuiObject) имеет значение, отличное от пользовательского.",一个为 GuiObject 指定轮廓颜色的 Color3 值。若 Style 属性 (并非在所有 GuiObject 中都存在) 为非 Custom 的值，则此数值将被忽略。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectBorderSizePixel,,,"A number value that specifies the thickness (in pixels) of the outline of the GuiObject. Currently this value can only be set to either 0 or 1, any other number has no effect. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.","A number value that specifies the thickness (in pixels) of the outline of the GuiObject. Currently this value can only be set to either 0 or 1, any other number has no effect. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.",GuiObject 윤곽선 두께를 지정하는 숫자 값(픽셀). 현재 이 값은 0 또는 1로만 설정할 수 있으며 다른 숫자는 유효하지 않습니다. Style 속성(모든 GuiObject에서 찾을 수 없음)이 사용자 정의 이외의 것으로 설정되는 경우 이 값은 무시됩니다.,"Значение, которое определяет толщину (в пикселях) контура GuiObject. В настоящее время это значение может быть равно 0 или 1, любое другое число не имеет эффекта. Это значение игнорируется, если свойство Style (имеющееся не во всех GuiObject) имеет значение, отличное от пользовательского.",一个为 GuiObject 指定轮廓粗细的数值 (以像素为单位)。目前此值只能被设为 0 或 1，任何其他数字均无效。若 Style 属性 (并非在所有 GuiObject 中都存在) 为非 Custom 的值，则此数值将被忽略。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectClipsDescendants,,,"If set to true, any descendants of this GuiObject will only render if contained within it's borders. If set to false, all descendants will render regardless of position.","If set to true, any descendants of this GuiObject will only render if contained within it's borders. If set to false, all descendants will render regardless of position.",true로 설정하면 이 GuiObject의 하위 항목은 해당 테두리 내에 포함된 경우에만 렌더링됩니다. false로 설정하면 위치에 관계없이 모든 하위 항목이 렌더링됩니다.,"Если true, любые потомки этого GuiObject будут отображаться только в пределах его границ. Если false, то все потомки будут отображаться независимо от положения.",若值设为 true，此 GuiObject 的所有后代只有在其边框内才会被渲染。若值设为 false，所有后代无论位置均会被渲染。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectDraggable,,,"If true, allows a GuiObject to be dragged by the user's mouse. The events 'DragBegin' and 'DragStopped' are fired when the appropriate action happens, and only will fire on Draggable=true GuiObjects.","If true, allows a GuiObject to be dragged by the user's mouse. The events 'DragBegin' and 'DragStopped' are fired when the appropriate action happens, and only will fire on Draggable=true GuiObjects.","true이면 사용자 마우스로 GuiObject를 드래그할 수 있습니다. 적절한 작업이 실행되면 'DragBegin'및 'DragStopped' 이벤트가 발생하며, 이는 Draggable=true인 GuiObject에서만 발생합니다.","Если true, позволяет перетаскивание GuiObject мышью. События DragBegin и DragStopped срабатывают, когда происходит соответствующее действие, и только для GuiObjects со значением Draggable=true.",若值为 true，允许 GuiObject 被用户的鼠标拖动。'DragBegin' 和 'DragStopped' 事件将会在相应操作发生时触发，且只会在 Draggable=true 的 GuiObject 上触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectSize,,,A UDim2 value describing the size of the GuiObject on screen in both absolute and relative coordinates. More information on UDim2 is available <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>here</a>.,A UDim2 value describing the size of the GuiObject on screen in both absolute and relative coordinates. More information on UDim2 is available <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>here</a>.,화면에서 GuiObject 크기를 절대 좌표와 상대 좌표로 모두 나타내는 UDim2 값. UDim2에 대한 자세한 내용은 <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>여기</a>에서 확인하세요.,"Значение UDim2, описывающее размер GuiObject на экране в абсолютных и относительных координатах. Более подробная информация о UDim2 доступна <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>здесь</a>.",一个描述 GuiObject 在屏幕的绝对和相对坐标上的大小的 UDim2 值。更多关于 UDim2 的信息请参阅<a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>这里</a>。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectPosition,,,A UDim2 value describing the position of the top-left corner of the GuiObject on screen. More information on UDim2 is available <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>here</a>.,A UDim2 value describing the position of the top-left corner of the GuiObject on screen. More information on UDim2 is available <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>here</a>.,화면에서 GuiObject의 왼쪽 상단 모서리 위치를 설명하는 UDim2 값. UDim2에 대한 자세한 내용은 <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>여기</a>에서 확인하세요.,"Значение UDim2, описывающее положение верхнего левого угла GuiObject на экране. Более подробная информация о UDim2 доступна <a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>здесь</a>.","一个描述 GuiObject 的左上角在屏幕上的位置的 UDim2 值。更多关于 UDim2 的信息请参阅<a href='http://wiki.roblox.com/index.php/UDim2' target='_blank'>这里</a>。"""
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectSizeConstraint,,,The direction(s) that an object can be resized in. <a href='http://wiki.roblox.com/index.php/SizeConstraint' target='_blank'>More info</a>.,The direction(s) that an object can be resized in. <a href='http://wiki.roblox.com/index.php/SizeConstraint' target='_blank'>More info</a>.,개체의 크기를 조정할 수 있는 방향. <a href='http://wiki.roblox.com/index.php/SizeConstraint' target='_blank'>추가 정보</a>.,"Направления, в которых размер объекта может быть изменен. <a href='http://wiki.roblox.com/index.php/SizeConstraint' target='_blank'>Узнать больше</a>.",对象可以调整大小的方向。<a href='http://wiki.roblox.com/index.php/SizeConstraint' target='_blank'>更多信息</a>。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectZIndex,,,"Describes the ordering in which overlapping GuiObjects will be drawn. A value of 1 is drawn first, while higher values are drawn in ascending order (each value draws over the last).","Describes the ordering in which overlapping GuiObjects will be drawn. A value of 1 is drawn first, while higher values are drawn in ascending order (each value draws over the last).","겹치는 GuiObject가 그려지는 순서를 설명합니다. 값이 1이면 먼저 그려지고, 더 높은 값으로 설정하면 오름차순으로 그려집니다(각 값이 지난 번 값보다 먼저 그려짐).","Описывает порядок, в котором будут рисоваться перекрывающиеся GuiObjects. Объект со значением 1 рисуется первым, а объекты с более высокими значениями рисуются в возрастающем порядке (каждое последующее значение рисуется над предыдущим).",描述绘制 GuiObject 的叠加顺序。值为 1 时首先绘制，后续按值的升序依次绘制 (较大的值绘制在较小的值上方)。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectBackgroundColor,,,Deprecated. Use BackgroundColor3 instead,Deprecated. Use BackgroundColor3 instead,더 이상 사용되지 않습니다. BackgroundColor3를 대신 사용하세요,Устарело. Используйте BackgroundColor3,已过时。请改用 BackgroundColor3
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectBorderColor,,,Deprecated. Use BorderColor3 instead,Deprecated. Use BorderColor3 instead,더 이상 사용되지 않습니다. BorderColor3를 대신 사용하세요,Устарело. Используйте BorderColor3,已过时。请改用 BorderColor3
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectSelectionImageObject,,,"Overrides the default selection adornment (used for gamepads). For best results, this should point to a GuiObject.","Overrides the default selection adornment (used for gamepads). For best results, this should point to a GuiObject.",기본 선택 장식을 재정의합니다(게임 패드에 사용). 최상의 결과를 얻으려면 GuiObject를 가리켜야 합니다.,Переопределяет графические элементы выделения по умолчанию (используемые для геймпадов). Для наилучших результатов должно указывать на GuiObject.,覆盖默认选择装饰 (用于游戏手柄)。为了获得最佳效果，应指向一个 GuiObject。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectDragBegin,,,Fired when a GuiObject with Draggable set to true starts to be dragged. 'InitialPosition' is a UDim2 value of the position of the GuiObject before any drag operation began.,Fired when a GuiObject with Draggable set to true starts to be dragged. 'InitialPosition' is a UDim2 value of the position of the GuiObject before any drag operation began.,Draggable이 true로 설정된 GuiObject가 드래그되기 시작하면 발생됩니다 'InitialPosition'은 드래그 동작이 시작되기 전 GuiObject 위치의 UDim2 값입니다.,"Запускается, когда начинается перетаскивание объекта GuiObject с переменной Draggable в значении true. InitialPosition — это значение UDim2 позиции GuiObject перед началом перетаскивания.",Draggable 设为 true 的 GuiObject 被拖动时触发。'InitialPosition' 是一个记录 GuiObject 在拖动开始前位置的 UDim2 值。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectDragStopped,,,"Always fired after a DragBegin event, DragStopped is fired when the user releases the mouse button causing a drag operation on the GuiObject. Arguments 'x', and 'y' specify the top-left absolute position of the GuiObject when the event is fired.","Always fired after a DragBegin event, DragStopped is fired when the user releases the mouse button causing a drag operation on the GuiObject. Arguments 'x', and 'y' specify the top-left absolute position of the GuiObject when the event is fired.","항상 DragBegin 이벤트 이후에 발생하고, DragStopped는 사용자가 마우스 버튼을 놓아서 GuiObject에 드래그 동작이 일어날 때 발생합니다. 'x' 및 'y' 인수는 이벤트가 발생할 때 GuiObject의 왼쪽 상단 절대 위치를 지정합니다.","Всегда запускается после события DragBegin. DragStopped возникает, когда пользователь отпускает кнопку мыши, вызывая операцию перетаскивания на GuiObject. Аргументы X и Y указывают верхнее левое абсолютное положение GuiObject, когда событие запускается.",总是在 DragBegin 事件后触发。DragStopped 在用户松开导致 GuiObject 拖动操作的鼠标按键后触发。参数 'x' 和 'y' 指定事件触发时 GuiObject 左上角的绝对位置。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectMouseEnter,,,"Fired when the mouse enters a GuiObject, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.","Fired when the mouse enters a GuiObject, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.",GuiObject가 활성화되어 있는 동안 마우스가 GuiObject에 들어갈 때 발생합니다(자세한 내용은 활성 속성 참조). 'x' 및 'y' 인수는 마우스의 절대 픽셀 위치를 지정합니다.,"Запускается, когда указатель мыши входит в GuiObject, пока GuiObject активен (подробнее см. активное свойство). Аргументы X и Y указывают абсолютное положение мыши в пикселях.",只要 GuiObject 处于活跃状态 (参阅活跃属性了解更多详细信息)，当鼠标进入 GuiObject 时触发。参数 'x' 和 'y' 指定鼠标的绝对像素位置。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectMouseLeave,,,"Fired when the mouse leaves a GuiObject, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.","Fired when the mouse leaves a GuiObject, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.",GuiObject가 활성화되어 있는 동안 마우스가 GuiObject를 떠날 때 발생합니다(자세한 내용은 활성 속성 참조). 'x' 및 'y' 인수는 마우스의 절대 픽셀 위치를 지정합니다.,"Запускается, когда мышь покидает GuiObject, пока GuiObject активен (подробнее см. активное свойство). Аргументы X и Y указывают абсолютное положение мыши в пикселях.",只要 GuiObject 处于活跃状态 (参阅活跃属性了解更多详细信息)，但鼠标离开 GuiObject 时触发。参数 'x' 和 'y' 指定鼠标的绝对像素位置。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectMouseMoved,,,"Fired when the mouse is inside a GuiObject and moves, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.","Fired when the mouse is inside a GuiObject and moves, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.",GuiObject가 활성화되어있는 동안 마우스가 GuiObject 내부에서 이동할 때 발생합니다(자세한 내용은 active 속성 참조). 인수 'x'및 'y'는 마우스의 절대 픽셀 위치를 지정합니다.,"Запускается, когда мышь находится внутри GuiObject и перемещается, пока GuiObject активен (подробнее см. активное свойство). Аргументы X и Y указывают абсолютное положение мыши в пикселях.",只要 GuiObject 处于活跃状态 (参阅活跃属性了解更多详细信息)，当鼠标在 GuiObject 内移动时触发。参数 'x' 和 'y' 指定鼠标的绝对像素位置。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectTouchTap,,,"Fired when a user taps their finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the tap gesture. This event only fires locally.  This event will always fire regardless of game state.","Fired when a user taps their finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the tap gesture. This event only fires locally.  This event will always fire regardless of game state.","사용자가 TouchEnabled 장치에서 손가락을 탭하면 발생합니다. 'touchPositions'는 Vector2의 Lua 배열로, 각각 탭 제스처와 관련된 모든 손가락의 위치를 ​​나타냅니다. 이 이벤트는 로컬에서만 발생합니다. 이 이벤트는 게임 상태에 관계없이 항상 발생합니다.","Возникает, если пользователь касается экрана устройства с TouchEnabled. Параметр touchPositions — это Lua-массив Vector2, указывающий положение всех пальцев, задействованных при касании. Это событие возникает только локально. Событие возникает всегда, независимо от состояния игры.",当用户在 TouchEnabled 设备上轻触手指时触发。 'touchPositions' 是一个 Vector2 的 Lua 数组，其成员各自代表轻触手势中涉及的所有手指的位置。此事件仅在本地触发。无论游戏状态如何，此事件总是会触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectTouchPinch,,,"Fired when a user pinches their fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the pinch gesture. 'scale' is a float that indicates the difference from the beginning of the pinch gesture. 'velocity' is a float indicating how quickly the pinch gesture is happening. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.","Fired when a user pinches their fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the pinch gesture. 'scale' is a float that indicates the difference from the beginning of the pinch gesture. 'velocity' is a float indicating how quickly the pinch gesture is happening. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.","사용자가 TouchEnabled 기기에서 손가락을 모으면 발생합니다. 'touchPositions'는 Vector2의 Lua 배열로, 확대/축소 제스처와 관련된 모든 손가락의 위치를 ​​나타냅니다. 'scale'은 확대/축소 제스처의 시작과의 차이를 나타내는 부동 소수점 숫자입니다. 'velocity'는 확대/축소 제스처가 얼마나 빨리 발생하는지를 나타내는 부동 소수점 숫자입니다. 'state'는 제스처의 Enum.UserInputState를 나타냅니다. 이 이벤트는 로컬에서만 발생합니다.","Возникает, если пользователь совершает жест сжатия экрана устройства с TouchEnabled. Параметр touchPositions — это Lua-массив Vector2, указывающий положение всех пальцев, задействованных при сжатии. scale — это число с плавающей запятой, означающее разницу между началом и окончанием жеста. velocity — это число с плавающей запятой, означающее, как быстро происходит сжатие. state — это число с плавающей запятой, означающее Enum.UserInputState жеста. Это событие возникает только локально.",当用户在启用 TouchEnabled 的设备上捏合手指时触发。'touchPositions' 是一个 Vector2 Lua 数组，其成员各自代表捏合手势中所涉及的全部手指的位置。 'scale' 是一个代表从捏合手势开始的差异值的浮点数。'velocity' 是一个代表捏合手势发生速度的浮点数。'state' 代表手势的 the Enum.UserInputState。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectTouchSwipe,,,"Fired when a user swipes their fingers on a TouchEnabled device. 'swipeDirection' is an Enum.SwipeDirection, indicating the direction the user swiped. 'numberOfTouches' is an int that indicates how many touches were involved with the gesture.  This event only fires locally.","Fired when a user swipes their fingers on a TouchEnabled device. 'swipeDirection' is an Enum.SwipeDirection, indicating the direction the user swiped. 'numberOfTouches' is an int that indicates how many touches were involved with the gesture.  This event only fires locally.",사용자가 TouchEnabled 기기에서 손가락을 스와이프하면 발생합니다. 'swipeDirection'은 사용자가 스와이프하는 방향을 나타내는 Enum.SwipeDirection입니다. 'numberOfTouches'는 제스처와 관련된 터치 수를 나타내는 int입니다. 이 이벤트는 로컬에서만 발생합니다.,"Возникает, если пользователь проводит пальцами по экрану устройства с TouchEnabled. Параметр swipeDirection — это Enum.SwipeDirection, указывающий направление движения пальцев. numberOfTouches — это целое, указывающее, сколько касаний сопутствовало жесту. Это событие возникает только локально.",当用户在启用 TouchEnabled 的设备上滑动手指时触发。'swipeDirection' 是一个代表用户滑动方向的 Enum.SwipeDirection。 'numberOfTouches' 是一个代表该手势中涉及的触碰数量的整数。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectTouchLongPress,,,"Fired when a user holds at least one finger for a short amount of time on the same screen position on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.","Fired when a user holds at least one finger for a short amount of time on the same screen position on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.","사용자가 TouchEnabled 기기 화면의 같은 위치를 짧은 시간 동안 하나 이상의 손가락으로 길게 누르면 발생합니다. 'touchPositions'는 Vector2의 Lua 배열로, 제스처에 관련된 모든 손가락의 위치를 ​​나타냅니다. 'state'는 제스처의 Enum.UserInputState를 나타냅니다. 이 이벤트는 로컬에서만 발생합니다.","Возникает, если пользователь на короткое время удерживает на экране устройства с TouchEnabled хотя бы один палец. Параметр touchPositions — это Lua-массив Vector2, указывающий положение всех пальцев, задействованных при касании. state указывает Enum.UserInputState жеста. Это событие возникает только локально.",当用户在启用 TouchEnabled 的设备上用至少一根手指在同一屏幕位置短暂停留时触发。'touchPositions' 是一个 Vector2 Lua 数组，其成员各自代表该手势中涉及的所有手指的位置。'state' 代表手势的 Enum.UserInputState。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectTouchRotate,,,"Fired when a user rotates two fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'rotation' is a float indicating how much the rotation has gone from the start of the gesture. 'velocity' is a float that indicates how quickly the gesture is being performed. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.","Fired when a user rotates two fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'rotation' is a float indicating how much the rotation has gone from the start of the gesture. 'velocity' is a float that indicates how quickly the gesture is being performed. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.","사용자가 TouchEnabled 기기에서 두 손가락을 회전하면 발생합니다. 'touchPositions'는 Vector2의 Lua 배열로, 제스처에 관련된 모든 손가락의 위치를 ​​나타냅니다. 'rotation'은 제스처 시작 이후 회전이 얼마나 진행되었는지를 나타내는 부동 소수점 숫자입니다. 'velocity'는 제스처가 얼마나 빨리 수행되고 있는지를 나타내는 부동 소수점 숫자입니다. 'state'는 제스처의 Enum.UserInputState를 나타냅니다. 이 이벤트는 로컬에서만 발생합니다.","Возникает, если пользователь поворачивает два пальца на экране устройства с TouchEnabled. Параметр touchPositions — это Lua-массив Vector2, указывающий положение всех пальцев, задействованных при сжатии. rotation — это число с плавающей запятой, означающее длительность вращения. velocity — это число с плавающей запятой, означающее, как быстро происходит сжатие. state означает Enum.UserInputState жеста. Это событие возникает только локально.",当用户在启用 TouchEnabled 的设备上旋转两根手指时触发。'touchPositions' 是一个 Vector2 Lua 数组，其成员各自代表该手势中涉及的所有手指的位置。'rotation' 是一个代表手势从初始位置旋转角度的浮点数。'velocity' 是一个代表旋转手势发生速度的浮点数。'state' 代表手势的 Enum.UserInputState。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectTouchPan,,,"Fired when a user drags at least one finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'totalTranslation' is a Vector2, indicating how far the pan gesture has gone from its starting point. 'velocity' is a Vector2 that indicates how quickly the gesture is being performed in each dimension. 'state' indicates the Enum.UserInputState of the gesture.","Fired when a user drags at least one finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'totalTranslation' is a Vector2, indicating how far the pan gesture has gone from its starting point. 'velocity' is a Vector2 that indicates how quickly the gesture is being performed in each dimension. 'state' indicates the Enum.UserInputState of the gesture.","사용자가 TouchEnabled 기기에서 하나 이상의 손가락을 드래그하면 발생합니다. 'touchPositions'는 Vector2의 Lua 배열로, 제스처에 관련된 모든 손가락의 위치를 ​​나타냅니다. 'totalTranslation'은 패닝 제스처가 시작점에서 얼마나 멀리 떨어져 있는지를 나타내는 Vector2입니다. 'velocity'는 각 차원에서 제스처가 얼마나 빨리 수행되고 있는지를 나타내는 Vector2입니다. 'state'는 제스처의 Enum.UserInputState를 나타냅니다. 이 이벤트는 로컬에서만 발생합니다.","Возникает, если пользователь перемещает хотя бы один палец по экрану устройства с TouchEnabled. Параметр touchPositions — это Lua-массив Vector2, указывающий положение всех пальцев, задействованных в жесте. Параметр totalTranslation — это Vector2, означающий дальность перемещения от начальной точки. velocity — это Vector2, означающий, как быстро происходит жест в каждом измерении. state означает Enum.UserInputState жеста.",当用户在启用 TouchEnabled 的设备上拖动至少一根手指时触发。'touchPositions' 是一个 Vector2 Lua 数组，其成员各自代表该手势中涉及的所有手指的位置。'totalTranslation' 是一个 Vector2，代表拖动手势从初始位置所行进的距离。'velocity' 是一个代表手势在各维度上行进速度的 Vector2。'state' 代表手势的 Enum.UserInputState。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectInputBegan,,,"Fired when a user begins interacting via a Human-Computer Interface device (Mouse button down, touch begin, keyboard button down, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.","Fired when a user begins interacting via a Human-Computer Interface device (Mouse button down, touch begin, keyboard button down, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.","인간·컴퓨터 인터페이스 기기(마우스 버튼 누르기, 시작 터치, 키보드 버튼 누르기 등)를 통해 사용자가 상호 작용을 시작하면 발생합니다. 'inputObject'는 사용자 입력을 쿼리하는 데 유용한 데이터를 포함하는 InputObject입니다. 이 이벤트는 로컬에서만 발생합니다.","Возникает, если пользователь начал взаимодействие через устройство с человеко-машинным интерфейсом (нажатие кнопки мыши, касание, нажатие клавиши и т. д.). inputObject — это InputObject, содержащий полезные данные для запроса пользователя. Это событие возникает только локально.",当用户开始通过人机交互设备进行交互 (按下鼠标按钮、触碰开始、按下键盘按键等) 时触发。'inputObject' 是一个包含查询用户输入的有用数据的 InputObject。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectInputChanged,,,"Fired when a user changes interacting via a Human-Computer Interface device (Mouse move, touch move, mouse wheel, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.","Fired when a user changes interacting via a Human-Computer Interface device (Mouse move, touch move, mouse wheel, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.","인간·컴퓨터 인터페이스 기기(마우스 이동, 터치 이동, 마우스 휠 이동 등)를 통해 사용자가 상호 작용을 변경하면 발생합니다. 'inputObject'는 사용자 입력을 쿼리하는 데 유용한 데이터를 포함하는 InputObject입니다. 이 이벤트는 로컬에서만 발생합니다.","Возникает, если пользователь изменяет способ взаимодействия через устройство с человеко-машинным интерфейсом (нажатие кнопки мыши, касание, прокрутка колесика мыши и т. д.). inputObject — это InputObject, содержащий полезные данные для запроса пользователя. Это событие возникает только локально.",当用户通过人机交互设备变更交互 (鼠标移动、触碰移动、鼠标滚轮等) 时触发。'inputObject' 是一个包含查询用户输入的有用数据的 InputObject。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiObjectInputEnded,,,"Fired when a user stops interacting via a Human-Computer Interface device (Mouse button up, touch end, keyboard button up, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.","Fired when a user stops interacting via a Human-Computer Interface device (Mouse button up, touch end, keyboard button up, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.","인간·컴퓨터 인터페이스 기기(마우스 버튼 떼기, 터치 종료, 키보드 버튼 떼기 등)를 통해 사용자가 상호 작용을 중지하면 발생합니다. 'inputObject'는 사용자 입력을 쿼리하는 데 유용한 데이터를 포함하는 InputObject입니다. 이 이벤트는 로컬에서만 발생합니다.","Возникает, если пользователь прекратил взаимодействие через устройство с человеко-машинным интерфейсом (нажатие кнопки мыши, касание, нажатие клавиши и т. д.). inputObject — это InputObject, содержащий полезные данные для запроса пользователя. Это событие возникает только локально.",当用户停止通过人机交互设备进行交互 (松开鼠标按钮、触碰结束、松开键盘按键等) 时触发。'inputObject' 是一个包含查询用户输入的有用数据的 InputObject。此事件仅在本地触发。
Studio.ReflectionMetadata.ReflectionMetadata.Frame,,,A container object used to layout other GUI objects,A container object used to layout other GUI objects,다른 GUI 개체 레이아웃에 사용된 컨테이너 개체,"Объект-контейнер, используемый для размещения других объектов графического интерфейса",用于布局其他 GUI 对象的容器对象
Studio.ReflectionMetadata.ReflectionMetadata.FrameStyle,,,Determines how a frame will look. Uses Enum.FrameStyle. <a href='http://wiki.roblox.com/index.php?title=API:Enum/FrameStyle' target='_blank'>More info</a>,Determines how a frame will look. Uses Enum.FrameStyle. <a href='http://wiki.roblox.com/index.php?title=API:Enum/FrameStyle' target='_blank'>More info</a>,프레임이 보이는 방식을 결정합니다. Enum.FrameStyle을 사용합니다. <a href='http://wiki.roblox.com/index.php?title=API:Enum/FrameStyle' target='_blank'>추가 정보</a>,"Определяет, как будет выглядеть кадр. Использует Enum.FrameStyle. <a href='http://wiki.roblox.com/index.php?title=API:Enum/FrameStyle' target='_blank'>Узнать больше</a>",决定框架的外观。使用 Enum.FrameStyle。<a href='http://wiki.roblox.com/index.php?title=API:Enum/FrameStyle' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.ScrollingFrame,,,Studio.App.RobloxRibbonMainWindow.ScrollingFrameTooltip,Studio.App.RobloxRibbonMainWindow.ScrollingFrameTooltip,Studio.App.RobloxRibbonMainWindow.ScrollingFrameTooltip,Studio.App.RobloxRibbonMainWindow.ScrollingFrameTooltip,Studio.App.RobloxRibbonMainWindow.ScrollingFrameTooltip
Studio.ReflectionMetadata.ReflectionMetadata.ScrollingFrameScrollingEnabled,,,"Determines whether or not scrolling is allowed on this frame. If turned off, no scroll bars will be rendered.","Determines whether or not scrolling is allowed on this frame. If turned off, no scroll bars will be rendered.",이 프레임에 스크롤링을 허용할지 여부를 결정합니다. 해제하면 스크롤 막대가 렌더링되지 않습니다.,"Определяет, разрешена ли прокрутка в этом кадре. При отключении полосы прокрутки не отображаются.",决定此框架内是否允许滚动。若禁用，将不会渲染滚动条。
Studio.ReflectionMetadata.ReflectionMetadata.ScrollingFrameCanvasSize,,,"Determines the size of the area that is scrollable. The UDim2 is calculated using the parent gui's size, similar to the regular Size property on gui objects.","Determines the size of the area that is scrollable. The UDim2 is calculated using the parent gui's size, similar to the regular Size property on gui objects.","스크롤되는 영역의 크기를 결정합니다. UDim2는 부모 GUI의 크기를 사용하여 계산되며, 이는 GUI 개체의 일반 Size 속성과 유사합니다.","Определяет размер прокручиваемой области. UDim2 рассчитывается с помощью размера интерфейса родительского элемента, аналогично обычному свойству Size на объектах интерфейса.",决定可滚动的区域大小。使用父 GUI 的大小计算 UDim2，类似 GUI 对象的常规 Size 属性。
Studio.ReflectionMetadata.ReflectionMetadata.ScrollingFrameCanvasPosition,,,"The absolute position the scroll frame is in respect to the canvas size. The minimum this can be set to is (0,0), while the max is the absolute canvas size - AbsoluteWindowSize.","The absolute position the scroll frame is in respect to the canvas size. The minimum this can be set to is (0,0), while the max is the absolute canvas size - AbsoluteWindowSize.","캔버스 크기에 대한 스크롤 프레임의 절대 위치입니다. 최소값은 (0,0)으로 설정할 수 있고, 최대값은 절대 캔버스 크기, 즉 AbsoluteWindowSize로 설정할 수 있습니다.","Абсолютное положение рамки прокрутки относительно размера холста. Минимальное значение можно установить равным (0,0), максимальное — равным абсолютному размеру холста AbsoluteWindowSize.","滚动框架相对画布大小的绝对位置。最小值可设为 (0,0)，最大值为画布的绝对尺寸 - AbsoluteWindowSize。"
Studio.ReflectionMetadata.ReflectionMetadata.ScrollingFrameAbsoluteWindowSize,,,"The size in pixels of the frame, without the scrollbars.","The size in pixels of the frame, without the scrollbars.",스크롤 막대가 없는 프레임의 크기(단위 픽셀)입니다.,Размер в пикселях кадра без полос прокрутки.,框架的尺寸，以像素为单位，滚动条不计入内。
Studio.ReflectionMetadata.ReflectionMetadata.ScrollingFrameScrollBarThickness,,,How thick the scroll bar appears. This applies to both the horizontal and vertical scroll bars. Can be set to 0 for no bars render.,How thick the scroll bar appears. This applies to both the horizontal and vertical scroll bars. Can be set to 0 for no bars render.,스크롤 막대의 두께를 표시하는 방식입니다. 수평 및 수직 스크롤 막대에 모두 적용됩니다. 0으로 설정하면 아무 막대도 렌더링되지 않습니다.,"Насколько толстой кажется полоса прокрутки. Это относится как к горизонтальной, так и к вертикальной полосам прокрутки. Может быть установлено значение 0, чтобы не отображать полосы.",滚动条的厚度。同样适用于水平和垂直滚动条。设为 0 则不渲染滚动条。
Studio.ReflectionMetadata.ReflectionMetadata.ScrollingFrameTopImage,,,"The ""Up"" image on the vertical scrollbar. Size of this is always ScrollBarThickness by ScrollBarThickness. This is also used as the ""left"" image on the horizontal scroll bar.","The ""Up"" image on the vertical scrollbar. Size of this is always ScrollBarThickness by ScrollBarThickness. This is also used as the ""left"" image on the horizontal scroll bar.","수직 스크롤 막대의 ""위쪽"" 이미지입니다. 크기는 항상 ScrollBarThickness X ScrollBarThickness입니다. 이 이미지는 수평 스크롤 막대의 ""왼쪽"" 이미지로도 사용할 수 있습니다.",Изображение «Вверх» на вертикальной полосе прокрутки. Размер всегда ScrollBarThickness на ScrollBarThickness. Также используется в качестве «левого» изображения на горизонтальной полосе прокрутки.,垂直滚动条的“上”图像。大小始终为 ScrollBarThickness x ScrollBarThickness。还可以作为水平滚动条的“左”图像。
Studio.ReflectionMetadata.ReflectionMetadata.ScrollingFrameMidImage,,,"The ""Middle"" image on the vertical scrollbar. Size of this can vary in the y direction, but is always set at ScrollBarThickness in x direction. This is also used as the ""mid"" image on the horizontal scroll bar.","The ""Middle"" image on the vertical scrollbar. Size of this can vary in the y direction, but is always set at ScrollBarThickness in x direction. This is also used as the ""mid"" image on the horizontal scroll bar.","수직 스크롤 막대의 ""가운데"" 이미지입니다. 크기는 y 방향에서 다를 수 있지만, x 방향에서는 항상 ScrollBarThickness로 설정됩니다. 이 이미지는 수평 스크롤 막대의 ""중간"" 이미지로도 사용할 수 있습니다.","«Среднее» изображение на вертикальной полосе прокрутки. Размер может изменяться в направлении Y, но всегда устанавливается как ScrollBarThickness в направлении X. Также используется в качестве «среднего» изображения на горизонтальной полосе прокрутки.",垂直滚动条的“中间”图像。此图像的大小可以在 y 轴产生变化，但在 x 轴方向上其值应始终为 ScrollBarThickness。还可以作为水平滚动条的“中间”图像。
Studio.ReflectionMetadata.ReflectionMetadata.ScrollingFrameBottomImage,,,"The ""Down"" image on the vertical scrollbar. Size of this is always ScrollBarThickness by ScrollBarThickness. This is also used as the ""right"" image on the horizontal scroll bar.","The ""Down"" image on the vertical scrollbar. Size of this is always ScrollBarThickness by ScrollBarThickness. This is also used as the ""right"" image on the horizontal scroll bar.","수직 스크롤 막대의 ""아래쪽"" 이미지입니다. 크기는 항상 ScrollBarThickness X ScrollBarThickness입니다. 이 이미지는 수평 스크롤 막대의 ""오른쪽"" 이미지로도 사용할 수 있습니다.",Изображение «Вниз» на вертикальной полосе прокрутки. Размер всегда ScrollBarThickness на ScrollBarThickness. Также используется в качестве «правого» изображения на горизонтальной полосе прокрутки.,垂直滚动条的“下”图像。大小始终为 ScrollBarThickness x ScrollBarThickness。还可以作为水平滚动条的“右”图像。
Studio.ReflectionMetadata.ReflectionMetadata.ImageLabel,,,A GUI object containing an Image,A GUI object containing an Image,이미지를 포함한 GUI 개체,"Объект графического интерфейса, содержащий изображение",包含图片的 GUI 对象
Studio.ReflectionMetadata.ReflectionMetadata.ImageLabelImage,,,Specifies the id of the texture to display. <a href='http://wiki.roblox.com/index.php?title=API:Class/ImageLabel/Image' target='_blank'>More info</a>,Specifies the id of the texture to display. <a href='http://wiki.roblox.com/index.php?title=API:Class/ImageLabel/Image' target='_blank'>More info</a>,표시할 텍스처의 ID를 지정합니다. <a href='http://wiki.roblox.com/index.php?title=API:Class/ImageLabel/Image' target='_blank'>추가 정보</a>,Указывает идентификатор текстуры для отображения. <a href='http://wiki.roblox.com/index.php?title=API:Class/ImageLabel/Image' target='_blank'>Узнать больше</a>,指定要显示的纹理的 ID。<a href='http://wiki.roblox.com/index.php?title=API:Class/ImageLabel/Image' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.ImageLabelScaleType,,,Specifies how an image should be displayed. See ScaleType for more info.,Specifies how an image should be displayed. See ScaleType for more info.,이미지가 표시되는 방식을 지정합니다. 자세한 내용은 ScaleType을 참조하세요.,"Указывает способ отображения изображения. Чтобы узнать больше, см. ScaleType.",指定图片的显示方式。更多信息请参阅 ScaleType。
Studio.ReflectionMetadata.ReflectionMetadata.ImageLabelSliceCenter,,,"If ScaleType is set to Slice, this Rect is used to specify the central part of the image. Everything outside of this is considered to be the border.","If ScaleType is set to Slice, this Rect is used to specify the central part of the image. Everything outside of this is considered to be the border.",ScaleType이 Slice로 설정되면 이 Rect가 이미지의 중앙 부분을 지정하는 데 사용됩니다. 그보다 밖에 있는 모든 부분은 테두리로 간주됩니다.,"Если для параметра ScaleType установлено значение Slice, этот прямоугольник используется для указания центральной части изображения. Все, что находится за его пределами, рассматривается как граница.",若 ScaleType 设为 Slice，此 Rect 用于指定图片的中心部分。除此以外的一切均被视为边缘。
Studio.ReflectionMetadata.ReflectionMetadata.ImageLabelTileSize,,,"If ScaleType is set to Tile, this sets the size of the tile.","If ScaleType is set to Tile, this sets the size of the tile.",ScaleType이 Tile로 설정되면 타일의 크기를 설정합니다.,"Если для параметра ScaleType установлено значение Tile, задается размер плитки.",若 ScaleType 设为 Tile，此项将设置地砖的大小。
Studio.ReflectionMetadata.ReflectionMetadata.TextLabel,,,A GUI object containing text,A GUI object containing text,텍스트를 포함한 GUI 개체,"Объект графического интерфейса, содержащий текст",含有文本的 GUI 对象
Studio.ReflectionMetadata.ReflectionMetadata.TextLabelTextColor,,,Deprecated. Use TextColor3 instead,Deprecated. Use TextColor3 instead,더 이상 사용되지 않습니다. TextColor3를 대신 사용하세요,Устарело. Используйте TextColor3,已过时。请改用 TextColor3
Studio.ReflectionMetadata.ReflectionMetadata.TextButton,,,A GUI button containing text,A GUI button containing text,텍스트를 포함한 GUI 버튼,Кнопка графического интерфейса с текстом,包含文本的 GUI 按钮
Studio.ReflectionMetadata.ReflectionMetadata.TextButtonTextColor,,,Deprecated. Use TextColor3 instead,Deprecated. Use TextColor3 instead,더 이상 사용되지 않습니다. TextColor3를 대신 사용하세요,Устарело. Используйте TextColor3,已过时。请改用 TextColor3
Studio.ReflectionMetadata.ReflectionMetadata.TextBox,,,A text entry box,A text entry box,텍스트 입력 상자,Поле ввода текста,一个文本输入框
Studio.ReflectionMetadata.ReflectionMetadata.TextBoxTextColor,,,Deprecated. Use TextColor3 instead,Deprecated. Use TextColor3 instead,더 이상 사용되지 않습니다. TextColor3를 대신 사용하세요,Устарело. Используйте TextColor3,已过时。请改用 TextColor3
Studio.ReflectionMetadata.ReflectionMetadata.GuiButton,,,A GUI button containing an Image,A GUI button containing an Image,이미지를 포함한 GUI 버튼,Кнопка графического интерфейса с изображением,包含图片的 GUI 按钮
Studio.ReflectionMetadata.ReflectionMetadata.GuiButtonAutoButtonColor,,,Determines whether a button changes color automatically when reacting to mouse events.,Determines whether a button changes color automatically when reacting to mouse events.,마우스 이벤트에 반응할 때 버튼의 색상이 자동으로 변경되는지 여부를 결정합니다.,"Определяет, будет ли кнопка автоматически менять цвет при реагировании на события мыши.",决定一个按钮在响应鼠标事件时是否自动改变颜色。
Studio.ReflectionMetadata.ReflectionMetadata.GuiButtonModal,,,"Allows the mouse to be free in first person mode. If a button with this property set to true is visible, the mouse is 'free' in first person mode.","Allows the mouse to be free in first person mode. If a button with this property set to true is visible, the mouse is 'free' in first person mode.",1인칭 모드에서 마우스를 자유롭게 움직일 수 있습니다. 이 속성이 true로 설정된 버튼이 표시되면 마우스가 1인칭 모드에서 '자유롭게' 움직입니다.,"Позволяет освободить мышь в режиме от первого лица. Если кнопка со свойством, имеющим значением true, видима, то мышь в режиме от первого лица «свободна».",允许鼠标在第一人称模式下自由移动。若一个此属性被设为 true，则按钮可见，鼠标也可以在第一人称模式下“自由”移动。
Studio.ReflectionMetadata.ReflectionMetadata.GuiButtonStyle,,,"Determines how a button will look, including mouse event states. Uses Enum.ButtonStyle. <a href='http://wiki.roblox.com/index.php?title=API:Class/GuiButton/Style' target='_blank'>More info</a>","Determines how a button will look, including mouse event states. Uses Enum.ButtonStyle. <a href='http://wiki.roblox.com/index.php?title=API:Class/GuiButton/Style' target='_blank'>More info</a>",마우스 이벤트 상태를 포함하여 버튼이 표시되는 방식을 결정합니다. Enum.ButtonStyle을 사용합니다. <a href='http://wiki.roblox.com/index.php?title=API:Class/GuiButton/Style' target='_blank'>추가 정보</a>,"Определяет, как будет выглядеть кнопка, включая состояния событий мыши. Использует Enum.ButtonStyle. <a href='http://wiki.roblox.com/index.php?title=API:Class/GuiButton/Style' target='_blank'>Узнать больше</a>",决定一个按钮的外观，包括鼠标事件状态。使用 Enum.ButtonStyle。<a href='http://wiki.roblox.com/index.php?title=API:Class/GuiButton/Style' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.GuiButtonMouseButton1Click,,,"Fired when the mouse is over the button, and the mouse down and up events fire without the mouse leaving the button.","Fired when the mouse is over the button, and the mouse down and up events fire without the mouse leaving the button.","마우스 커서를 버튼 위에 올리면 발생하고, 마우스 누르기 및 떼기 이벤트는 마우스가 버튼을 떠나지 않고 발생합니다.","Возникает, когда мышь находится над кнопкой. События нажатия и отпускания кнопки мыши запускаются, когда мышь не перемещается с кнопки.",当鼠标悬停在按钮上且未离开按钮，鼠标键按下和松开事件触发时触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiButtonMouseButton1Down,,,Fired when the mouse button is pushed down on a button.,Fired when the mouse button is pushed down on a button.,마우스 버튼으로 버튼을 누르면 발생합니다.,Возникает при щелчке кнопки мыши по кнопке.,当鼠标键按下按钮时触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiButtonMouseButton1Up,,,Fired when the mouse button is released on a button.,Fired when the mouse button is released on a button.,버튼을 누른 마우스 버튼을 떼면 발생합니다.,Возникает при отпускании кнопки мыши с кнопки.,当鼠标键从按钮上松开时触发。
Studio.ReflectionMetadata.ReflectionMetadata.GuiButtonMouseButton2Click,,,This function currently does not work :(,This function currently does not work :(,이 함수는 현재 동작하지 않습니다.,Эта функция в настоящее время не работает :(,此函数目前不起作用 :(
Studio.ReflectionMetadata.ReflectionMetadata.GuiButtonMouseButton2Down,,,This function currently does not work :(,This function currently does not work :(,이 함수는 현재 동작하지 않습니다.,Эта функция в настоящее время не работает :(,此函数目前不起作用 :(
Studio.ReflectionMetadata.ReflectionMetadata.GuiButtonMouseButton2Up,,,This function currently does not work :(,This function currently does not work :(,이 함수는 현재 동작하지 않습니다.,Эта функция в настоящее время не работает :(,此函数目前不起作用 :(
Studio.ReflectionMetadata.ReflectionMetadata.ViewportFrame,,,A GUI that can show 3D objects,A GUI that can show 3D objects,3D 개체를 표시할 수 있는 GUI,"Графический интерфейс, который может отображать 3D-объекты",可以显示 3D 对象的 GUI
Studio.ReflectionMetadata.ReflectionMetadata.ViewportFrameCurrentCamera,,,Current Camera of children objects,Current Camera of children objects,자식 개체의 현재 카메라,Текущая камера дочерних объектов,子对象的当前 Camera
Studio.ReflectionMetadata.ReflectionMetadata.ViewportFrameImageTransparency,,,A number value that specifies how transparent the rendered image of the ViewportFrame is,A number value that specifies how transparent the rendered image of the ViewportFrame is,ViewportFrame의 렌더링된 이미지가 얼마나 투명한지 지정하는 숫자 값,"Цифровое значение, которое определяет, насколько прозрачно отображается изображение ViewportFrame",一个指定 ViewportFrame 的渲染图像的透明度的数值
Studio.ReflectionMetadata.ReflectionMetadata.ViewportFrameImageColor3,,,The rendered image of the ViewportFrame will be mutiplied by this color,The rendered image of the ViewportFrame will be mutiplied by this color,ViewportFrame의 렌더링된 이미지에 이 색상을 곱합니다.,Отображаемое изображение ViewportFrame будет умножено этим цветом,ViewportFrame 的渲染图像会与此颜色进行乘算
Studio.ReflectionMetadata.ReflectionMetadata.ViewportFrameAmbient,,,Changing this changes the color tint of all objects in the ViewportFrame.,Changing this changes the color tint of all objects in the ViewportFrame.,이를 변경하면 ViewportFrame에 있는 모든 개체의 색상이 변경됩니다.,Изменение этого параметра изменяет цветовой тон всех объектов в ViewportFrame.,修改此项会更改 ViewportFrame 中所有对象的颜色色调。
Studio.ReflectionMetadata.ReflectionMetadata.ViewportFrameLightColor,,,Directional light color for objects in the ViewportFrame.,Directional light color for objects in the ViewportFrame.,ViewportFrame에 있는 개체의 방향 광원 색상.,Цвет направленного света для объектов в ViewportFrame.,ViewportFrame 中对象的定向光照颜色
Studio.ReflectionMetadata.ReflectionMetadata.ViewportFrameLightDirection,,,"Light direction. Value will be normalized. All values valid except (0,0,0).","Light direction. Value will be normalized. All values valid except (0,0,0).","광원 방향. 값이 정규화됩니다. (0,0,0) 외에 모든 값이 유효합니다.","Направление света. Значение будет нормализовано. Все значения действительны, кроме (0,0,0).","光照方向。取值将被标准化。除 (0,0,0) 外，所有值均有效。"
Studio.ReflectionMetadata.ReflectionMetadata.ImageButton,,,A GUI button containing an Image,A GUI button containing an Image,이미지를 포함한 GUI 버튼,Кнопка графического интерфейса с изображением,包含图片的 GUI 按钮
Studio.ReflectionMetadata.ReflectionMetadata.ImageButtonImage,,,Specifies the asset id of the texture to display. <a href='http://wiki.roblox.com/index.php?title=API:Class/ImageButton/Image' target='_blank'>More info</a>,Specifies the asset id of the texture to display. <a href='http://wiki.roblox.com/index.php?title=API:Class/ImageButton/Image' target='_blank'>More info</a>,표시할 텍스처의 애셋 ID를 지정합니다. <a href='http://wiki.roblox.com/index.php?title=API:Class/ImageButton/Image' target='_blank'>추가 정보</a>,Указывает идентификатор ресурса отображаемой текстуры. <a href='http://wiki.roblox.com/index.php?title=API:Class/ImageButton/Image' target='_blank'>Узнать больше</a>,指定要显示的纹理的资源 ID。<a href='http://wiki.roblox.com/index.php?title=API:Class/ImageButton/Image' target='_blank'>更多信息</a>
Studio.ReflectionMetadata.ReflectionMetadata.ImageButtonScaleType,,,Specifies how an image should be displayed. See ScaleType for more info.,Specifies how an image should be displayed. See ScaleType for more info.,이미지가 표시되는 방식을 지정합니다. 자세한 내용은 ScaleType을 참조하세요.,"Указывает способ отображения изображения. Чтобы узнать больше, см. ScaleType.",指定图片的显示方式。更多信息请参阅 ScaleType。
Studio.ReflectionMetadata.ReflectionMetadata.ImageButtonSliceCenter,,,"If ScaleType is set to Slice, this Rect is used to specify the central part of the image. Everything outside of this is considered to be the border.","If ScaleType is set to Slice, this Rect is used to specify the central part of the image. Everything outside of this is considered to be the border.",ScaleType이 Slice로 설정되면 이 Rect가 이미지의 중앙 부분을 지정하는 데 사용됩니다. 그보다 밖에 있는 모든 부분은 테두리로 간주됩니다.,"Если для параметра ScaleType установлено значение Slice, этот прямоугольник используется для указания центральной части изображения. Все, что находится за его пределами, рассматривается как граница.",若 ScaleType 设为 Slice，此 Rect 用于指定图片的中心部分。除此以外的一切均被视为边缘。
Studio.ReflectionMetadata.ReflectionMetadata.ImageButtonTileSize,,,"If ScaleType is set to Tile, this sets the size of the tile.","If ScaleType is set to Tile, this sets the size of the tile.",ScaleType이 Tile로 설정되면 타일의 크기를 설정합니다.,"Если для параметра ScaleType установлено значение Tile, задается размер плитки.",若 ScaleType 设为 Tile，此项设置地砖的大小。
Studio.ReflectionMetadata.ReflectionMetadata.Handles,,,A 3D GUI object to represent draggable handles,A 3D GUI object to represent draggable handles,드래그 가능 핸들을 표시하기 위한 3D GUI 개체,3D-объект графического интерфейса для представления перетаскиваемых ручек,用于代表可拖动手柄的 3D GUI 对象
Studio.ReflectionMetadata.ReflectionMetadata.ArcHandles,,,A 3D GUI object to represent draggable arc handles,A 3D GUI object to represent draggable arc handles,드래그 가능 원호 핸들을 표시하기 위한 3D GUI 개체,3D-объект графического интерфейса для представления перетаскиваемых ручек дуги,用于代表可拖动弧形手柄的 3D GUI 对象
Studio.ReflectionMetadata.ReflectionMetadata.SelectionBox,,,A 3D GUI object to represent the visible selection around an object,A 3D GUI object to represent the visible selection around an object,개체 주위의 가시 선택 영역을 나타내기 위한 3D GUI 개체,3D-объект графического интерфейса для представления видимой области выделения вокруг объекта,用于代表一个对象周围可见选择范围的 3D GUI 对象
Studio.ReflectionMetadata.ReflectionMetadata.SelectionSphere,,,A 3D GUI object to represent the visible selection around an object,A 3D GUI object to represent the visible selection around an object,개체 주위의 가시 선택 영역을 나타내기 위한 3D GUI 개체,3D-объект графического интерфейса для представления видимой области выделения вокруг объекта,用于代表一个对象周围可见选择范围的 3D GUI 对象
Studio.ReflectionMetadata.ReflectionMetadata.SurfaceSelection,,,A 3D GUI object to represent the visible selection around a face of an object,A 3D GUI object to represent the visible selection around a face of an object,개체 면 주위의 가시 선택 영역을 나타내기 위한 3D GUI 개체,3D-объект графического интерфейса для представления видимой области выделения вокруг поверхности объекта,用于代表一个对象的一个面周围可见选择范围的 3D GUI 对象
Studio.ReflectionMetadata.ReflectionMetadata.Configuration,,,An object that can be placed under parts to hold Value objects that represent that part's configuration,An object that can be placed under parts to hold Value objects that represent that part's configuration,파트의 구성을 나타내는 값 개체를 보관하기 위해 파트 아래에 배치할 수 있는 개체,"Объект, который может быть помещен под деталями для хранения объектов Value, представляющих конфигурацию этой детали",一个可以置于部件之下，用于存放代表该部件配置的 Value 对象的对象
Studio.ReflectionMetadata.ReflectionMetadata.HumanoidDescription,,,An object that specifies the appearance of Humanoid characters,An object that specifies the appearance of Humanoid characters,휴머노이드 캐릭터의 모습을 지정하는 개체,"Объект, определяющий внешний вид персонажей гуманоидов",一个指定 Humanoid 角色外观的对象
Studio.ReflectionMetadata.ReflectionMetadata.Folder,,,An object that can be created to hold and organize objects,An object that can be created to hold and organize objects,개체를 보관하고 정리하기 위해 생성할 수 있는 개체,"Объект, который может быть создан для хранения и организации объектов",一个可创建用于存放和整理对象的对象
Studio.ReflectionMetadata.ReflectionMetadata.SelectionPartLasso,,,A visual line drawn representation between two part objects,A visual line drawn representation between two part objects,두 개의 파트 개체 간에 시각적 선으로 그린 표현,"Визуальное изображение линии, нарисованной между двумя объектами деталей",两个部件对象之间绘制可视线表示
Studio.ReflectionMetadata.ReflectionMetadata.SelectionPointLasso,,,A visual line drawn representation between two positions,A visual line drawn representation between two positions,두 개의 위치 간에 시각적 선으로 그린 표현,"Визуальное изображение линии, нарисованной между двумя позициями",两个位置之间绘制可视线表示
Studio.ReflectionMetadata.ReflectionMetadata.PartPairLasso,,,A visual line drawn representation between two parts.,A visual line drawn representation between two parts.,두 개의 파트 간에 시각적 선으로 그린 표현,"Визуальное изображение линии, нарисованной между двумя деталями.",两个部件之间绘制可视线表示
Studio.ReflectionMetadata.ReflectionMetadata.Pose,,,The pose of a joint relative to it's parent part in a keyframe,The pose of a joint relative to it's parent part in a keyframe,키프레임의 부모 파트를 기준으로 한 조인트 포즈,Положение соединения относительно его родительской детали в ключевом кадре,接头在关键帧中相对其父部件的姿态
Studio.ReflectionMetadata.ReflectionMetadata.KeyframeMarker,,,Represents when an event should be fired in an animation,Represents when an event should be fired in an animation,이벤트가 애니메이션에서 발생해야 하는 경우를 나타냅니다,"Показывает, когда событие должно быть запущено в анимации",代表一个事件应该在动画中触发
Studio.ReflectionMetadata.ReflectionMetadata.Keyframe,,,One keyframe of an animation,One keyframe of an animation,애니메이션의 키프레임 하나,Один ключевой кадр анимации,动画的一个关键帧
Studio.ReflectionMetadata.ReflectionMetadata.Animation,,,"Represents a linked animation object, containing keyframes and poses.","Represents a linked animation object, containing keyframes and poses.","연결된 애니메이션 개체를 나타내며, 키프레임과 포즈가 들어 있습니다.","Представляет связанный объект анимации, содержащий ключевые кадры и положения.",代表一个关联动画对象，包含关键帧和姿态。
Studio.ReflectionMetadata.ReflectionMetadata.AnimationTrack,,,Returned by a call to LoadAnimation. Controls the playback of an animation on a Humanoid.,Returned by a call to LoadAnimation. Controls the playback of an animation on a Humanoid.,LoadAnimation에 대한 호출을 통해 반환됩니다. 휴머노이드의 애니메이션 재생을 제어합니다.,Возвращается вызовом от LoadAnimation. Управляет воспроизведением анимации на гуманоиде.,通过调用 LoadAnimation 返回。控制 Humanoid 上动画的播放。
Studio.ReflectionMetadata.ReflectionMetadata.AnimationController,,,Allows animations to be played on joints of the parent object.,Allows animations to be played on joints of the parent object.,부모 개체의 조인트에서 애니메이션을 플레이할 수 있습니다.,Позволяет воспроизводить анимацию на соединениях родительского объекта.,允许在父对象的接头上播放动画。
Studio.ReflectionMetadata.ReflectionMetadata.CharacterMesh,,,Modifies the appearance of a body part.,Modifies the appearance of a body part.,신체 파트의 모습을 수정합니다.,Изменяет внешний вид части тела.,修改身体部件的外观。
Studio.ReflectionMetadata.ReflectionMetadata.Dialog,,,An object used to make dialog trees to converse with players,An object used to make dialog trees to converse with players,플레이어와 대화하기 위한 대화문 트리를 만들 때 사용하는 개체,"Объект, используемый для построения деревьев диалогов для общения с игроками",用于创建对话框树与玩家交谈的对象
Studio.ReflectionMetadata.ReflectionMetadata.DialogConversationDistance,,,The maximum distance that the player's character can be from the dialog's parent in order to use the dialog.,The maximum distance that the player's character can be from the dialog's parent in order to use the dialog.,대화문을 사용하기 위해 플레이어의 캐릭터가 대화문의 부모 사이에 둘 수 있는 최대 거리입니다.,"Максимальное расстояние, на котором персонаж игрока может находиться от родительского элемента диалога, чтобы начать диалог.",玩家角色使用对话框时与对话框父类的最远距离。
Studio.ReflectionMetadata.ReflectionMetadata.DialogGoodbyeChoiceActive,,,Indicates whether or not an extra choice is available for the player to exit the dialog tree at this node.,Indicates whether or not an extra choice is available for the player to exit the dialog tree at this node.,플레이어가 이 노드의 대화문 트리를 나갈 때 사용할 수 있는 추가 선택이 있는지 여부를 나타냅니다.,"Показывает, доступен ли дополнительный выбор для выхода игрока из дерева диалога в этом узле.",表明是否有额外的选项让玩家在此节点退出对话框树。
Studio.ReflectionMetadata.ReflectionMetadata.DialogGoodbyeDialog,,,The prompt text for an extra choice that allows the player to exit the dialog tree at this node.,The prompt text for an extra choice that allows the player to exit the dialog tree at this node.,플레이어가 이 노드의 대화문 트리를 나가도록 허용하는 추가 선택의 프롬프트 텍스트입니다.,"Текст запроса на дополнительный выбор, позволяющий игроку выйти из дерева диалога на этом узле.",让玩家在此节点退出对话框树的额外选项的提示文本。
Studio.ReflectionMetadata.ReflectionMetadata.DialogInUse,,,Indicates whether or not the dialog is currently being used by one or more players.,Indicates whether or not the dialog is currently being used by one or more players.,대화문이 현재 한 명 이상의 플레이어에게 사용되는지 여부를 나타냅니다.,"Указывает, используется ли диалог в настоящее время одним или несколькими игроками.",表明对话框当前是否正被一个或以上玩家使用。
Studio.ReflectionMetadata.ReflectionMetadata.DialogInitialPrompt,,,The chat message that is displayed to the player when they first activate the dialog.,The chat message that is displayed to the player when they first activate the dialog.,대화문을 처음 활성화할 때 플레이어에게 표시되는 채팅 메시지입니다.,"Сообщение чата, которое отображается игроку при первой активации диалога.",玩家首次激活对话框时向其显示的聊天信息。
Studio.ReflectionMetadata.ReflectionMetadata.DialogPurpose,,,"Describes the purpose of the dialog, which is used to display a relevant icon on the dialog's activation button.","Describes the purpose of the dialog, which is used to display a relevant icon on the dialog's activation button.",대화문의 목적을 설명합니다. 대화문의 활성화 버튼에 관련 아이콘을 표시할 때 사용됩니다.,"Описывает назначение диалога, которое используется для отображения соответствующего значка на кнопке активации диалога.",描述对话框的用途，用于在对话框的激活按钮上显示相关图标。
Studio.ReflectionMetadata.ReflectionMetadata.DialogTone,,,"Describes the tone of the dialog, which is used to display a relevant color in the dialog interface.","Describes the tone of the dialog, which is used to display a relevant color in the dialog interface.",대화문의 어조를 설명합니다. 대화문의 인터페이스에 관련 색상을 표시할 때 사용됩니다.,"Описывает тон диалога, который используется для отображения соответствующего цвета в интерфейсе диалога.",描述对话框的语气，用于在对话框界面显示相关颜色。
Studio.ReflectionMetadata.ReflectionMetadata.DialogBehaviorType,,,"Indicates how the dialog may be used by players. Use Enum.DialogBehaviorType.SinglePlayer if only one player should interact with the dialog at a time, otherwise use Enum.DialogBehaviorType.MultiplePlayers.","Indicates how the dialog may be used by players. Use Enum.DialogBehaviorType.SinglePlayer if only one player should interact with the dialog at a time, otherwise use Enum.DialogBehaviorType.MultiplePlayers.","대화문이 플레이어에게 사용되는 방식을 나타냅니다. 한 번에 한 명의 플레이어만 대화문과 상호 작용해야 하는 경우 Enum.DialogBehaviorType.SinglePlayer를 사용하고, 다른 경우에는 Enum.DialogBehaviorType.MultiplePlayers를 사용하세요.","Показывает, как этот диалог может использоваться игроками. Используйте Enum.DialogBehaviorType.SinglePlayer, если с диалогом одновременно должен взаимодействовать только один игрок. В противном случае используйте Enum.DialogBehaviorType.MultiplePlayers.",表明玩家使用对话框的方式。若同一时间内只有一名玩家能与对话框互动，请使用 Enum.DialogBehaviorType.SinglePlayer，否则使用 Enum.DialogBehaviorType.MultiplePlayers。
Studio.ReflectionMetadata.ReflectionMetadata.DialogGetCurrentPlayers,,,Returns an array of the players currently conversing with this dialog.,Returns an array of the players currently conversing with this dialog.,이 대화문과 현재 대화 중인 플레이어 배열을 반환합니다.,"Возвращает массив игроков, которые в настоящее время взаимодействуют с этим диалогом.",返回一个包含正在与此对话框交谈的玩家的数组。
Studio.ReflectionMetadata.ReflectionMetadata.DialogChoice,,,An object used to make dialog trees to converse with players,An object used to make dialog trees to converse with players,플레이어와 대화하기 위한 대화문 트리를 만들 때 사용하는 개체,"Объект, используемый для построения деревьев диалогов для общения с игроками",用于创建对话框树与玩家交谈的对象
Studio.ReflectionMetadata.ReflectionMetadata.UnionOperation,,,A UnionOperation is a union of multiple parts,A UnionOperation is a union of multiple parts,UnionOperation은 여러 파트의 통합입니다.,UnionOperation — это объединение из нескольких частей,UnionOperation 是多个部件的组合
Studio.ReflectionMetadata.ReflectionMetadata.UnionOperationUsePartColor,,,Override the colors of the mesh with the part color.,Override the colors of the mesh with the part color.,메시 색상을 파트 색상으로 재정의합니다.,Переопределить цвета сетки цветом детали.,使用部件颜色覆盖网格颜色。
Studio.ReflectionMetadata.ReflectionMetadata.NegateOperation,,,A NegateOperation can be used to create holes in other parts,A NegateOperation can be used to create holes in other parts,NegateOperation은 다른 파트에 구멍을 만들 때 사용할 수 있습니다.,NegateOperation можно использовать для создания отверстий в других деталях,NegateOperation 可用于在其他部件上挖孔
Studio.ReflectionMetadata.ReflectionMetadata.NegateOperationUsePartColor,,,Override the colors of the mesh with the part color.,Override the colors of the mesh with the part color.,메시 색상을 파트 색상으로 재정의합니다.,Переопределить цвета сетки цветом детали.,使用部件颜色覆盖网格颜色。
Studio.ReflectionMetadata.ReflectionMetadata.MeshPart,,,A MeshPart is a physically simulatable mesh,A MeshPart is a physically simulatable mesh,MeshPart는 물리적으로 시뮬레이션이 가능한 메시입니다,MeshPart — это физически симулируемая сетка,MeshPart 是一种可模拟物理特性的网格
Studio.ReflectionMetadata.ReflectionMetadata.Terrain,,,Object representing a high performance bounded grid of static 4x4 parts,Object representing a high performance bounded grid of static 4x4 parts,정적 4x4 파트의 고성능 바운딩 그리드를 나타내는 개체,"Объект, представляющий собой высокопроизводительную ограниченную сетку из статических частей 4x4",代表一种静态 4x4 部件的高性能有界网格的对象
Studio.ReflectionMetadata.ReflectionMetadata.TerrainGetCell,,,"Returns CellMaterial, CellBlock, CellOrientation","Returns CellMaterial, CellBlock, CellOrientation","CellMaterial, CellBlock, CellOrientation을 반환합니다.","Возвращает CellMaterial, CellBlock, CellOrientation",返回 CellMaterial、CellBlock、CellOrientation
Studio.ReflectionMetadata.ReflectionMetadata.TerrainGetWaterCell,,,"Returns hasAnyWater, WaterForce, WaterDirection","Returns hasAnyWater, WaterForce, WaterDirection","hasAnyWater, WaterForce, WaterDirection을 반환합니다.","Возвращает hasAnyWater, WaterForce, WaterDirection",返回 hasAnyWater、WaterForce、WaterDirection
Studio.ReflectionMetadata.ReflectionMetadata.Light,,,Parent of all light objects,Parent of all light objects,모든 조명 개체의 부모,Родительский элемент всех световых объектов,所有光线对象的父类
Studio.ReflectionMetadata.ReflectionMetadata.PointLight,,,Makes the parent part emit light in a spherical shape,Makes the parent part emit light in a spherical shape,부모 파트가 구형으로 빛을 발산하도록 만듭니다.,Заставляет родительскую деталь излучать свет в сферической форме,使父部件发出球形光线
Studio.ReflectionMetadata.ReflectionMetadata.SpotLight,,,Makes the parent part emit light in a conical shape,Makes the parent part emit light in a conical shape,부모 파트가 원뿔형으로 빛을 발산하도록 만듭니다.,Заставляет родительскую деталь излучать свет в конической форме.,使父部件发出圆锥形光线
Studio.ReflectionMetadata.ReflectionMetadata.SurfaceLight,,,Makes the parent part emit light in a frustum shape from rectangle defined by part,Makes the parent part emit light in a frustum shape from rectangle defined by part,부모 파트가 파트에서 정의된 직사각형에서 절두체 형태로 빛을 발산하도록 만듭니다.,"Заставляет родительскую деталь излучать свет в форме усеченного угла из прямоугольника, заданного деталью",使父部件发出基于部件形状的矩形光线
Studio.ReflectionMetadata.ReflectionMetadata.RemoteFunction,,,Allow functions defined in one script to be called by another script across client/server boundary,Allow functions defined in one script to be called by another script across client/server boundary,한 스크립트에 정의된 함수가 클라이언트/서버 경계를 넘어 다른 스크립트에서 호출되도록 허용합니다.,"Разрешить вызов функций, определенных в одном скрипте, другим скриптом через границу клиент/сервер",允许一个脚本中定义的函数跨越客户端/服务器界限被另一个脚本调用
Studio.ReflectionMetadata.ReflectionMetadata.RemoteEvent,,,Allow events defined in one script to be subscribed to by another script across client/server boundary,Allow events defined in one script to be subscribed to by another script across client/server boundary,한 스크립트에 정의된 이벤트가 클라이언트/서버 경계를 넘어 다른 스크립트에 의해 구독되도록 허용합니다.,"Разрешить подписку на события, определенные в одном скрпите, другому скрпиту через границу клиент/сервер",允许一个脚本中定义的事件跨越客户端/服务器界限被另一个脚本订阅
Studio.ReflectionMetadata.ReflectionMetadata.TerrainRegion,,,Object representing a snapshot of the region of terrain,Object representing a snapshot of the region of terrain,지형 영역의 스냅샷을 나타내는 개체,"Объект, представляющий собой снимок области рельефа",一个代表地形区域快照的对象
Studio.ReflectionMetadata.ReflectionMetadata.ModuleScript,,,A script fragment. Only runs when another script uses require() on it.,A script fragment. Only runs when another script uses require() on it.,스크립트 조각. 다른 스크립트가 여기에서 require()를 사용할 때에만 실행됩니다.,"Фрагмент скрипта, который запускается только тогда, когда другой скрипт использует на нем функцию require().",一个脚本片段。仅在其他脚本对其使用 require() 时运行。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionResultSink,,,"If 'functionToBind' from ContextActionService:BindAction() returns Enum.ContextActionResult.Sink, the input event will stop at that function and no other bound actions under it will be invoked. This is the default behavior if 'functionToBind' does not return anything or yields in any way.","If 'functionToBind' from ContextActionService:BindAction() returns Enum.ContextActionResult.Sink, the input event will stop at that function and no other bound actions under it will be invoked. This is the default behavior if 'functionToBind' does not return anything or yields in any way.",ContextActionService:BindAction()의 'functionToBind'가 Enum.ContextActionResult.Sink를 반환하면 입력 이벤트는 해당 함수에서 중지되고 해당 함수 아래의 다른 모든 바운드 동작은 호출되지 않습니다. 'functionToBind'가 아무 것도 반환하지 않거나 어떤 식으로든 생성하지 않는 경우의 기본 동작입니다.,"Если functionToBind из ContextActionService:BindAction() возвращает Enum.ContextActionResult.Sink, входное событие остановится на этой функции и никаких других связанных с ней действий не будет вызвано. Это поведение по умолчанию, если functionToBind не возвращает ничего или не дает результатов.",若 ContextActionService:BindAction() 的 'functionToBind' 返回 Enum.ContextActionResult.Sink，则输入事件在该函数处停止，且不会调用其下的其他绑定操作。此行为是 'functionToBind' 未返回内容或因任意方式而暂停时的默认行为。
Studio.ReflectionMetadata.ReflectionMetadata.ContextActionResultPass,,,"If 'functionToBind' from ContextActionService:BindAction() returns Enum.ContextActionResult.Pass, the input event is considered to have not been handled by 'functionToBind' and will continue being passed to actions bound to the same input type.","If 'functionToBind' from ContextActionService:BindAction() returns Enum.ContextActionResult.Pass, the input event is considered to have not been handled by 'functionToBind' and will continue being passed to actions bound to the same input type.",ContextActionService:BindAction()의 'functionToBind'가 Enum.ContextActionResult.Pass를 반환하면 입력 이벤트는 'functionToBind'에 의해 처리되지 않은 것으로 간주되고 동일한 입력 유형에 바인딩된 동작으로 계속 전달됩니다.,"Если functionToBind из ContextActionService:BindAction() возвращает Enum.ContextActionResult.Pass, входное событие считается не обработанным functionToBind и будет продолжать передаваться действиям, привязанным к одному типу ввода.",若 ContextActionService:BindAction() 的 'functionToBind' 返回 Enum.ContextActionResult.Pass，则输入事件被视为未经 'functionToBind' 处理，并将继续传递给绑定至相同输入类型的操作。
Studio.ReflectionMetadata.ReflectionMetadata.SortOrder,,,The ordering to use for sorting an array of GuiObjects.,The ordering to use for sorting an array of GuiObjects.,GuiObject 배열을 정렬하는 데 사용하는 순서입니다.,Порядок использования для сортировки массива GuiObject.,排序一个 GuiObject 数组时使用的顺序。
Studio.ReflectionMetadata.ReflectionMetadata.SortOrderName,,,Sort by alphabetical ordering of the Name property.,Sort by alphabetical ordering of the Name property.,Name 속성의 알파벳 순서를 기준으로 정렬합니다.,Сортировать по алфавиту в порядке возрастания свойства Name.,根据 Name 属性的字母顺序进行排序。
Studio.ReflectionMetadata.ReflectionMetadata.SortOrderLayoutOrder,,,Sort using the less than operator on the LayoutOrder property of GuiObject.,Sort using the less than operator on the LayoutOrder property of GuiObject.,GuiObject의 LayoutOrder 속성에 있는 보다 작음(less than) 연산자를 사용하여 정렬합니다.,"Сортируйте, используя оператор «меньше, чем» на свойстве LayoutOrder объекта GuiObject.",使用 GuiObject 的 LayoutOrder 属性的小于运算符进行排序。
Studio.ReflectionMetadata.ReflectionMetadata.ZIndexBehavior,,,Controls the behavior of the ZIndex property.,Controls the behavior of the ZIndex property.,ZIndex 속성의 동작을 제어합니다.,Контролирует поведение свойства ZIndex.,控制 ZIndex 属性的行为。
Studio.ReflectionMetadata.ReflectionMetadata.ZIndexBehaviorGlobal,,,The ZIndex property will override the default value computed from the depth in the hierarchy.,The ZIndex property will override the default value computed from the depth in the hierarchy.,ZIndex 속성은 계층 구조의 깊은 곳에서 계산된 기본값을 재정의합니다.,"Свойство ZIndex переопределяет значение по умолчанию, вычисленное из глубины в иерархии.",ZIndex 属性会覆盖由层次结构底层计算得出的默认值。
Studio.ReflectionMetadata.ReflectionMetadata.ZIndexBehaviorSibling,,,The ZIndex property will control the order that the GuiObject will be rendered relative to its siblings.,The ZIndex property will control the order that the GuiObject will be rendered relative to its siblings.,ZIndex 속성은 GuiObject가 형제를 기준으로 렌더링되는 순서를 제어합니다.,"Свойство ZIndex управляет порядком, в котором изображается GuiObject по отношению к одноуровневым элементам.",ZIndex 属性会控制 GuiObject 相对其同级的渲染顺序。
Studio.ReflectionMetadata.ReflectionMetadata.ScaleType,,,Controls how an image is displayed.,Controls how an image is displayed.,이미지의 표시 방식을 제어합니다.,Управляет визуализацией изображения.,控制图像的显示方式。
Studio.ReflectionMetadata.ReflectionMetadata.ScaleTypeStretch,,,Force the image to fill the available space.,Force the image to fill the available space.,이미지가 이용 가능한 공간을 채우도록 만듭니다.,Заставляет изображение заполнить доступное место.,强制使用图像填充可用空间。
Studio.ReflectionMetadata.ReflectionMetadata.ScaleTypeSlice,,,Use the SliceCenter property to stretch the middle of the image but maintain crisp borders.,Use the SliceCenter property to stretch the middle of the image but maintain crisp borders.,SliceCenter 속성을 사용하여 이미지의 중간 부분을 늘이지만 선명한 테두리를 유지합니다.,"Используйте свойство SliceCenter, чтобы растянуть среднюю часть изображения, сохраняя при этом четкие границы.",使用 SliceCenter 属性拉伸图像中央但维持清晰边缘。
Studio.ReflectionMetadata.ReflectionMetadata.ScaleTypeTile,,,Tile the image using the TileSize property.,Tile the image using the TileSize property.,TileSize 속성을 사용하여 이미지를 타일링합니다.,"Нанесите плитку на изображение, используя свойство TileSize.",使用 TileSize 属性平铺图像。
Studio.ReflectionMetadata.ReflectionMetadata.ScaleTypeFit,,,Size the image to the largest size that will fit in the available space while maintaining aspect ratio.,Size the image to the largest size that will fit in the available space while maintaining aspect ratio.,가로세로 비율을 유지하면서 사용 가능한 공간에 맞는 가장 큰 크기로 이미지 크기를 조정합니다.,"Увеличьте изображения до наибольшего размера, который поместится в доступном пространстве, при сохранении пропорций.",将图像调整为适合可用空间的最大尺寸，同时保持宽高比。
Studio.ReflectionMetadata.ReflectionMetadata.ScaleTypeCrop,,,"Fill the available space, maintaining aspect ratio by cropping the edges if necessary.","Fill the available space, maintaining aspect ratio by cropping the edges if necessary.","사용 가능한 공간을 채우고, 필요한 경우 모서리 부분을 잘라 가로세로 비율을 유지합니다.","Заполните имеющееся пространство, сохраняя пропорцию сторон путем обрезки кромок, если это необходимо.",填充可用空间，必要时通过裁剪边缘来维持宽高比。
Studio.ReflectionMetadata.ReflectionMetadata.StandalonePluginScripts,,,"A container instance that contains Scripts.  Useful only for Plugins.  When Studio starts, we load plugins into the 'UserPlugin' data model and execute Scripts contained in StandalonePluginScripts container. If a plugin doesn't have such a container then the plugin isn't loaded into UserPlugin data model.  When a data model for a place is created (e.g. the Edit data model), we load plugins into said data model and execute only those Scripts which are not contained in StandalonePluginScripts container.","A container instance that contains Scripts.  Useful only for Plugins.  When Studio starts, we load plugins into the 'UserPlugin' data model and execute Scripts contained in StandalonePluginScripts container. If a plugin doesn't have such a container then the plugin isn't loaded into UserPlugin data model.  When a data model for a place is created (e.g. the Edit data model), we load plugins into said data model and execute only those Scripts which are not contained in StandalonePluginScripts container.","스크립트가 들어 있는 컨테이너 인스턴스입니다. 플러그인에만 사용됩니다. Studio가 시작되면 플러그인을 'UserPlugin' 데이터 모델에 로드하고, StandalonePluginScripts 컨테이너에 들어 있는 스크립트를 실행합니다. 플러그인에 이러한 컨테이너가 없으면 플러그인은 UserPlugin 데이터 모델에 로드되지 않습니다. 장소에 대한 데이터 모델이 생성되면(예: 데이터 모델 편집) 플러그인을 해당 데이터 모델에 로드하고 StandalonePluginScripts 컨테이너에 들어 있지 않은 스크립트만 실행합니다.","Экземпляр контейнера, который содержит скрипты. Полезно только для плагинов. Когда Studio запускается, плагины загружаются в модель данных UserPlugin и выполняются скрипты, содержащиеся в контейнере StandalonePluginScripts. Если у плагина нет такого контейнера, то он не загружается в модель данных UserPlugin. Когда создается модель данных для места (например, модель данных Edit), плагины загружаются в указанную модель данных и выполняются только те скрипты, которые не содержатся в контейнере StandalonePluginScripts.",一个包含 Script 的容器实例。仅适合配合插件使用。当 Studio 启动后，我们会将插件载入 'UserPlugin' 数据模型并执行包含在 StandalonePluginScripts 容器中的 Script。若某个插件不包含此容器，则插件不会被载入 UserPlugin 数据模型。在创建一个场景的数据模型（如 Edit 数据模型）后，我们会将插件载入上述数据模型并只执行未包含在 StandalonePluginScripts 容器中的 Script。
Studio.ReflectionMetadata.ReflectionMetadata.SoundLCplay,,,Deprecated. Use Play() instead,Deprecated. Use Play() instead,더 이상 사용되지 않습니다. Play()를 대신 사용하세요.,Устарело. Используйте Play(),已弃用。请改用 Play()
Studio.ReflectionMetadata.ReflectionMetadata.ServiceProviderLCservice,,,Use GetService() instead,Use GetService() instead,GetService()를 대신 사용하세요.,Вместо этого используйте GetService(),请改用 GetService()
Studio.ReflectionMetadata.ReflectionMetadata.InstanceLCclone,,,Use Clone() instead,Use Clone() instead,Clone()을 대신 사용하세요.,Вместо этого используйте Clone(),请改用 Clone()
Studio.ReflectionMetadata.ReflectionMetadata.InstanceLCisA,,,Use IsA() instead,Use IsA() instead,IsA()를 대신 사용하세요.,Вместо этого используйте IsA(),请改用 IsA()
Studio.ReflectionMetadata.ReflectionMetadata.InstanceLCchildren,,,Use GetChildren() instead,Use GetChildren() instead,GetChildren()을 대신 사용하세요.,Вместо этого используйте GetChildren(),请改用 GetChildren()
Studio.ReflectionMetadata.ReflectionMetadata.InstanceLCgetChildren,,,Use GetChildren() instead,Use GetChildren() instead,GetChildren()을 대신 사용하세요.,Вместо этого используйте GetChildren(),请改用 GetChildren()
Studio.ReflectionMetadata.ReflectionMetadata.InstanceLCremove,,,Use Remove() instead,Use Remove() instead,Remove()를 대신 사용하세요.,Вместо этого используйте Remove(),请改用 Remove()
Studio.ReflectionMetadata.ReflectionMetadata.InstanceLCfindFirstChild,,,Use FindFirstChild() instead,Use FindFirstChild() instead,FindFirstChild()를 대신 사용하세요.,Вместо этого используйте FindFirstChild(),请改用 FindFirstChild()
Studio.ReflectionMetadata.ReflectionMetadata.BodyGyroLCmaxTorque,,,Use MaxTorque instead,Use MaxTorque instead,MaxTorque를 대신 사용하세요.,Вместо этого используйте MaxTorque,请改用 MaxTorque
Studio.ReflectionMetadata.ReflectionMetadata.BodyGyroLCcframe,,,Use CFrame instead,Use CFrame instead,CFrame을 대신 사용하세요.,Вместо этого используйте CFrame,请改用 CFrame
Studio.ReflectionMetadata.ReflectionMetadata.BodyPositionLCmaxForce,,,Use MaxForce instead,Use MaxForce instead,MaxForce를 대신 사용하세요.,Вместо этого используйте MaxForce,请改用 MaxForce
Studio.ReflectionMetadata.ReflectionMetadata.BodyPositionLCposition,,,Use position instead,Use position instead,Position을 대신 사용하세요.,Вместо этого используйте положение,请改用 position
Studio.ReflectionMetadata.ReflectionMetadata.BodyVelocityLCmaxForce,,,Use MaxForce instead,Use MaxForce instead,MaxForce를 대신 사용하세요.,Вместо этого используйте MaxForce,请改用 MaxForce
Studio.ReflectionMetadata.ReflectionMetadata.BodyVelocityLCvelocity,,,Use Velocity instead,Use Velocity instead,Velocity를 대신 사용하세요.,Вместо этого используйте Velocity,请改用 Velocity
Studio.ReflectionMetadata.ReflectionMetadata.BodyThrustLCforce,,,Use Force instead,Use Force instead,Force를 대신 사용하세요.,Вместо этого используйте Force,请改用 Force
Studio.ReflectionMetadata.ReflectionMetadata.BodyThrustLClocation,,,Use Location instead,Use Location instead,Location을 대신 사용하세요.,Вместо этого используйте Location,请改用 Location
Studio.ReflectionMetadata.ReflectionMetadata.ModelLCmakeJoints,,,Use MakeJoints() instead,Use MakeJoints() instead,MakeJoints()를 대신 사용하세요.,Вместо этого используйте MakeJoints(),请改用 MakeJoints()
Studio.ReflectionMetadata.ReflectionMetadata.ModelLCmove,,,Use MoveTo() instead,Use MoveTo() instead,MoveTo()를 대신 사용하세요.,Вместо этого используйте MoveTo(),请改用 MoveTo()
Studio.ReflectionMetadata.ReflectionMetadata.StatusLCmove,,,Use MoveTo() instead,Use MoveTo() instead,MoveTo()를 대신 사용하세요.,Вместо этого используйте MoveTo(),请改用 MoveTo()
Studio.ReflectionMetadata.ReflectionMetadata.DataModelLCworkspace,,,Deprecated. Use Workspace,Deprecated. Use Workspace,더 이상 사용되지 않습니다. Workspace를 사용하세요.,Устарело. Используйте Workspace,已弃用。请使用工作区
Studio.ReflectionMetadata.ReflectionMetadata.PlayersLCplayers,,,Use GetPlayers() instead,Use GetPlayers() instead,GetPlayers()를 대신 사용하세요.,Вместо этого используйте GetPlayers(),请改用 GetPlayers()
Studio.ReflectionMetadata.ReflectionMetadata.DebrisLCaddItem,,,Use AddItem() instead,Use AddItem() instead,AddItem()을 대신 사용하세요.,Вместо этого используйте AddItem(),请改用 AddItem()
Studio.ReflectionMetadata.ReflectionMetadata.PlayerLCplayerFromCharacter,,,Use GetPlayerFromCharacter() instead,Use GetPlayerFromCharacter() instead,GetPlayerFromCharacter()를 대신 사용하세요.,Вместо этого используйте GetPlayerFromCharacter(),请改用 GetPlayerFromCharacter()
Studio.ReflectionMetadata.ReflectionMetadata.BasePartLCmakeJoints,,,Use MakeJoints() instead,Use MakeJoints() instead,MakeJoints()를 대신 사용하세요.,Вместо этого используйте MakeJoints(),请改用 MakeJoints()
Studio.ReflectionMetadata.ReflectionMetadata.BasePartLCgetMass,,,Use GetMass() instead,Use GetMass() instead,GetMass()를 대신 사용하세요.,Вместо этого используйте GetMass(),请改用 GetMass()
Studio.ReflectionMetadata.ReflectionMetadata.SphereHandleAdornment,,,The SphereHandleAdornment is a sphere that can be adorned to a BasePart.,The SphereHandleAdornment is a sphere that can be adorned to a BasePart.,SphereHandleAdornment는 BasePart에 장식할 수 있는 구체입니다.,"SphereHandleAdornment - это сфера, которую можно присоединить к BasePart.",
Studio.ReflectionMetadata.ReflectionMetadata.FileSyncItemFileSystemPath,,,Path of file system,Path of file system,파일 시스템 경로,Путь к системе файлов,
Studio.ReflectionMetadata.ReflectionMetadata.UIGradientRotation,,,Clockwise rotation in degrees.,Clockwise rotation in degrees.,시계 방향으로 회전합니다(각도).,Вращение по часовой стрелке в градусах.,
Studio.ReflectionMetadata.ReflectionMetadata.TerrainDecoration,,,Enables terrain materials decoration,Enables terrain materials decoration,지형 재질 장식 사용,Включает украшение материалов рельефа,
Studio.ReflectionMetadata.ReflectionMetadata.WorldModel,,,"An object that contains a World. Supports rigid joints. Unlike Workspace, WorldModels do not support dynamics simulation.","An object that contains a World. Supports rigid joints. Unlike Workspace, WorldModels do not support dynamics simulation.",월드를 포함하는 개체입니다. 고정식 이음을 지원합니다. Workspace와 달리 WorldModels는 다이내믹 시뮬레이션을 지원하지 않습니다.,"Объект, в котором содержится Мир. Поддерживает жесткие соединения. В отличие от Workspace, WorldModels не поддерживает динамическую симуляцию.",
Studio.ReflectionMetadata.ReflectionMetadata.LineHandleAdornment,,,The LineHandleAdornment is a line that can be adorned to a BasePart.,The LineHandleAdornment is a line that can be adorned to a BasePart.,LineHandleAdornment는 BasePart에 장식할 수 있는 선입니다.,"LineHandleAdornment - это строка, которую можно присоединить к BasePart.",
Studio.ReflectionMetadata.ReflectionMetadata.UIGradientColor,,,The (sequence of) color3 of the gradient.,The (sequence of) color3 of the gradient.,그레디언트의 color3 (시퀀스)입니다.,(Последовательность) 3 цвета градиента.,
Studio.ReflectionMetadata.ReflectionMetadata.LightingEnvironmentSpecularScale,,,Sets scale [0-1] of Specular Environment Lighting to add to Ambient.,Sets scale [0-1] of Specular Environment Lighting to add to Ambient.,앰비언트에 추가할 Specular Environment Lighting의 스케일[0-1]을 설정합니다.,Устанавливает шкалу [0-1] для добавления в окружение зеркального освещения.,
Studio.ReflectionMetadata.ReflectionMetadata.FileSyncItemTarget,,,Target Instance in DataModel,Target Instance in DataModel,DataModel의 목표 인스턴스,Целевой экземпляр в DataModel,
Studio.ReflectionMetadata.ReflectionMetadata.ConeHandleAdornment,,,A ConeHandleAdornment is a cone that can be adorned to a BasePart.,A ConeHandleAdornment is a cone that can be adorned to a BasePart.,ConeHandleAdornment는 BasePart에 장식할 수 있는 원뿔입니다.,"ConeHandleAdornment - это конус, который можно присоединить к BasePart.",
Studio.ReflectionMetadata.ReflectionMetadata.ImageHandleAdornment,,,The ImageHandleAdornment is an image that can be adorned to a BasePart.,The ImageHandleAdornment is an image that can be adorned to a BasePart.,ImageHandleAdornment는 BasePart에 장식할 수 있는 이미지입니다.,"ImageHandleAdornment - это изображение, которое можно присоединить к BasePart.",
Studio.ReflectionMetadata.ReflectionMetadata.Motor6D,,,The Motor6D object is used to make movable joints between two Parts.,The Motor6D object is used to make movable joints between two Parts.,Motor6D 개체는 두 파트 사이에서 움직일 수 있는 이음을 만드는 데 사용됩니다.,Объект Motor6D используется для создания подвижных соединений между двумя фрагментами.,
Studio.ReflectionMetadata.ReflectionMetadata.BoxHandleAdornment,,,The BoxHandleAdornment is a rectangular prism that can be adorned to a BasePart.,The BoxHandleAdornment is a rectangular prism that can be adorned to a BasePart.,BoxHandleAdornment는 BasePart에 장식할 수 있는 직사각형 프리즘입니다.,"BoxHandleAdornment - это прямоугольная призма, которую можно присоединить к BasePart.",
Studio.ReflectionMetadata.ReflectionMetadata.UIGradient,,,Apply a gradient to the parent GuiObject.,Apply a gradient to the parent GuiObject.,부모 GuiObject에 그레디언트를 적용하세요.,Нанесите градиент на родительский объект GuiObject.,
Studio.ReflectionMetadata.ReflectionMetadata.FileSyncItemEnabled,,,Enabling File Sync,Enabling File Sync,파일 동기화 사용,Включает синхронизацию файлов,
Studio.ReflectionMetadata.ReflectionMetadata.CylinderHandleAdornment,,,The CylinderHandleAdornment is a cylinder that can be adorned to a BasePart.,The CylinderHandleAdornment is a cylinder that can be adorned to a BasePart.,CylinderHandleAdornment는 BasePart에 장식할 수 있는 원통입니다.,"CylinderHandleAdornment - это цилиндр, который можно присоединить к BasePart.",
Studio.ReflectionMetadata.ReflectionMetadata.LightingEnvironmentDiffuseScale,,,Sets scale [0-1] of Diffuse Environment Lighting to add to Ambient.,Sets scale [0-1] of Diffuse Environment Lighting to add to Ambient.,앰비언트에 추가할 Diffuse Environment Lighting의 스케일[0-1]을 설정합니다.,Устанавливает шкалу [0-1] для добавления в окружение рассеянного освещения.,
Studio.ReflectionMetadata.ReflectionMetadata.UIGradientOffset,,,Offset of gradient center in scale.,Offset of gradient center in scale.,스케일에서 그레디언트 중심의 오프셋입니다.,Смещение центра градиента по шкале.,
Studio.ReflectionMetadata.ReflectionMetadata.UIGradientTransparency,,,The (sequence of) transparency of the gradient.,The (sequence of) transparency of the gradient.,그레디언트의 투명도 (시퀀스)입니다.,(Последовательность) прозрачности градиента.,
